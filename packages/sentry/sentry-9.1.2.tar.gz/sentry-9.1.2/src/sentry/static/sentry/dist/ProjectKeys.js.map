{"version":3,"sources":["webpack:///./app/views/settings/components/forms/textCopyInput.jsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.jsx","webpack:///./app/views/settings/project/projectKeys/index.jsx"],"names":["StyledInput","styled","props","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","target","inputStyles","p","theme","offWhite","OverflowContainer","StyledCopyButton","Button","TextCopyInput","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","handleCopyClick","e","textRef","current","onCopy","handleSelectText","children","stopPropagation","selectText","ReactDOM","findDOMNode","React","createRef","_this$props","style","grid_emotion__WEBPACK_IMPORTED_MODULE_5__","readOnly","ref","value","onClick","app_components_clipboard__WEBPACK_IMPORTED_MODULE_13__","hideUnsupported","type","size","app_components_inlineSvg__WEBPACK_IMPORTED_MODULE_14__","src","Component","propTypes","PropTypes","string","isRequired","object","func","defaultProps","ProjectKeyCredentials","projectId","data","showDsn","showDsnPublic","showSecurityEndpoint","showMinidump","showUnreal","showPublicKey","showSecretKey","showProjectId","react__WEBPACK_IMPORTED_MODULE_6___default","Fragment","app_views_settings_components_forms_field__WEBPACK_IMPORTED_MODULE_9__","label","t","inline","flexibleControlStateSize","app_views_settings_components_forms_textCopyInput__WEBPACK_IMPORTED_MODULE_10__","getDynamicText","dsn","public","fixed","help","secret","security","tct","link","app_components_externalLink__WEBPACK_IMPORTED_MODULE_8__","href","minidump","unreal","SentryTypes","ProjectKey","bool","KeyRow","createReactClass","displayName","orgId","access","onToggle","onRemove","mixins","ApiMixin","getInitialState","loading","error","handleRemove","state","loadingIndicator","addLoadingMessage","api","request","concat","id","method","success","d","_","jqXHR","removeIndicator","addSuccessMessage","setState","addErrorMessage","handleUpdate","params","cb","_this2","_this$props2","handleEnable","isActive","handleDisable","render","_this$props3","editUrl","recreateRoute","controlActive","has","controls","react__WEBPACK_IMPORTED_MODULE_11___default","app_components_button__WEBPACK_IMPORTED_MODULE_19__","key","to","disabled","app_components_confirm__WEBPACK_IMPORTED_MODULE_21__","priority","onConfirm","confirmText","message","icon","ClientKeyItemPanel","app_components_panels__WEBPACK_IMPORTED_MODULE_25__","hasButtons","grid_emotion__WEBPACK_IMPORTED_MODULE_7__","flex","PanelHeaderLink","className","align","map","c","n","KeyControl","app_components_clippedBox__WEBPACK_IMPORTED_MODULE_20__","clipHeight","defaultClipped","btnText","app_views_settings_project_projectKeys_projectKeyCredentials__WEBPACK_IMPORTED_MODULE_26__","ProjectKeys","handleRemoveKey","_this3","keyList","filter","handleToggleKey","newData","forEach","handleCreateKey","_this3$props$params","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default","_this$props$params","app_views_settings_components_emptyMessage__WEBPACK_IMPORTED_MODULE_22__","description","_this4","_this$props4","routes","getOrganizationState","context","organization","getAccess","bind","app_components_pagination__WEBPACK_IMPORTED_MODULE_24__","pageLinks","keyListPageLinks","isEmpty","length","react_document_title__WEBPACK_IMPORTED_MODULE_9___default","title","app_views_settings_components_settingsPageHeader__WEBPACK_IMPORTED_MODULE_28__","action","app_views_settings_components_text_textBlock__WEBPACK_IMPORTED_MODULE_29__","app_components_externalLink__WEBPACK_IMPORTED_MODULE_23__","code","renderEmpty","renderResults","AsyncView","array","contextTypes","Organization","project","Project","_ref","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","Link","gray3"],"mappings":"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","file":"ProjectKeys.js","sourcesContent":["import {Flex} from 'grid-emotion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'react-emotion';\n\nimport {inputStyles} from 'app/styles/input';\nimport {selectText} from 'app/utils/selectText';\nimport Button from 'app/components/button';\nimport Clipboard from 'app/components/clipboard';\nimport InlineSvg from 'app/components/inlineSvg';\n\nconst StyledInput = styled(props => {\n  return <input {...props} />;\n})`\n  ${inputStyles};\n  background-color: ${p => p.theme.offWhite};\n  border-right-width: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.offWhite};\n    border-right-width: 0;\n  }\n`;\n\nconst OverflowContainer = styled('div')`\n  flex-grow: 1;\n  border: none;\n`;\n\nconst StyledCopyButton = styled(Button)`\n  flex-shrink: 1;\n  border-radius: 0 0.25em 0.25em 0;\n  box-shadow: none;\n`;\n\nclass TextCopyInput extends React.Component {\n  static propTypes = {\n    /**\n     * Text to copy\n     */\n    children: PropTypes.string.isRequired,\n    /**\n     * CSS style object\n     */\n    style: PropTypes.object,\n    onCopy: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onCopy: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.textRef = React.createRef();\n  }\n\n  // Select text when copy button is clicked\n  handleCopyClick = e => {\n    if (!this.textRef.current) {\n      return;\n    }\n\n    const {onCopy} = this.props;\n\n    this.handleSelectText();\n\n    onCopy(this.props.children, e);\n\n    e.stopPropagation();\n  };\n\n  handleSelectText = () => {\n    if (!this.textRef.current) {\n      return;\n    }\n\n    // We use findDOMNode here because `this.textRef` is not a dom node,\n    // it's a ref to AutoSelectText\n    selectText(ReactDOM.findDOMNode(this.textRef.current));\n  };\n\n  render() {\n    const {style, children} = this.props;\n\n    return (\n      <Flex>\n        <OverflowContainer>\n          <StyledInput\n            readOnly\n            ref={this.textRef}\n            style={style}\n            value={children}\n            onClick={this.handleSelectText}\n          />\n        </OverflowContainer>\n        <Clipboard hideUnsupported onClick={this.handleCopyClick} value={children}>\n          <StyledCopyButton type=\"button\" size=\"xsmall\" onClick={this.handleCopyClick}>\n            <InlineSvg src=\"icon-clipboard\" size=\"1.25em\" />\n          </StyledCopyButton>\n        </Clipboard>\n      </Flex>\n    );\n  }\n}\n\nexport default TextCopyInput;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t, tct} from 'app/locale';\nimport ExternalLink from 'app/components/externalLink';\nimport Field from 'app/views/settings/components/forms/field';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport SentryTypes from 'app/sentryTypes';\nimport getDynamicText from 'app/utils/getDynamicText';\n\nclass ProjectKeyCredentials extends React.Component {\n  static propTypes = {\n    projectId: PropTypes.string.isRequired,\n    data: SentryTypes.ProjectKey,\n\n    showDsn: PropTypes.bool,\n    showDsnPublic: PropTypes.bool,\n    showSecurityEndpoint: PropTypes.bool,\n    showMinidump: PropTypes.bool,\n    showUnreal: PropTypes.bool,\n    showPublicKey: PropTypes.bool,\n    showSecretKey: PropTypes.bool,\n    showProjectId: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    showDsn: true,\n    showDsnPublic: true,\n    showSecurityEndpoint: true,\n    showMinidump: true,\n    showUnreal: true,\n    showPublicKey: false,\n    showSecretKey: false,\n    showProjectId: false,\n  };\n\n  render() {\n    const {\n      projectId,\n      data,\n      showDsn,\n      showDsnPublic,\n      showSecurityEndpoint,\n      showMinidump,\n      showUnreal,\n      showPublicKey,\n      showSecretKey,\n      showProjectId,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        {showDsnPublic && (\n          <Field label={t('DSN')} inline={false} flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.public,\n                fixed: '__DSN__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showDsn && (\n          <Field\n            label={t('DSN (Deprecated)')}\n            help={t(\n              \"This DSN includes the secret which is no longer required by Sentry' newer versions of SDKs. If you are unsure which to use, follow installation instructions for your language.\"\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.secret,\n                fixed: '__DSN_DEPRECATED__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showSecurityEndpoint && (\n          <Field\n            label={t('Security Header Endpoint')}\n            help={t(\n              'Use your security header endpoint for features like CSP and Expect-CT reports.'\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.security,\n                fixed: '__SECURITY_HEADER_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showMinidump && (\n          <Field\n            label={t('Minidump Endpoint')}\n            help={tct(\n              'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/clients/minidump/\">\n                    minidump crash reports\n                  </ExternalLink>\n                ),\n              }\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.minidump,\n                fixed: '__MINIDUMP_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showUnreal && (\n          <Field\n            label={t('Unreal Engine 4 Endpoint')}\n            help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.unreal || '',\n                fixed: '__UNREAL_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showPublicKey && (\n          <Field label={t('Public Key')} inline={true} flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.public,\n                fixed: '__PUBLICKEY__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showSecretKey && (\n          <Field label={t('Secret Key')} inline={true} flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.secret,\n                fixed: '__SECRETKEY__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showProjectId && (\n          <Field label={t('Project ID')} inline={true} flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: projectId,\n                fixed: '__PROJECTID__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n      </React.Fragment>\n    );\n  }\n}\nexport default ProjectKeyCredentials;\n","import {Box, Flex} from 'grid-emotion';\nimport {Link} from 'react-router';\nimport DocumentTitle from 'react-document-title';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport styled from 'react-emotion';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n  removeIndicator,\n} from 'app/actionCreators/indicator';\nimport {getOrganizationState} from 'app/mixins/organizationState';\nimport {t, tct} from 'app/locale';\nimport ApiMixin from 'app/mixins/apiMixin';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport ClippedBox from 'app/components/clippedBox';\nimport Confirm from 'app/components/confirm';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport ExternalLink from 'app/components/externalLink';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport ProjectKeyCredentials from 'app/views/settings/project/projectKeys/projectKeyCredentials';\nimport SentryTypes from 'app/sentryTypes';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport recreateRoute from 'app/utils/recreateRoute';\n\nconst KeyRow = createReactClass({\n  displayName: 'KeyRow',\n\n  propTypes: {\n    orgId: PropTypes.string.isRequired,\n    projectId: PropTypes.string.isRequired,\n    data: PropTypes.object.isRequired,\n    access: PropTypes.object.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n  },\n\n  mixins: [ApiMixin],\n\n  getInitialState() {\n    return {\n      loading: false,\n      error: false,\n    };\n  },\n\n  handleRemove() {\n    if (this.state.loading) {\n      return;\n    }\n\n    const loadingIndicator = addLoadingMessage(t('Saving changes..'));\n    const {orgId, projectId, data} = this.props;\n    this.api.request(`/projects/${orgId}/${projectId}/keys/${data.id}/`, {\n      method: 'DELETE',\n      success: (d, _, jqXHR) => {\n        this.props.onRemove();\n        removeIndicator(loadingIndicator);\n        addSuccessMessage(t('Revoked key'));\n      },\n      error: () => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n        removeIndicator(loadingIndicator);\n        addErrorMessage(t('Unable to revoke key'));\n      },\n    });\n  },\n\n  handleUpdate(params, cb) {\n    if (this.state.loading) {\n      return;\n    }\n    const loadingIndicator = addLoadingMessage(t('Saving changes..'));\n    const {orgId, projectId, data} = this.props;\n    this.api.request(`/projects/${orgId}/${projectId}/keys/${data.id}/`, {\n      method: 'PUT',\n      data: params,\n      success: (d, _, jqXHR) => {\n        removeIndicator(loadingIndicator);\n        cb(d);\n      },\n      error: () => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n        removeIndicator(loadingIndicator);\n      },\n    });\n  },\n\n  handleEnable() {\n    this.handleUpdate(\n      {\n        isActive: true,\n      },\n      this.props.onToggle\n    );\n  },\n\n  handleDisable() {\n    this.handleUpdate(\n      {\n        isActive: false,\n      },\n      this.props.onToggle\n    );\n  },\n\n  render() {\n    const {access, data} = this.props;\n    const editUrl = recreateRoute(`${data.id}/`, this.props);\n    const controlActive = access.has('project:write') && !this.state.loading;\n\n    const controls = [\n      <Button key=\"edit\" to={editUrl} size=\"small\">\n        {t('Configure')}\n      </Button>,\n      <Button\n        key=\"toggle\"\n        size=\"small\"\n        onClick={data.isActive ? this.handleDisable : this.handleEnable}\n        disabled={!controlActive}\n      >\n        {data.isActive ? t('Disable') : t('Enable')}\n      </Button>,\n      <Confirm\n        key=\"remove\"\n        priority=\"danger\"\n        disabled={!controlActive}\n        onConfirm={this.handleRemove}\n        confirmText={t('Remove Key')}\n        message={t(\n          'Are you sure you want to remove this key? This action is irreversible.'\n        )}\n      >\n        <Button size=\"small\" disabled={!controlActive} icon=\"icon-trash\" />\n      </Confirm>,\n    ];\n\n    return (\n      <ClientKeyItemPanel disabled={!data.isActive}>\n        <PanelHeader hasButtons>\n          <Box flex=\"1\">\n            <PanelHeaderLink to={editUrl}>{data.label}</PanelHeaderLink>\n            {!data.isActive && (\n              <small>\n                {' '}\n                <i className=\"icon icon-ban\" /> {t('Disabled')}\n              </small>\n            )}\n          </Box>\n          <Flex align=\"center\">\n            {controls.map((c, n) => <KeyControl key={n}> {c}</KeyControl>)}\n          </Flex>\n        </PanelHeader>\n\n        <ClippedBox clipHeight={300} defaultClipped={true} btnText={t('Expand')}>\n          <PanelBody>\n            <ProjectKeyCredentials projectId={`${data.projectId}`} data={data} />\n          </PanelBody>\n        </ClippedBox>\n      </ClientKeyItemPanel>\n    );\n  },\n});\n\nexport default class ProjectKeys extends AsyncView {\n  static propTypes = {\n    routes: PropTypes.array.isRequired,\n    params: PropTypes.object.isRequired,\n  };\n\n  static contextTypes = {\n    organization: SentryTypes.Organization,\n    project: SentryTypes.Project,\n  };\n\n  getTitle() {\n    return t('Client Keys');\n  }\n\n  getEndpoints() {\n    const {orgId, projectId} = this.props.params;\n    return [['keyList', `/projects/${orgId}/${projectId}/keys/`]];\n  }\n\n  handleRemoveKey = data => {\n    this.setState(state => {\n      return {\n        keyList: state.keyList.filter(key => {\n          return key.id !== data.id;\n        }),\n      };\n    });\n  };\n\n  handleToggleKey = (data, newData) => {\n    this.setState(state => {\n      const keyList = state.keyList;\n      keyList.forEach(key => {\n        if (key.id === data.id) {\n          key.isActive = newData.isActive;\n        }\n      });\n      return {keyList};\n    });\n  };\n\n  handleCreateKey = () => {\n    const {orgId, projectId} = this.props.params;\n    this.api.request(`/projects/${orgId}/${projectId}/keys/`, {\n      method: 'POST',\n      success: (data, _, jqXHR) => {\n        this.setState(state => {\n          return {\n            keyList: [...state.keyList, data],\n          };\n        });\n        addSuccessMessage(t('Created a new key.'));\n      },\n      error: () => {\n        addErrorMessage(t('Unable to create new key. Please try again.'));\n      },\n    });\n  };\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <EmptyMessage\n          icon=\"icon-circle-exclamation\"\n          description={t('There are no keys active for this project.')}\n        />\n      </Panel>\n    );\n  }\n\n  renderResults() {\n    const {routes, params} = this.props;\n    const {orgId, projectId} = params;\n    const access = getOrganizationState(this.context.organization).getAccess();\n\n    return (\n      <div>\n        <div>\n          {this.state.keyList.map(key => {\n            return (\n              <KeyRow\n                api={this.api}\n                routes={routes}\n                params={params}\n                access={access}\n                key={key.id}\n                orgId={orgId}\n                projectId={`${projectId}`}\n                data={key}\n                onToggle={this.handleToggleKey.bind(this, key)}\n                onRemove={this.handleRemoveKey.bind(this, key)}\n              />\n            );\n          })}\n        </div>\n        <Pagination pageLinks={this.state.keyListPageLinks} />\n      </div>\n    );\n  }\n\n  renderBody() {\n    const access = getOrganizationState(this.context.organization).getAccess();\n    const isEmpty = !this.state.keyList.length;\n\n    return (\n      <DocumentTitle title={t('Client Keys')}>\n        <div className=\"ref-keys\">\n          <SettingsPageHeader\n            title={t('Client Keys')}\n            action={\n              access.has('project:write') ? (\n                <Button\n                  onClick={this.handleCreateKey}\n                  size=\"small\"\n                  priority=\"primary\"\n                  icon=\"icon-circle-add\"\n                >\n                  {t('Generate New Key')}\n                </Button>\n              ) : null\n            }\n          />\n          <TextBlock>\n            {tct(\n              `To send data to Sentry you will need to configure an SDK with a client key\n            (usually referred to as the [code:SENTRY_DSN] value). For more\n            information on integrating Sentry with your application take a look at our\n            [link:documentation].`,\n              {\n                link: <ExternalLink href=\"https://docs.sentry.io/\" />,\n                code: <code />,\n              }\n            )}\n          </TextBlock>\n\n          {isEmpty ? this.renderEmpty() : this.renderResults()}\n        </div>\n      </DocumentTitle>\n    );\n  }\n}\n\nconst ClientKeyItemPanel = styled(({disabled, ...props}) => <Panel {...props} />)`\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n\n  .box-clippable {\n    padding: 0;\n    margin: 0;\n\n    .clip-fade {\n      padding-bottom: 20px;\n    }\n  }\n`;\n\nconst PanelHeaderLink = styled(Link)`\n  color: ${p => p.theme.gray3};\n`;\n\nconst KeyControl = styled.span`\n  margin-left: 6px;\n`;\n"],"sourceRoot":""}