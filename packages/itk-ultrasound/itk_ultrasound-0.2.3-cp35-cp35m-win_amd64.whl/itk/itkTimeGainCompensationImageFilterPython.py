# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkTimeGainCompensationImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkTimeGainCompensationImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkTimeGainCompensationImageFilterPython
            return _itkTimeGainCompensationImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkTimeGainCompensationImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkTimeGainCompensationImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkTimeGainCompensationImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterAPython
import itkImageRegionPython
import ITKCommonBasePython
import pyBasePython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImageToImageFilterCommonPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkRGBPixelPython
import itkFixedArrayPython
import itkPointPython
import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkCurvilinearArraySpecialCoordinatesImagePython
import itkSimpleDataObjectDecoratorPython
import itkArrayPython
import ITKIOImageBaseBasePython
import itkContinuousIndexPython
import itkTransformBasePython
import itkOptimizerParametersPython
import itkDiffusionTensor3DPython
import itkSpectra1DSupportWindowImageFilterPython

def itkTimeGainCompensationImageFilterIF3_New():
  return itkTimeGainCompensationImageFilterIF3.New()


def itkTimeGainCompensationImageFilterCASCIF3_New():
  return itkTimeGainCompensationImageFilterCASCIF3.New()


def itkTimeGainCompensationImageFilterIUS3_New():
  return itkTimeGainCompensationImageFilterIUS3.New()


def itkTimeGainCompensationImageFilterCASCIUS3_New():
  return itkTimeGainCompensationImageFilterCASCIUS3.New()


def itkTimeGainCompensationImageFilterIUC3_New():
  return itkTimeGainCompensationImageFilterIUC3.New()


def itkTimeGainCompensationImageFilterCASCIUC3_New():
  return itkTimeGainCompensationImageFilterCASCIUC3.New()


def itkTimeGainCompensationImageFilterISS3_New():
  return itkTimeGainCompensationImageFilterISS3.New()


def itkTimeGainCompensationImageFilterCASCISS3_New():
  return itkTimeGainCompensationImageFilterCASCISS3.New()


def itkTimeGainCompensationImageFilterIF2_New():
  return itkTimeGainCompensationImageFilterIF2.New()


def itkTimeGainCompensationImageFilterCASCIF2_New():
  return itkTimeGainCompensationImageFilterCASCIF2.New()


def itkTimeGainCompensationImageFilterIUS2_New():
  return itkTimeGainCompensationImageFilterIUS2.New()


def itkTimeGainCompensationImageFilterCASCIUS2_New():
  return itkTimeGainCompensationImageFilterCASCIUS2.New()


def itkTimeGainCompensationImageFilterIUC2_New():
  return itkTimeGainCompensationImageFilterIUC2.New()


def itkTimeGainCompensationImageFilterCASCIUC2_New():
  return itkTimeGainCompensationImageFilterCASCIUC2.New()


def itkTimeGainCompensationImageFilterISS2_New():
  return itkTimeGainCompensationImageFilterISS2.New()


def itkTimeGainCompensationImageFilterCASCISS2_New():
  return itkTimeGainCompensationImageFilterCASCISS2.New()

class itkTimeGainCompensationImageFilterCASCIF2(itkCurvilinearArraySpecialCoordinatesImagePython.itkCastImageFilterCASCIF2CASCIF2_Superclass_Superclass):
    """Proxy of C++ itkTimeGainCompensationImageFilterCASCIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterCASCIF2_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterCASCIF2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterCASCIF2_Pointer":
        """Clone(itkTimeGainCompensationImageFilterCASCIF2 self) -> itkTimeGainCompensationImageFilterCASCIF2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF2_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterCASCIF2 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF2_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterCASCIF2 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF2_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterCASCIF2

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCIF2 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCIF2"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterCASCIF2

        Create a new object of the class itkTimeGainCompensationImageFilterCASCIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterCASCIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterCASCIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterCASCIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterCASCIF2.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF2_Clone, None, itkTimeGainCompensationImageFilterCASCIF2)
itkTimeGainCompensationImageFilterCASCIF2.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF2_SetGain, None, itkTimeGainCompensationImageFilterCASCIF2)
itkTimeGainCompensationImageFilterCASCIF2.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF2_GetGain, None, itkTimeGainCompensationImageFilterCASCIF2)
itkTimeGainCompensationImageFilterCASCIF2_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF2_swigregister
itkTimeGainCompensationImageFilterCASCIF2_swigregister(itkTimeGainCompensationImageFilterCASCIF2)

def itkTimeGainCompensationImageFilterCASCIF2___New_orig__() -> "itkTimeGainCompensationImageFilterCASCIF2_Pointer":
    """itkTimeGainCompensationImageFilterCASCIF2___New_orig__() -> itkTimeGainCompensationImageFilterCASCIF2_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF2___New_orig__()

def itkTimeGainCompensationImageFilterCASCIF2_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCIF2 *":
    """itkTimeGainCompensationImageFilterCASCIF2_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCIF2"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF2_cast(obj)

class itkTimeGainCompensationImageFilterCASCIF3(itkCurvilinearArraySpecialCoordinatesImagePython.itkCastImageFilterCASCIF3CASCIF3_Superclass_Superclass):
    """Proxy of C++ itkTimeGainCompensationImageFilterCASCIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterCASCIF3_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterCASCIF3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterCASCIF3_Pointer":
        """Clone(itkTimeGainCompensationImageFilterCASCIF3 self) -> itkTimeGainCompensationImageFilterCASCIF3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF3_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterCASCIF3 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF3_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterCASCIF3 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF3_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterCASCIF3

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCIF3 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCIF3"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterCASCIF3

        Create a new object of the class itkTimeGainCompensationImageFilterCASCIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterCASCIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterCASCIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterCASCIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterCASCIF3.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF3_Clone, None, itkTimeGainCompensationImageFilterCASCIF3)
itkTimeGainCompensationImageFilterCASCIF3.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF3_SetGain, None, itkTimeGainCompensationImageFilterCASCIF3)
itkTimeGainCompensationImageFilterCASCIF3.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF3_GetGain, None, itkTimeGainCompensationImageFilterCASCIF3)
itkTimeGainCompensationImageFilterCASCIF3_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF3_swigregister
itkTimeGainCompensationImageFilterCASCIF3_swigregister(itkTimeGainCompensationImageFilterCASCIF3)

def itkTimeGainCompensationImageFilterCASCIF3___New_orig__() -> "itkTimeGainCompensationImageFilterCASCIF3_Pointer":
    """itkTimeGainCompensationImageFilterCASCIF3___New_orig__() -> itkTimeGainCompensationImageFilterCASCIF3_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF3___New_orig__()

def itkTimeGainCompensationImageFilterCASCIF3_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCIF3 *":
    """itkTimeGainCompensationImageFilterCASCIF3_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCIF3"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIF3_cast(obj)

class itkTimeGainCompensationImageFilterCASCISS2(itkCurvilinearArraySpecialCoordinatesImagePython.itkCastImageFilterCASCISS2CASCISS2_Superclass_Superclass):
    """Proxy of C++ itkTimeGainCompensationImageFilterCASCISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterCASCISS2_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterCASCISS2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterCASCISS2_Pointer":
        """Clone(itkTimeGainCompensationImageFilterCASCISS2 self) -> itkTimeGainCompensationImageFilterCASCISS2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS2_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterCASCISS2 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS2_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterCASCISS2 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS2_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterCASCISS2

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCISS2 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCISS2"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterCASCISS2

        Create a new object of the class itkTimeGainCompensationImageFilterCASCISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterCASCISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterCASCISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterCASCISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterCASCISS2.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS2_Clone, None, itkTimeGainCompensationImageFilterCASCISS2)
itkTimeGainCompensationImageFilterCASCISS2.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS2_SetGain, None, itkTimeGainCompensationImageFilterCASCISS2)
itkTimeGainCompensationImageFilterCASCISS2.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS2_GetGain, None, itkTimeGainCompensationImageFilterCASCISS2)
itkTimeGainCompensationImageFilterCASCISS2_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS2_swigregister
itkTimeGainCompensationImageFilterCASCISS2_swigregister(itkTimeGainCompensationImageFilterCASCISS2)

def itkTimeGainCompensationImageFilterCASCISS2___New_orig__() -> "itkTimeGainCompensationImageFilterCASCISS2_Pointer":
    """itkTimeGainCompensationImageFilterCASCISS2___New_orig__() -> itkTimeGainCompensationImageFilterCASCISS2_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS2___New_orig__()

def itkTimeGainCompensationImageFilterCASCISS2_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCISS2 *":
    """itkTimeGainCompensationImageFilterCASCISS2_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCISS2"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS2_cast(obj)

class itkTimeGainCompensationImageFilterCASCISS3(itkCurvilinearArraySpecialCoordinatesImagePython.itkCastImageFilterCASCISS3CASCISS3_Superclass_Superclass):
    """Proxy of C++ itkTimeGainCompensationImageFilterCASCISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterCASCISS3_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterCASCISS3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterCASCISS3_Pointer":
        """Clone(itkTimeGainCompensationImageFilterCASCISS3 self) -> itkTimeGainCompensationImageFilterCASCISS3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS3_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterCASCISS3 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS3_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterCASCISS3 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS3_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterCASCISS3

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCISS3 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCISS3"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterCASCISS3

        Create a new object of the class itkTimeGainCompensationImageFilterCASCISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterCASCISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterCASCISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterCASCISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterCASCISS3.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS3_Clone, None, itkTimeGainCompensationImageFilterCASCISS3)
itkTimeGainCompensationImageFilterCASCISS3.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS3_SetGain, None, itkTimeGainCompensationImageFilterCASCISS3)
itkTimeGainCompensationImageFilterCASCISS3.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS3_GetGain, None, itkTimeGainCompensationImageFilterCASCISS3)
itkTimeGainCompensationImageFilterCASCISS3_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS3_swigregister
itkTimeGainCompensationImageFilterCASCISS3_swigregister(itkTimeGainCompensationImageFilterCASCISS3)

def itkTimeGainCompensationImageFilterCASCISS3___New_orig__() -> "itkTimeGainCompensationImageFilterCASCISS3_Pointer":
    """itkTimeGainCompensationImageFilterCASCISS3___New_orig__() -> itkTimeGainCompensationImageFilterCASCISS3_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS3___New_orig__()

def itkTimeGainCompensationImageFilterCASCISS3_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCISS3 *":
    """itkTimeGainCompensationImageFilterCASCISS3_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCISS3"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCISS3_cast(obj)

class itkTimeGainCompensationImageFilterCASCIUC2(itkCurvilinearArraySpecialCoordinatesImagePython.itkCastImageFilterCASCIUC2CASCIUC2_Superclass_Superclass):
    """Proxy of C++ itkTimeGainCompensationImageFilterCASCIUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterCASCIUC2_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterCASCIUC2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterCASCIUC2_Pointer":
        """Clone(itkTimeGainCompensationImageFilterCASCIUC2 self) -> itkTimeGainCompensationImageFilterCASCIUC2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC2_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterCASCIUC2 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC2_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterCASCIUC2 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC2_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterCASCIUC2

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCIUC2 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCIUC2"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterCASCIUC2

        Create a new object of the class itkTimeGainCompensationImageFilterCASCIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterCASCIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterCASCIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterCASCIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterCASCIUC2.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC2_Clone, None, itkTimeGainCompensationImageFilterCASCIUC2)
itkTimeGainCompensationImageFilterCASCIUC2.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC2_SetGain, None, itkTimeGainCompensationImageFilterCASCIUC2)
itkTimeGainCompensationImageFilterCASCIUC2.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC2_GetGain, None, itkTimeGainCompensationImageFilterCASCIUC2)
itkTimeGainCompensationImageFilterCASCIUC2_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC2_swigregister
itkTimeGainCompensationImageFilterCASCIUC2_swigregister(itkTimeGainCompensationImageFilterCASCIUC2)

def itkTimeGainCompensationImageFilterCASCIUC2___New_orig__() -> "itkTimeGainCompensationImageFilterCASCIUC2_Pointer":
    """itkTimeGainCompensationImageFilterCASCIUC2___New_orig__() -> itkTimeGainCompensationImageFilterCASCIUC2_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC2___New_orig__()

def itkTimeGainCompensationImageFilterCASCIUC2_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCIUC2 *":
    """itkTimeGainCompensationImageFilterCASCIUC2_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCIUC2"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC2_cast(obj)

class itkTimeGainCompensationImageFilterCASCIUC3(itkCurvilinearArraySpecialCoordinatesImagePython.itkCastImageFilterCASCIUC3CASCIUC3_Superclass_Superclass):
    """Proxy of C++ itkTimeGainCompensationImageFilterCASCIUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterCASCIUC3_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterCASCIUC3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterCASCIUC3_Pointer":
        """Clone(itkTimeGainCompensationImageFilterCASCIUC3 self) -> itkTimeGainCompensationImageFilterCASCIUC3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC3_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterCASCIUC3 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC3_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterCASCIUC3 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC3_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterCASCIUC3

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCIUC3 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCIUC3"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterCASCIUC3

        Create a new object of the class itkTimeGainCompensationImageFilterCASCIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterCASCIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterCASCIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterCASCIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterCASCIUC3.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC3_Clone, None, itkTimeGainCompensationImageFilterCASCIUC3)
itkTimeGainCompensationImageFilterCASCIUC3.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC3_SetGain, None, itkTimeGainCompensationImageFilterCASCIUC3)
itkTimeGainCompensationImageFilterCASCIUC3.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC3_GetGain, None, itkTimeGainCompensationImageFilterCASCIUC3)
itkTimeGainCompensationImageFilterCASCIUC3_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC3_swigregister
itkTimeGainCompensationImageFilterCASCIUC3_swigregister(itkTimeGainCompensationImageFilterCASCIUC3)

def itkTimeGainCompensationImageFilterCASCIUC3___New_orig__() -> "itkTimeGainCompensationImageFilterCASCIUC3_Pointer":
    """itkTimeGainCompensationImageFilterCASCIUC3___New_orig__() -> itkTimeGainCompensationImageFilterCASCIUC3_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC3___New_orig__()

def itkTimeGainCompensationImageFilterCASCIUC3_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCIUC3 *":
    """itkTimeGainCompensationImageFilterCASCIUC3_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCIUC3"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUC3_cast(obj)

class itkTimeGainCompensationImageFilterCASCIUS2(itkCurvilinearArraySpecialCoordinatesImagePython.itkCastImageFilterCASCIUS2CASCIUS2_Superclass_Superclass):
    """Proxy of C++ itkTimeGainCompensationImageFilterCASCIUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterCASCIUS2_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterCASCIUS2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterCASCIUS2_Pointer":
        """Clone(itkTimeGainCompensationImageFilterCASCIUS2 self) -> itkTimeGainCompensationImageFilterCASCIUS2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS2_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterCASCIUS2 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS2_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterCASCIUS2 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS2_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterCASCIUS2

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCIUS2 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCIUS2"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterCASCIUS2

        Create a new object of the class itkTimeGainCompensationImageFilterCASCIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterCASCIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterCASCIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterCASCIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterCASCIUS2.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS2_Clone, None, itkTimeGainCompensationImageFilterCASCIUS2)
itkTimeGainCompensationImageFilterCASCIUS2.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS2_SetGain, None, itkTimeGainCompensationImageFilterCASCIUS2)
itkTimeGainCompensationImageFilterCASCIUS2.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS2_GetGain, None, itkTimeGainCompensationImageFilterCASCIUS2)
itkTimeGainCompensationImageFilterCASCIUS2_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS2_swigregister
itkTimeGainCompensationImageFilterCASCIUS2_swigregister(itkTimeGainCompensationImageFilterCASCIUS2)

def itkTimeGainCompensationImageFilterCASCIUS2___New_orig__() -> "itkTimeGainCompensationImageFilterCASCIUS2_Pointer":
    """itkTimeGainCompensationImageFilterCASCIUS2___New_orig__() -> itkTimeGainCompensationImageFilterCASCIUS2_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS2___New_orig__()

def itkTimeGainCompensationImageFilterCASCIUS2_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCIUS2 *":
    """itkTimeGainCompensationImageFilterCASCIUS2_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCIUS2"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS2_cast(obj)

class itkTimeGainCompensationImageFilterCASCIUS3(itkCurvilinearArraySpecialCoordinatesImagePython.itkCastImageFilterCASCIUS3CASCIUS3_Superclass_Superclass):
    """Proxy of C++ itkTimeGainCompensationImageFilterCASCIUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterCASCIUS3_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterCASCIUS3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterCASCIUS3_Pointer":
        """Clone(itkTimeGainCompensationImageFilterCASCIUS3 self) -> itkTimeGainCompensationImageFilterCASCIUS3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS3_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterCASCIUS3 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS3_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterCASCIUS3 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS3_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterCASCIUS3

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCIUS3 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCIUS3"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterCASCIUS3

        Create a new object of the class itkTimeGainCompensationImageFilterCASCIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterCASCIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterCASCIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterCASCIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterCASCIUS3.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS3_Clone, None, itkTimeGainCompensationImageFilterCASCIUS3)
itkTimeGainCompensationImageFilterCASCIUS3.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS3_SetGain, None, itkTimeGainCompensationImageFilterCASCIUS3)
itkTimeGainCompensationImageFilterCASCIUS3.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS3_GetGain, None, itkTimeGainCompensationImageFilterCASCIUS3)
itkTimeGainCompensationImageFilterCASCIUS3_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS3_swigregister
itkTimeGainCompensationImageFilterCASCIUS3_swigregister(itkTimeGainCompensationImageFilterCASCIUS3)

def itkTimeGainCompensationImageFilterCASCIUS3___New_orig__() -> "itkTimeGainCompensationImageFilterCASCIUS3_Pointer":
    """itkTimeGainCompensationImageFilterCASCIUS3___New_orig__() -> itkTimeGainCompensationImageFilterCASCIUS3_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS3___New_orig__()

def itkTimeGainCompensationImageFilterCASCIUS3_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterCASCIUS3 *":
    """itkTimeGainCompensationImageFilterCASCIUS3_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterCASCIUS3"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterCASCIUS3_cast(obj)

class itkTimeGainCompensationImageFilterIF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkTimeGainCompensationImageFilterIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterIF2_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterIF2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterIF2_Pointer":
        """Clone(itkTimeGainCompensationImageFilterIF2 self) -> itkTimeGainCompensationImageFilterIF2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF2_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterIF2 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF2_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterIF2 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF2_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterIF2

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterIF2 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterIF2"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterIF2

        Create a new object of the class itkTimeGainCompensationImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterIF2.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF2_Clone, None, itkTimeGainCompensationImageFilterIF2)
itkTimeGainCompensationImageFilterIF2.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF2_SetGain, None, itkTimeGainCompensationImageFilterIF2)
itkTimeGainCompensationImageFilterIF2.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF2_GetGain, None, itkTimeGainCompensationImageFilterIF2)
itkTimeGainCompensationImageFilterIF2_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF2_swigregister
itkTimeGainCompensationImageFilterIF2_swigregister(itkTimeGainCompensationImageFilterIF2)

def itkTimeGainCompensationImageFilterIF2___New_orig__() -> "itkTimeGainCompensationImageFilterIF2_Pointer":
    """itkTimeGainCompensationImageFilterIF2___New_orig__() -> itkTimeGainCompensationImageFilterIF2_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF2___New_orig__()

def itkTimeGainCompensationImageFilterIF2_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterIF2 *":
    """itkTimeGainCompensationImageFilterIF2_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterIF2"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF2_cast(obj)

class itkTimeGainCompensationImageFilterIF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkTimeGainCompensationImageFilterIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterIF3_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterIF3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterIF3_Pointer":
        """Clone(itkTimeGainCompensationImageFilterIF3 self) -> itkTimeGainCompensationImageFilterIF3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF3_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterIF3 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF3_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterIF3 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF3_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterIF3

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterIF3 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterIF3"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterIF3

        Create a new object of the class itkTimeGainCompensationImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterIF3.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF3_Clone, None, itkTimeGainCompensationImageFilterIF3)
itkTimeGainCompensationImageFilterIF3.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF3_SetGain, None, itkTimeGainCompensationImageFilterIF3)
itkTimeGainCompensationImageFilterIF3.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF3_GetGain, None, itkTimeGainCompensationImageFilterIF3)
itkTimeGainCompensationImageFilterIF3_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF3_swigregister
itkTimeGainCompensationImageFilterIF3_swigregister(itkTimeGainCompensationImageFilterIF3)

def itkTimeGainCompensationImageFilterIF3___New_orig__() -> "itkTimeGainCompensationImageFilterIF3_Pointer":
    """itkTimeGainCompensationImageFilterIF3___New_orig__() -> itkTimeGainCompensationImageFilterIF3_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF3___New_orig__()

def itkTimeGainCompensationImageFilterIF3_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterIF3 *":
    """itkTimeGainCompensationImageFilterIF3_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterIF3"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIF3_cast(obj)

class itkTimeGainCompensationImageFilterISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkTimeGainCompensationImageFilterISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterISS2_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterISS2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterISS2_Pointer":
        """Clone(itkTimeGainCompensationImageFilterISS2 self) -> itkTimeGainCompensationImageFilterISS2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS2_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterISS2 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS2_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterISS2 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS2_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterISS2

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterISS2 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterISS2"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterISS2

        Create a new object of the class itkTimeGainCompensationImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterISS2.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS2_Clone, None, itkTimeGainCompensationImageFilterISS2)
itkTimeGainCompensationImageFilterISS2.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS2_SetGain, None, itkTimeGainCompensationImageFilterISS2)
itkTimeGainCompensationImageFilterISS2.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS2_GetGain, None, itkTimeGainCompensationImageFilterISS2)
itkTimeGainCompensationImageFilterISS2_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS2_swigregister
itkTimeGainCompensationImageFilterISS2_swigregister(itkTimeGainCompensationImageFilterISS2)

def itkTimeGainCompensationImageFilterISS2___New_orig__() -> "itkTimeGainCompensationImageFilterISS2_Pointer":
    """itkTimeGainCompensationImageFilterISS2___New_orig__() -> itkTimeGainCompensationImageFilterISS2_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS2___New_orig__()

def itkTimeGainCompensationImageFilterISS2_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterISS2 *":
    """itkTimeGainCompensationImageFilterISS2_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterISS2"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS2_cast(obj)

class itkTimeGainCompensationImageFilterISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkTimeGainCompensationImageFilterISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterISS3_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterISS3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterISS3_Pointer":
        """Clone(itkTimeGainCompensationImageFilterISS3 self) -> itkTimeGainCompensationImageFilterISS3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS3_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterISS3 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS3_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterISS3 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS3_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterISS3

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterISS3 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterISS3"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterISS3

        Create a new object of the class itkTimeGainCompensationImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterISS3.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS3_Clone, None, itkTimeGainCompensationImageFilterISS3)
itkTimeGainCompensationImageFilterISS3.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS3_SetGain, None, itkTimeGainCompensationImageFilterISS3)
itkTimeGainCompensationImageFilterISS3.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS3_GetGain, None, itkTimeGainCompensationImageFilterISS3)
itkTimeGainCompensationImageFilterISS3_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS3_swigregister
itkTimeGainCompensationImageFilterISS3_swigregister(itkTimeGainCompensationImageFilterISS3)

def itkTimeGainCompensationImageFilterISS3___New_orig__() -> "itkTimeGainCompensationImageFilterISS3_Pointer":
    """itkTimeGainCompensationImageFilterISS3___New_orig__() -> itkTimeGainCompensationImageFilterISS3_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS3___New_orig__()

def itkTimeGainCompensationImageFilterISS3_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterISS3 *":
    """itkTimeGainCompensationImageFilterISS3_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterISS3"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterISS3_cast(obj)

class itkTimeGainCompensationImageFilterIUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkTimeGainCompensationImageFilterIUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterIUC2_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterIUC2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterIUC2_Pointer":
        """Clone(itkTimeGainCompensationImageFilterIUC2 self) -> itkTimeGainCompensationImageFilterIUC2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC2_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterIUC2 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC2_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterIUC2 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC2_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterIUC2

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterIUC2 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterIUC2"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterIUC2

        Create a new object of the class itkTimeGainCompensationImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterIUC2.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC2_Clone, None, itkTimeGainCompensationImageFilterIUC2)
itkTimeGainCompensationImageFilterIUC2.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC2_SetGain, None, itkTimeGainCompensationImageFilterIUC2)
itkTimeGainCompensationImageFilterIUC2.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC2_GetGain, None, itkTimeGainCompensationImageFilterIUC2)
itkTimeGainCompensationImageFilterIUC2_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC2_swigregister
itkTimeGainCompensationImageFilterIUC2_swigregister(itkTimeGainCompensationImageFilterIUC2)

def itkTimeGainCompensationImageFilterIUC2___New_orig__() -> "itkTimeGainCompensationImageFilterIUC2_Pointer":
    """itkTimeGainCompensationImageFilterIUC2___New_orig__() -> itkTimeGainCompensationImageFilterIUC2_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC2___New_orig__()

def itkTimeGainCompensationImageFilterIUC2_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterIUC2 *":
    """itkTimeGainCompensationImageFilterIUC2_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterIUC2"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC2_cast(obj)

class itkTimeGainCompensationImageFilterIUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkTimeGainCompensationImageFilterIUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterIUC3_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterIUC3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterIUC3_Pointer":
        """Clone(itkTimeGainCompensationImageFilterIUC3 self) -> itkTimeGainCompensationImageFilterIUC3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC3_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterIUC3 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC3_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterIUC3 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC3_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterIUC3

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterIUC3 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterIUC3"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterIUC3

        Create a new object of the class itkTimeGainCompensationImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterIUC3.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC3_Clone, None, itkTimeGainCompensationImageFilterIUC3)
itkTimeGainCompensationImageFilterIUC3.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC3_SetGain, None, itkTimeGainCompensationImageFilterIUC3)
itkTimeGainCompensationImageFilterIUC3.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC3_GetGain, None, itkTimeGainCompensationImageFilterIUC3)
itkTimeGainCompensationImageFilterIUC3_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC3_swigregister
itkTimeGainCompensationImageFilterIUC3_swigregister(itkTimeGainCompensationImageFilterIUC3)

def itkTimeGainCompensationImageFilterIUC3___New_orig__() -> "itkTimeGainCompensationImageFilterIUC3_Pointer":
    """itkTimeGainCompensationImageFilterIUC3___New_orig__() -> itkTimeGainCompensationImageFilterIUC3_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC3___New_orig__()

def itkTimeGainCompensationImageFilterIUC3_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterIUC3 *":
    """itkTimeGainCompensationImageFilterIUC3_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterIUC3"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUC3_cast(obj)

class itkTimeGainCompensationImageFilterIUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkTimeGainCompensationImageFilterIUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterIUS2_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterIUS2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterIUS2_Pointer":
        """Clone(itkTimeGainCompensationImageFilterIUS2 self) -> itkTimeGainCompensationImageFilterIUS2_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS2_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterIUS2 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS2_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterIUS2 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS2_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterIUS2

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterIUS2 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterIUS2"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterIUS2

        Create a new object of the class itkTimeGainCompensationImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterIUS2.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS2_Clone, None, itkTimeGainCompensationImageFilterIUS2)
itkTimeGainCompensationImageFilterIUS2.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS2_SetGain, None, itkTimeGainCompensationImageFilterIUS2)
itkTimeGainCompensationImageFilterIUS2.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS2_GetGain, None, itkTimeGainCompensationImageFilterIUS2)
itkTimeGainCompensationImageFilterIUS2_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS2_swigregister
itkTimeGainCompensationImageFilterIUS2_swigregister(itkTimeGainCompensationImageFilterIUS2)

def itkTimeGainCompensationImageFilterIUS2___New_orig__() -> "itkTimeGainCompensationImageFilterIUS2_Pointer":
    """itkTimeGainCompensationImageFilterIUS2___New_orig__() -> itkTimeGainCompensationImageFilterIUS2_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS2___New_orig__()

def itkTimeGainCompensationImageFilterIUS2_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterIUS2 *":
    """itkTimeGainCompensationImageFilterIUS2_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterIUS2"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS2_cast(obj)

class itkTimeGainCompensationImageFilterIUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkTimeGainCompensationImageFilterIUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTimeGainCompensationImageFilterIUS3_Pointer":
        """__New_orig__() -> itkTimeGainCompensationImageFilterIUS3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTimeGainCompensationImageFilterIUS3_Pointer":
        """Clone(itkTimeGainCompensationImageFilterIUS3 self) -> itkTimeGainCompensationImageFilterIUS3_Pointer"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS3_Clone(self)


    def SetGain(self, _arg: 'itkArray2DD') -> "void":
        """SetGain(itkTimeGainCompensationImageFilterIUS3 self, itkArray2DD _arg)"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS3_SetGain(self, _arg)


    def GetGain(self) -> "itkArray2DD const &":
        """GetGain(itkTimeGainCompensationImageFilterIUS3 self) -> itkArray2DD"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS3_GetGain(self)

    __swig_destroy__ = _itkTimeGainCompensationImageFilterPython.delete_itkTimeGainCompensationImageFilterIUS3

    def cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterIUS3 *":
        """cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterIUS3"""
        return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTimeGainCompensationImageFilterIUS3

        Create a new object of the class itkTimeGainCompensationImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTimeGainCompensationImageFilterIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTimeGainCompensationImageFilterIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTimeGainCompensationImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTimeGainCompensationImageFilterIUS3.Clone = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS3_Clone, None, itkTimeGainCompensationImageFilterIUS3)
itkTimeGainCompensationImageFilterIUS3.SetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS3_SetGain, None, itkTimeGainCompensationImageFilterIUS3)
itkTimeGainCompensationImageFilterIUS3.GetGain = new_instancemethod(_itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS3_GetGain, None, itkTimeGainCompensationImageFilterIUS3)
itkTimeGainCompensationImageFilterIUS3_swigregister = _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS3_swigregister
itkTimeGainCompensationImageFilterIUS3_swigregister(itkTimeGainCompensationImageFilterIUS3)

def itkTimeGainCompensationImageFilterIUS3___New_orig__() -> "itkTimeGainCompensationImageFilterIUS3_Pointer":
    """itkTimeGainCompensationImageFilterIUS3___New_orig__() -> itkTimeGainCompensationImageFilterIUS3_Pointer"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS3___New_orig__()

def itkTimeGainCompensationImageFilterIUS3_cast(obj: 'itkLightObject') -> "itkTimeGainCompensationImageFilterIUS3 *":
    """itkTimeGainCompensationImageFilterIUS3_cast(itkLightObject obj) -> itkTimeGainCompensationImageFilterIUS3"""
    return _itkTimeGainCompensationImageFilterPython.itkTimeGainCompensationImageFilterIUS3_cast(obj)


def time_gain_compensation_image_filter(*args, **kwargs):
    """Procedural interface for TimeGainCompensationImageFilter"""
    import itk
    instance = itk.TimeGainCompensationImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def time_gain_compensation_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.TimeGainCompensationImageFilter, itkTemplate.itkTemplate):
        time_gain_compensation_image_filter.__doc__ = itk.TimeGainCompensationImageFilter.values()[0].__doc__
    else:
        time_gain_compensation_image_filter.__doc__ = itk.TimeGainCompensationImageFilter.__doc__




