# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkStatisticsImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkStatisticsImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkStatisticsImageFilterPython
            return _itkStatisticsImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkStatisticsImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkStatisticsImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkStatisticsImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSimpleDataObjectDecoratorPython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import pyBasePython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkArrayPython
import ITKCommonBasePython
import itkImageSinkPython
import itkImagePython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkImageToImageFilterCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython

def itkStatisticsImageFilterIF3_New():
  return itkStatisticsImageFilterIF3.New()


def itkStatisticsImageFilterIF2_New():
  return itkStatisticsImageFilterIF2.New()


def itkStatisticsImageFilterIUS3_New():
  return itkStatisticsImageFilterIUS3.New()


def itkStatisticsImageFilterIUS2_New():
  return itkStatisticsImageFilterIUS2.New()


def itkStatisticsImageFilterIUC3_New():
  return itkStatisticsImageFilterIUC3.New()


def itkStatisticsImageFilterIUC2_New():
  return itkStatisticsImageFilterIUC2.New()


def itkStatisticsImageFilterISS3_New():
  return itkStatisticsImageFilterISS3.New()


def itkStatisticsImageFilterISS2_New():
  return itkStatisticsImageFilterISS2.New()

class itkStatisticsImageFilterIF2(itkImageSinkPython.itkImageSinkIF2):
    """


    Compute min, max, variance and mean of an Image.

    StatisticsImageFilter computes the minimum, maximum, sum, sum of
    squares, mean, variance sigma of an image. The filter needs all of its
    input image. It behaves as a filter with an input and output. Thus it
    can be inserted in a pipline with other filters and the statistics
    will only be recomputed if a downstream filter changes.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than one. Statistics are
    independently computed for each streamed and threaded region then
    merged.

    Internally a compensated summation algorithm is used for the
    accumulation of intensities to improve accuracy for large images.

    Wiki Examples:

    All Examples

    C++ includes: itkStatisticsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkStatisticsImageFilterIF2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkStatisticsImageFilterIF2 self) -> itkStatisticsImageFilterIF2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_Clone(self)


    def GetMinimumOutput(self):
        """GetMinimumOutput(itkStatisticsImageFilterIF2 self) -> itkSimpleDataObjectDecoratorF"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMinimumOutput(self)


    def GetMinimum(self):
        """GetMinimum(itkStatisticsImageFilterIF2 self) -> float const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMinimum(self)


    def GetMaximumOutput(self):
        """GetMaximumOutput(itkStatisticsImageFilterIF2 self) -> itkSimpleDataObjectDecoratorF"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMaximumOutput(self)


    def GetMaximum(self):
        """GetMaximum(itkStatisticsImageFilterIF2 self) -> float const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMaximum(self)


    def GetMeanOutput(self):
        """GetMeanOutput(itkStatisticsImageFilterIF2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMeanOutput(self)


    def GetMean(self):
        """GetMean(itkStatisticsImageFilterIF2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMean(self)


    def GetSigmaOutput(self):
        """GetSigmaOutput(itkStatisticsImageFilterIF2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSigmaOutput(self)


    def GetSigma(self):
        """GetSigma(itkStatisticsImageFilterIF2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSigma(self)


    def GetVarianceOutput(self):
        """GetVarianceOutput(itkStatisticsImageFilterIF2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetVarianceOutput(self)


    def GetVariance(self):
        """GetVariance(itkStatisticsImageFilterIF2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetVariance(self)


    def GetSumOutput(self):
        """GetSumOutput(itkStatisticsImageFilterIF2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSumOutput(self)


    def GetSum(self):
        """GetSum(itkStatisticsImageFilterIF2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSum(self)


    def GetSumOfSquaresOutput(self):
        """GetSumOfSquaresOutput(itkStatisticsImageFilterIF2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSumOfSquaresOutput(self)


    def GetSumOfSquares(self):
        """GetSumOfSquares(itkStatisticsImageFilterIF2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSumOfSquares(self)

    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkStatisticsImageFilterIF2"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIF2

        Create a new object of the class itkStatisticsImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStatisticsImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStatisticsImageFilterIF2.Clone = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_Clone, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2.GetMinimumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMinimumOutput, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2.GetMinimum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMinimum, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2.GetMaximumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMaximumOutput, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2.GetMaximum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMaximum, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2.GetMeanOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMeanOutput, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2.GetMean = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMean, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2.GetSigmaOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSigmaOutput, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2.GetSigma = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSigma, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2.GetVarianceOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetVarianceOutput, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2.GetVariance = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetVariance, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2.GetSumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSumOutput, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2.GetSum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSum, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2.GetSumOfSquaresOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSumOfSquaresOutput, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2.GetSumOfSquares = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSumOfSquares, None, itkStatisticsImageFilterIF2)
itkStatisticsImageFilterIF2_swigregister = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_swigregister
itkStatisticsImageFilterIF2_swigregister(itkStatisticsImageFilterIF2)

def itkStatisticsImageFilterIF2___New_orig__():
    """itkStatisticsImageFilterIF2___New_orig__() -> itkStatisticsImageFilterIF2_Pointer"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2___New_orig__()

def itkStatisticsImageFilterIF2_cast(obj):
    """itkStatisticsImageFilterIF2_cast(itkLightObject obj) -> itkStatisticsImageFilterIF2"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_cast(obj)

class itkStatisticsImageFilterIF3(itkImageSinkPython.itkImageSinkIF3):
    """


    Compute min, max, variance and mean of an Image.

    StatisticsImageFilter computes the minimum, maximum, sum, sum of
    squares, mean, variance sigma of an image. The filter needs all of its
    input image. It behaves as a filter with an input and output. Thus it
    can be inserted in a pipline with other filters and the statistics
    will only be recomputed if a downstream filter changes.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than one. Statistics are
    independently computed for each streamed and threaded region then
    merged.

    Internally a compensated summation algorithm is used for the
    accumulation of intensities to improve accuracy for large images.

    Wiki Examples:

    All Examples

    C++ includes: itkStatisticsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkStatisticsImageFilterIF3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkStatisticsImageFilterIF3 self) -> itkStatisticsImageFilterIF3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_Clone(self)


    def GetMinimumOutput(self):
        """GetMinimumOutput(itkStatisticsImageFilterIF3 self) -> itkSimpleDataObjectDecoratorF"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMinimumOutput(self)


    def GetMinimum(self):
        """GetMinimum(itkStatisticsImageFilterIF3 self) -> float const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMinimum(self)


    def GetMaximumOutput(self):
        """GetMaximumOutput(itkStatisticsImageFilterIF3 self) -> itkSimpleDataObjectDecoratorF"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMaximumOutput(self)


    def GetMaximum(self):
        """GetMaximum(itkStatisticsImageFilterIF3 self) -> float const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMaximum(self)


    def GetMeanOutput(self):
        """GetMeanOutput(itkStatisticsImageFilterIF3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMeanOutput(self)


    def GetMean(self):
        """GetMean(itkStatisticsImageFilterIF3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMean(self)


    def GetSigmaOutput(self):
        """GetSigmaOutput(itkStatisticsImageFilterIF3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSigmaOutput(self)


    def GetSigma(self):
        """GetSigma(itkStatisticsImageFilterIF3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSigma(self)


    def GetVarianceOutput(self):
        """GetVarianceOutput(itkStatisticsImageFilterIF3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetVarianceOutput(self)


    def GetVariance(self):
        """GetVariance(itkStatisticsImageFilterIF3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetVariance(self)


    def GetSumOutput(self):
        """GetSumOutput(itkStatisticsImageFilterIF3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSumOutput(self)


    def GetSum(self):
        """GetSum(itkStatisticsImageFilterIF3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSum(self)


    def GetSumOfSquaresOutput(self):
        """GetSumOfSquaresOutput(itkStatisticsImageFilterIF3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSumOfSquaresOutput(self)


    def GetSumOfSquares(self):
        """GetSumOfSquares(itkStatisticsImageFilterIF3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSumOfSquares(self)

    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkStatisticsImageFilterIF3"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIF3

        Create a new object of the class itkStatisticsImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStatisticsImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStatisticsImageFilterIF3.Clone = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_Clone, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3.GetMinimumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMinimumOutput, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3.GetMinimum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMinimum, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3.GetMaximumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMaximumOutput, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3.GetMaximum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMaximum, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3.GetMeanOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMeanOutput, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3.GetMean = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMean, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3.GetSigmaOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSigmaOutput, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3.GetSigma = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSigma, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3.GetVarianceOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetVarianceOutput, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3.GetVariance = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetVariance, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3.GetSumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSumOutput, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3.GetSum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSum, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3.GetSumOfSquaresOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSumOfSquaresOutput, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3.GetSumOfSquares = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSumOfSquares, None, itkStatisticsImageFilterIF3)
itkStatisticsImageFilterIF3_swigregister = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_swigregister
itkStatisticsImageFilterIF3_swigregister(itkStatisticsImageFilterIF3)

def itkStatisticsImageFilterIF3___New_orig__():
    """itkStatisticsImageFilterIF3___New_orig__() -> itkStatisticsImageFilterIF3_Pointer"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3___New_orig__()

def itkStatisticsImageFilterIF3_cast(obj):
    """itkStatisticsImageFilterIF3_cast(itkLightObject obj) -> itkStatisticsImageFilterIF3"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_cast(obj)

class itkStatisticsImageFilterISS2(itkImageSinkPython.itkImageSinkISS2):
    """


    Compute min, max, variance and mean of an Image.

    StatisticsImageFilter computes the minimum, maximum, sum, sum of
    squares, mean, variance sigma of an image. The filter needs all of its
    input image. It behaves as a filter with an input and output. Thus it
    can be inserted in a pipline with other filters and the statistics
    will only be recomputed if a downstream filter changes.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than one. Statistics are
    independently computed for each streamed and threaded region then
    merged.

    Internally a compensated summation algorithm is used for the
    accumulation of intensities to improve accuracy for large images.

    Wiki Examples:

    All Examples

    C++ includes: itkStatisticsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkStatisticsImageFilterISS2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkStatisticsImageFilterISS2 self) -> itkStatisticsImageFilterISS2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_Clone(self)


    def GetMinimumOutput(self):
        """GetMinimumOutput(itkStatisticsImageFilterISS2 self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMinimumOutput(self)


    def GetMinimum(self):
        """GetMinimum(itkStatisticsImageFilterISS2 self) -> short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMinimum(self)


    def GetMaximumOutput(self):
        """GetMaximumOutput(itkStatisticsImageFilterISS2 self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMaximumOutput(self)


    def GetMaximum(self):
        """GetMaximum(itkStatisticsImageFilterISS2 self) -> short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMaximum(self)


    def GetMeanOutput(self):
        """GetMeanOutput(itkStatisticsImageFilterISS2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMeanOutput(self)


    def GetMean(self):
        """GetMean(itkStatisticsImageFilterISS2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMean(self)


    def GetSigmaOutput(self):
        """GetSigmaOutput(itkStatisticsImageFilterISS2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSigmaOutput(self)


    def GetSigma(self):
        """GetSigma(itkStatisticsImageFilterISS2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSigma(self)


    def GetVarianceOutput(self):
        """GetVarianceOutput(itkStatisticsImageFilterISS2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetVarianceOutput(self)


    def GetVariance(self):
        """GetVariance(itkStatisticsImageFilterISS2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetVariance(self)


    def GetSumOutput(self):
        """GetSumOutput(itkStatisticsImageFilterISS2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSumOutput(self)


    def GetSum(self):
        """GetSum(itkStatisticsImageFilterISS2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSum(self)


    def GetSumOfSquaresOutput(self):
        """GetSumOfSquaresOutput(itkStatisticsImageFilterISS2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSumOfSquaresOutput(self)


    def GetSumOfSquares(self):
        """GetSumOfSquares(itkStatisticsImageFilterISS2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSumOfSquares(self)

    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkStatisticsImageFilterISS2"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterISS2

        Create a new object of the class itkStatisticsImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStatisticsImageFilterISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStatisticsImageFilterISS2.Clone = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_Clone, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2.GetMinimumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMinimumOutput, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2.GetMinimum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMinimum, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2.GetMaximumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMaximumOutput, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2.GetMaximum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMaximum, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2.GetMeanOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMeanOutput, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2.GetMean = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMean, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2.GetSigmaOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSigmaOutput, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2.GetSigma = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSigma, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2.GetVarianceOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetVarianceOutput, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2.GetVariance = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetVariance, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2.GetSumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSumOutput, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2.GetSum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSum, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2.GetSumOfSquaresOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSumOfSquaresOutput, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2.GetSumOfSquares = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSumOfSquares, None, itkStatisticsImageFilterISS2)
itkStatisticsImageFilterISS2_swigregister = _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_swigregister
itkStatisticsImageFilterISS2_swigregister(itkStatisticsImageFilterISS2)

def itkStatisticsImageFilterISS2___New_orig__():
    """itkStatisticsImageFilterISS2___New_orig__() -> itkStatisticsImageFilterISS2_Pointer"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2___New_orig__()

def itkStatisticsImageFilterISS2_cast(obj):
    """itkStatisticsImageFilterISS2_cast(itkLightObject obj) -> itkStatisticsImageFilterISS2"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_cast(obj)

class itkStatisticsImageFilterISS3(itkImageSinkPython.itkImageSinkISS3):
    """


    Compute min, max, variance and mean of an Image.

    StatisticsImageFilter computes the minimum, maximum, sum, sum of
    squares, mean, variance sigma of an image. The filter needs all of its
    input image. It behaves as a filter with an input and output. Thus it
    can be inserted in a pipline with other filters and the statistics
    will only be recomputed if a downstream filter changes.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than one. Statistics are
    independently computed for each streamed and threaded region then
    merged.

    Internally a compensated summation algorithm is used for the
    accumulation of intensities to improve accuracy for large images.

    Wiki Examples:

    All Examples

    C++ includes: itkStatisticsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkStatisticsImageFilterISS3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkStatisticsImageFilterISS3 self) -> itkStatisticsImageFilterISS3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_Clone(self)


    def GetMinimumOutput(self):
        """GetMinimumOutput(itkStatisticsImageFilterISS3 self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMinimumOutput(self)


    def GetMinimum(self):
        """GetMinimum(itkStatisticsImageFilterISS3 self) -> short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMinimum(self)


    def GetMaximumOutput(self):
        """GetMaximumOutput(itkStatisticsImageFilterISS3 self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMaximumOutput(self)


    def GetMaximum(self):
        """GetMaximum(itkStatisticsImageFilterISS3 self) -> short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMaximum(self)


    def GetMeanOutput(self):
        """GetMeanOutput(itkStatisticsImageFilterISS3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMeanOutput(self)


    def GetMean(self):
        """GetMean(itkStatisticsImageFilterISS3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMean(self)


    def GetSigmaOutput(self):
        """GetSigmaOutput(itkStatisticsImageFilterISS3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSigmaOutput(self)


    def GetSigma(self):
        """GetSigma(itkStatisticsImageFilterISS3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSigma(self)


    def GetVarianceOutput(self):
        """GetVarianceOutput(itkStatisticsImageFilterISS3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetVarianceOutput(self)


    def GetVariance(self):
        """GetVariance(itkStatisticsImageFilterISS3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetVariance(self)


    def GetSumOutput(self):
        """GetSumOutput(itkStatisticsImageFilterISS3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSumOutput(self)


    def GetSum(self):
        """GetSum(itkStatisticsImageFilterISS3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSum(self)


    def GetSumOfSquaresOutput(self):
        """GetSumOfSquaresOutput(itkStatisticsImageFilterISS3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSumOfSquaresOutput(self)


    def GetSumOfSquares(self):
        """GetSumOfSquares(itkStatisticsImageFilterISS3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSumOfSquares(self)

    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkStatisticsImageFilterISS3"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterISS3

        Create a new object of the class itkStatisticsImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStatisticsImageFilterISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStatisticsImageFilterISS3.Clone = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_Clone, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3.GetMinimumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMinimumOutput, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3.GetMinimum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMinimum, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3.GetMaximumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMaximumOutput, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3.GetMaximum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMaximum, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3.GetMeanOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMeanOutput, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3.GetMean = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMean, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3.GetSigmaOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSigmaOutput, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3.GetSigma = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSigma, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3.GetVarianceOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetVarianceOutput, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3.GetVariance = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetVariance, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3.GetSumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSumOutput, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3.GetSum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSum, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3.GetSumOfSquaresOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSumOfSquaresOutput, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3.GetSumOfSquares = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSumOfSquares, None, itkStatisticsImageFilterISS3)
itkStatisticsImageFilterISS3_swigregister = _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_swigregister
itkStatisticsImageFilterISS3_swigregister(itkStatisticsImageFilterISS3)

def itkStatisticsImageFilterISS3___New_orig__():
    """itkStatisticsImageFilterISS3___New_orig__() -> itkStatisticsImageFilterISS3_Pointer"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3___New_orig__()

def itkStatisticsImageFilterISS3_cast(obj):
    """itkStatisticsImageFilterISS3_cast(itkLightObject obj) -> itkStatisticsImageFilterISS3"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_cast(obj)

class itkStatisticsImageFilterIUC2(itkImageSinkPython.itkImageSinkIUC2):
    """


    Compute min, max, variance and mean of an Image.

    StatisticsImageFilter computes the minimum, maximum, sum, sum of
    squares, mean, variance sigma of an image. The filter needs all of its
    input image. It behaves as a filter with an input and output. Thus it
    can be inserted in a pipline with other filters and the statistics
    will only be recomputed if a downstream filter changes.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than one. Statistics are
    independently computed for each streamed and threaded region then
    merged.

    Internally a compensated summation algorithm is used for the
    accumulation of intensities to improve accuracy for large images.

    Wiki Examples:

    All Examples

    C++ includes: itkStatisticsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkStatisticsImageFilterIUC2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkStatisticsImageFilterIUC2 self) -> itkStatisticsImageFilterIUC2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_Clone(self)


    def GetMinimumOutput(self):
        """GetMinimumOutput(itkStatisticsImageFilterIUC2 self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMinimumOutput(self)


    def GetMinimum(self):
        """GetMinimum(itkStatisticsImageFilterIUC2 self) -> unsigned char const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMinimum(self)


    def GetMaximumOutput(self):
        """GetMaximumOutput(itkStatisticsImageFilterIUC2 self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMaximumOutput(self)


    def GetMaximum(self):
        """GetMaximum(itkStatisticsImageFilterIUC2 self) -> unsigned char const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMaximum(self)


    def GetMeanOutput(self):
        """GetMeanOutput(itkStatisticsImageFilterIUC2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMeanOutput(self)


    def GetMean(self):
        """GetMean(itkStatisticsImageFilterIUC2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMean(self)


    def GetSigmaOutput(self):
        """GetSigmaOutput(itkStatisticsImageFilterIUC2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSigmaOutput(self)


    def GetSigma(self):
        """GetSigma(itkStatisticsImageFilterIUC2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSigma(self)


    def GetVarianceOutput(self):
        """GetVarianceOutput(itkStatisticsImageFilterIUC2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetVarianceOutput(self)


    def GetVariance(self):
        """GetVariance(itkStatisticsImageFilterIUC2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetVariance(self)


    def GetSumOutput(self):
        """GetSumOutput(itkStatisticsImageFilterIUC2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSumOutput(self)


    def GetSum(self):
        """GetSum(itkStatisticsImageFilterIUC2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSum(self)


    def GetSumOfSquaresOutput(self):
        """GetSumOfSquaresOutput(itkStatisticsImageFilterIUC2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSumOfSquaresOutput(self)


    def GetSumOfSquares(self):
        """GetSumOfSquares(itkStatisticsImageFilterIUC2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSumOfSquares(self)

    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkStatisticsImageFilterIUC2"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIUC2

        Create a new object of the class itkStatisticsImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStatisticsImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStatisticsImageFilterIUC2.Clone = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_Clone, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2.GetMinimumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMinimumOutput, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2.GetMinimum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMinimum, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2.GetMaximumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMaximumOutput, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2.GetMaximum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMaximum, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2.GetMeanOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMeanOutput, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2.GetMean = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMean, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2.GetSigmaOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSigmaOutput, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2.GetSigma = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSigma, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2.GetVarianceOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetVarianceOutput, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2.GetVariance = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetVariance, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2.GetSumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSumOutput, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2.GetSum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSum, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2.GetSumOfSquaresOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSumOfSquaresOutput, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2.GetSumOfSquares = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSumOfSquares, None, itkStatisticsImageFilterIUC2)
itkStatisticsImageFilterIUC2_swigregister = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_swigregister
itkStatisticsImageFilterIUC2_swigregister(itkStatisticsImageFilterIUC2)

def itkStatisticsImageFilterIUC2___New_orig__():
    """itkStatisticsImageFilterIUC2___New_orig__() -> itkStatisticsImageFilterIUC2_Pointer"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2___New_orig__()

def itkStatisticsImageFilterIUC2_cast(obj):
    """itkStatisticsImageFilterIUC2_cast(itkLightObject obj) -> itkStatisticsImageFilterIUC2"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_cast(obj)

class itkStatisticsImageFilterIUC3(itkImageSinkPython.itkImageSinkIUC3):
    """


    Compute min, max, variance and mean of an Image.

    StatisticsImageFilter computes the minimum, maximum, sum, sum of
    squares, mean, variance sigma of an image. The filter needs all of its
    input image. It behaves as a filter with an input and output. Thus it
    can be inserted in a pipline with other filters and the statistics
    will only be recomputed if a downstream filter changes.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than one. Statistics are
    independently computed for each streamed and threaded region then
    merged.

    Internally a compensated summation algorithm is used for the
    accumulation of intensities to improve accuracy for large images.

    Wiki Examples:

    All Examples

    C++ includes: itkStatisticsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkStatisticsImageFilterIUC3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkStatisticsImageFilterIUC3 self) -> itkStatisticsImageFilterIUC3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_Clone(self)


    def GetMinimumOutput(self):
        """GetMinimumOutput(itkStatisticsImageFilterIUC3 self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMinimumOutput(self)


    def GetMinimum(self):
        """GetMinimum(itkStatisticsImageFilterIUC3 self) -> unsigned char const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMinimum(self)


    def GetMaximumOutput(self):
        """GetMaximumOutput(itkStatisticsImageFilterIUC3 self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMaximumOutput(self)


    def GetMaximum(self):
        """GetMaximum(itkStatisticsImageFilterIUC3 self) -> unsigned char const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMaximum(self)


    def GetMeanOutput(self):
        """GetMeanOutput(itkStatisticsImageFilterIUC3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMeanOutput(self)


    def GetMean(self):
        """GetMean(itkStatisticsImageFilterIUC3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMean(self)


    def GetSigmaOutput(self):
        """GetSigmaOutput(itkStatisticsImageFilterIUC3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSigmaOutput(self)


    def GetSigma(self):
        """GetSigma(itkStatisticsImageFilterIUC3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSigma(self)


    def GetVarianceOutput(self):
        """GetVarianceOutput(itkStatisticsImageFilterIUC3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetVarianceOutput(self)


    def GetVariance(self):
        """GetVariance(itkStatisticsImageFilterIUC3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetVariance(self)


    def GetSumOutput(self):
        """GetSumOutput(itkStatisticsImageFilterIUC3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSumOutput(self)


    def GetSum(self):
        """GetSum(itkStatisticsImageFilterIUC3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSum(self)


    def GetSumOfSquaresOutput(self):
        """GetSumOfSquaresOutput(itkStatisticsImageFilterIUC3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSumOfSquaresOutput(self)


    def GetSumOfSquares(self):
        """GetSumOfSquares(itkStatisticsImageFilterIUC3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSumOfSquares(self)

    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkStatisticsImageFilterIUC3"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIUC3

        Create a new object of the class itkStatisticsImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStatisticsImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStatisticsImageFilterIUC3.Clone = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_Clone, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3.GetMinimumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMinimumOutput, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3.GetMinimum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMinimum, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3.GetMaximumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMaximumOutput, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3.GetMaximum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMaximum, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3.GetMeanOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMeanOutput, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3.GetMean = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMean, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3.GetSigmaOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSigmaOutput, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3.GetSigma = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSigma, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3.GetVarianceOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetVarianceOutput, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3.GetVariance = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetVariance, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3.GetSumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSumOutput, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3.GetSum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSum, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3.GetSumOfSquaresOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSumOfSquaresOutput, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3.GetSumOfSquares = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSumOfSquares, None, itkStatisticsImageFilterIUC3)
itkStatisticsImageFilterIUC3_swigregister = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_swigregister
itkStatisticsImageFilterIUC3_swigregister(itkStatisticsImageFilterIUC3)

def itkStatisticsImageFilterIUC3___New_orig__():
    """itkStatisticsImageFilterIUC3___New_orig__() -> itkStatisticsImageFilterIUC3_Pointer"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3___New_orig__()

def itkStatisticsImageFilterIUC3_cast(obj):
    """itkStatisticsImageFilterIUC3_cast(itkLightObject obj) -> itkStatisticsImageFilterIUC3"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_cast(obj)

class itkStatisticsImageFilterIUS2(itkImageSinkPython.itkImageSinkIUS2):
    """


    Compute min, max, variance and mean of an Image.

    StatisticsImageFilter computes the minimum, maximum, sum, sum of
    squares, mean, variance sigma of an image. The filter needs all of its
    input image. It behaves as a filter with an input and output. Thus it
    can be inserted in a pipline with other filters and the statistics
    will only be recomputed if a downstream filter changes.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than one. Statistics are
    independently computed for each streamed and threaded region then
    merged.

    Internally a compensated summation algorithm is used for the
    accumulation of intensities to improve accuracy for large images.

    Wiki Examples:

    All Examples

    C++ includes: itkStatisticsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkStatisticsImageFilterIUS2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkStatisticsImageFilterIUS2 self) -> itkStatisticsImageFilterIUS2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_Clone(self)


    def GetMinimumOutput(self):
        """GetMinimumOutput(itkStatisticsImageFilterIUS2 self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMinimumOutput(self)


    def GetMinimum(self):
        """GetMinimum(itkStatisticsImageFilterIUS2 self) -> unsigned short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMinimum(self)


    def GetMaximumOutput(self):
        """GetMaximumOutput(itkStatisticsImageFilterIUS2 self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMaximumOutput(self)


    def GetMaximum(self):
        """GetMaximum(itkStatisticsImageFilterIUS2 self) -> unsigned short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMaximum(self)


    def GetMeanOutput(self):
        """GetMeanOutput(itkStatisticsImageFilterIUS2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMeanOutput(self)


    def GetMean(self):
        """GetMean(itkStatisticsImageFilterIUS2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMean(self)


    def GetSigmaOutput(self):
        """GetSigmaOutput(itkStatisticsImageFilterIUS2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSigmaOutput(self)


    def GetSigma(self):
        """GetSigma(itkStatisticsImageFilterIUS2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSigma(self)


    def GetVarianceOutput(self):
        """GetVarianceOutput(itkStatisticsImageFilterIUS2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetVarianceOutput(self)


    def GetVariance(self):
        """GetVariance(itkStatisticsImageFilterIUS2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetVariance(self)


    def GetSumOutput(self):
        """GetSumOutput(itkStatisticsImageFilterIUS2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSumOutput(self)


    def GetSum(self):
        """GetSum(itkStatisticsImageFilterIUS2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSum(self)


    def GetSumOfSquaresOutput(self):
        """GetSumOfSquaresOutput(itkStatisticsImageFilterIUS2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSumOfSquaresOutput(self)


    def GetSumOfSquares(self):
        """GetSumOfSquares(itkStatisticsImageFilterIUS2 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSumOfSquares(self)

    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkStatisticsImageFilterIUS2"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIUS2

        Create a new object of the class itkStatisticsImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStatisticsImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStatisticsImageFilterIUS2.Clone = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_Clone, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2.GetMinimumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMinimumOutput, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2.GetMinimum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMinimum, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2.GetMaximumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMaximumOutput, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2.GetMaximum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMaximum, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2.GetMeanOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMeanOutput, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2.GetMean = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMean, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2.GetSigmaOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSigmaOutput, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2.GetSigma = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSigma, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2.GetVarianceOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetVarianceOutput, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2.GetVariance = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetVariance, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2.GetSumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSumOutput, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2.GetSum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSum, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2.GetSumOfSquaresOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSumOfSquaresOutput, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2.GetSumOfSquares = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSumOfSquares, None, itkStatisticsImageFilterIUS2)
itkStatisticsImageFilterIUS2_swigregister = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_swigregister
itkStatisticsImageFilterIUS2_swigregister(itkStatisticsImageFilterIUS2)

def itkStatisticsImageFilterIUS2___New_orig__():
    """itkStatisticsImageFilterIUS2___New_orig__() -> itkStatisticsImageFilterIUS2_Pointer"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2___New_orig__()

def itkStatisticsImageFilterIUS2_cast(obj):
    """itkStatisticsImageFilterIUS2_cast(itkLightObject obj) -> itkStatisticsImageFilterIUS2"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_cast(obj)

class itkStatisticsImageFilterIUS3(itkImageSinkPython.itkImageSinkIUS3):
    """


    Compute min, max, variance and mean of an Image.

    StatisticsImageFilter computes the minimum, maximum, sum, sum of
    squares, mean, variance sigma of an image. The filter needs all of its
    input image. It behaves as a filter with an input and output. Thus it
    can be inserted in a pipline with other filters and the statistics
    will only be recomputed if a downstream filter changes.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than one. Statistics are
    independently computed for each streamed and threaded region then
    merged.

    Internally a compensated summation algorithm is used for the
    accumulation of intensities to improve accuracy for large images.

    Wiki Examples:

    All Examples

    C++ includes: itkStatisticsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkStatisticsImageFilterIUS3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkStatisticsImageFilterIUS3 self) -> itkStatisticsImageFilterIUS3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_Clone(self)


    def GetMinimumOutput(self):
        """GetMinimumOutput(itkStatisticsImageFilterIUS3 self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMinimumOutput(self)


    def GetMinimum(self):
        """GetMinimum(itkStatisticsImageFilterIUS3 self) -> unsigned short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMinimum(self)


    def GetMaximumOutput(self):
        """GetMaximumOutput(itkStatisticsImageFilterIUS3 self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMaximumOutput(self)


    def GetMaximum(self):
        """GetMaximum(itkStatisticsImageFilterIUS3 self) -> unsigned short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMaximum(self)


    def GetMeanOutput(self):
        """GetMeanOutput(itkStatisticsImageFilterIUS3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMeanOutput(self)


    def GetMean(self):
        """GetMean(itkStatisticsImageFilterIUS3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMean(self)


    def GetSigmaOutput(self):
        """GetSigmaOutput(itkStatisticsImageFilterIUS3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSigmaOutput(self)


    def GetSigma(self):
        """GetSigma(itkStatisticsImageFilterIUS3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSigma(self)


    def GetVarianceOutput(self):
        """GetVarianceOutput(itkStatisticsImageFilterIUS3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetVarianceOutput(self)


    def GetVariance(self):
        """GetVariance(itkStatisticsImageFilterIUS3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetVariance(self)


    def GetSumOutput(self):
        """GetSumOutput(itkStatisticsImageFilterIUS3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSumOutput(self)


    def GetSum(self):
        """GetSum(itkStatisticsImageFilterIUS3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSum(self)


    def GetSumOfSquaresOutput(self):
        """GetSumOfSquaresOutput(itkStatisticsImageFilterIUS3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSumOfSquaresOutput(self)


    def GetSumOfSquares(self):
        """GetSumOfSquares(itkStatisticsImageFilterIUS3 self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSumOfSquares(self)

    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkStatisticsImageFilterIUS3"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIUS3

        Create a new object of the class itkStatisticsImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStatisticsImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStatisticsImageFilterIUS3.Clone = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_Clone, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3.GetMinimumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMinimumOutput, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3.GetMinimum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMinimum, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3.GetMaximumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMaximumOutput, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3.GetMaximum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMaximum, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3.GetMeanOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMeanOutput, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3.GetMean = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMean, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3.GetSigmaOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSigmaOutput, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3.GetSigma = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSigma, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3.GetVarianceOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetVarianceOutput, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3.GetVariance = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetVariance, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3.GetSumOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSumOutput, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3.GetSum = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSum, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3.GetSumOfSquaresOutput = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSumOfSquaresOutput, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3.GetSumOfSquares = new_instancemethod(_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSumOfSquares, None, itkStatisticsImageFilterIUS3)
itkStatisticsImageFilterIUS3_swigregister = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_swigregister
itkStatisticsImageFilterIUS3_swigregister(itkStatisticsImageFilterIUS3)

def itkStatisticsImageFilterIUS3___New_orig__():
    """itkStatisticsImageFilterIUS3___New_orig__() -> itkStatisticsImageFilterIUS3_Pointer"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3___New_orig__()

def itkStatisticsImageFilterIUS3_cast(obj):
    """itkStatisticsImageFilterIUS3_cast(itkLightObject obj) -> itkStatisticsImageFilterIUS3"""
    return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_cast(obj)


def statistics_image_filter(*args, **kwargs):
    """Procedural interface for StatisticsImageFilter"""
    import itk
    instance = itk.StatisticsImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def statistics_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.StatisticsImageFilter, itkTemplate.itkTemplate):
        statistics_image_filter.__doc__ = itk.StatisticsImageFilter.values()[0].__doc__
    else:
        statistics_image_filter.__doc__ = itk.StatisticsImageFilter.__doc__




