{
  "description": "Progress & Compress: A scalable framework for continual learning",
  "publication": "https://arxiv.org/abs/1805.06370",
  "discriminator": 
  {
      "class": "class:hypergan.discriminators.configurable_discriminator.ConfigurableDiscriminator",
      "defaults":{
        "activation": "relu",
        "initializer": "he_normal",
        "filter": [3,3],
        "stride": [1,1],
        "avg_pool": [2,2]
      },
      "layers":[
        "conv 32",
        "conv 64 ",
        "conv 128",
        "knowledge_base name=kb3",
        "conv 256",
        "knowledge_base name=kb4",
        "conv 256",
        "knowledge_base name=kb5",
        "reshape -1 name=shared",
        "linear 1 activation=null",
        "identity name=knowledge_base_target"
      ]

  },
  "generator": {
    "class": "class:hypergan.discriminators.configurable_discriminator.ConfigurableDiscriminator",
    "defaults": {
      "activation": "relu",
      "initializer": "he_normal",
      "filter": [3,3],
      "stride": [1,1],
      "avg_pool": [1,1]
    },
    "layers": [
      "linear 128",
      "reshape 1*1*128",
      "reshape -1 name=w",
      "const 4*4*128",
      "adaptive_instance_norm",
      "resize_conv 64 avg_pool=1",
      "adaptive_instance_norm",
      "resize_conv 32 avg_pool=1",
      "adaptive_instance_norm",
      "resize_conv 16",
      "adaptive_instance_norm",
      "resize_conv 3 avg_pool=1 activation=null"
    ]

  },

  "latent": {
    "class": "function:hypergan.distributions.uniform_distribution.UniformDistribution",
    "projections": [
      "function:hypergan.distributions.uniform_distribution.identity"
    ],
    "z": 128
  },
   "loss":
  {
    "class": "function:hypergan.losses.standard_loss.StandardLoss",
    "reduce": "reduce_mean"
  },
  "trainer": {
    "class": "function:hypergan.trainers.simultaneous_trainer.SimultaneousTrainer",
    "optimizer": {
    "class": "function:hypergan.optimizers.giga_wolf_optimizer.GigaWolfOptimizer",
      "optimizer": {
        "class": "function:tensorflow.python.training.adam.AdamOptimizer",
        "learn_rate": 1e-4,
        "beta1":0.0,
        "beta2":0.999
      },
      "optimizer2": {
        "class": "function:tensorflow.python.training.adam.AdamOptimizer",
        "learn_rate": 3e-5,
        "beta1":0.0,
        "beta2":0.999
      }
    },
    "hooks":[
      {
        "class": "function:hypergan.train_hooks.self_supervised_train_hook.SelfSupervisedTrainHook",
        "alpha": 0.1,
        "beta": 0.1,
         "r": {
            "class": "class:hypergan.discriminators.configurable_discriminator.ConfigurableDiscriminator",
            "initializer": "he_normal",
            "defaults":{
              "initializer": "he_normal"
            },
            "layers":[
              "linear 4 name=r1 activation=null"
            ]
         }
      },
      {
        "class": "function:hypergan.train_hooks.weight_constraint_train_hook.WeightConstraintTrainHook",
        "weight_constraint": ["l2nn"],
        "iterations": 1,
        "constraint_every": 1
      },
      {
        "class": "function:hypergan.train_hooks.gradient_penalty_train_hook.GradientPenaltyTrainHook",
        "lambda": 0.001
      },
      {
        "class": "function:hypergan.train_hooks.progress_compress_kbgan_train_hook.ProgressCompressKBGanTrainHook",
        "method": "gan",
        "knowledge_base": {
          "loss":
          {
            "class": "function:hypergan.losses.standard_loss.StandardLoss",
            "reduce": "reduce_mean"
          },
          "trainer": {
            "class": "function:hypergan.trainers.simultaneous_trainer.SimultaneousTrainer",
            "optimizer": {
              "class": "function:hypergan.optimizers.elastic_weight_consolidation_optimizer.ElasticWeightConsolidationOptimizer",
              "optimizer": {
                "class": "function:hypergan.optimizers.giga_wolf_optimizer.GigaWolfOptimizer",
                "optimizer": {
                  "class": "function:tensorflow.python.training.adam.AdamOptimizer",
                  "learn_rate": 1e-4,
                  "beta1":0.0,
                  "beta2":0.999
                },
                "optimizer2": {
                  "class": "function:tensorflow.python.training.adam.AdamOptimizer",
                  "learn_rate": 3e-5,
                  "beta1":0.0,
                  "beta2":0.999
                }

              }
            },
            "hooks":[
            ]
          },
          "discriminator": 
          {
            "class": "class:hypergan.discriminators.configurable_discriminator.ConfigurableDiscriminator",
            "defaults":{
              "activation": "relu",
              "initializer": "he_normal",
              "filter": [3,3],
              "stride": [1,1],
              "avg_pool": [2,2]
            },
            "layers":[
              "linear 256 name=kd1",
              "linear 128 name=kd2",
              "linear 1 activation=null name=kdend"
            ]
          },
          "generator": {
            "class": "class:hypergan.discriminators.configurable_discriminator.ConfigurableDiscriminator",
            "defaults":{
              "activation": "relu",
              "initializer": "he_normal",
              "filter": [3,3],
              "stride": [1,1],
              "avg_pool": [2,2]
            },
            "layers":[
              "conv 32 name=kb1",
              "conv 64  name=kb2", 
              "conv 128 name=kb3",
              "conv 256 name=kb4",
              "conv 256 name=kb5",
              "identity name=shared",
              "linear 1 activation=null name=kb7"
            ]
          }
        }
      }
    ]
  },
  "runtime": {
    "channels": 3,
    "width": 64,
    "height": 64,
    "train": "hypergan train [dataset] --sample_every 100 --sampler gang --format jpg --size 64x64x3 -b 1 -c progress-compress --save_every 10000 --resize"
  },
  "class": "class:hypergan.gans.standard_gan.StandardGAN"
}
