{"version":3,"sources":["webpack:///./app/views/releases/detail/shared/utils.jsx","webpack:///./app/components/commitAuthorStats.jsx","webpack:///./app/components/releaseProjectStatSparkline.jsx","webpack:///./app/views/releases/detail/shared/releaseDeploys.jsx","webpack:///./app/views/releases/detail/shared/releaseEmptyState.jsx","webpack:///./app/views/releases/detail/shared/releaseIssues.jsx","webpack:///./app/components/fileChange.jsx","webpack:///./app/components/repositoryFileSummary.jsx","webpack:///./app/views/releases/detail/project/releaseOverview.jsx"],"names":["__webpack_require__","d","__webpack_exports__","deleteRelease","getFilesByRepository","app_api__WEBPACK_IMPORTED_MODULE_0__","orgId","version","Client","requestPromise","concat","encodeURIComponent","method","fileList","reduce","fbr","file","filename","repoName","author","type","hasOwnProperty","authors","types","Set","repos","email","add","CommitBar","barStyle","width","this","props","authorCommits","totalCommits","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","style","React","Component","propTypes","PropTypes","number","isRequired","CommitAuthorStats","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","state","loading","error","_this2","api","request","getPath","success","data","_","jqXHR","setState","commitList","pageLinks","getResponseHeader","_this$props","projectId","encodedVersion","t","app_components_loadingIndicator__WEBPACK_IMPORTED_MODULE_8__","app_components_loadingError__WEBPACK_IMPORTED_MODULE_9__","commitAuthors","_commitAuthors","commit","commitCount","commitAuthorValues","Object","values","sort","b","marginTop","length","renderEmpty","app_components_panels__WEBPACK_IMPORTED_MODULE_14__","map","commitAuthor","i","key","p","align","grid_emotion__WEBPACK_IMPORTED_MODULE_7__","app_components_tooltip__WEBPACK_IMPORTED_MODULE_11__","title","name","app_components_avatar__WEBPACK_IMPORTED_MODULE_10__","user","size","flex","px","marginLeft","object","string","withApi","ReleaseProjectStatSparkline","stats","newIssueCount","Promise","all","getStatReceived","getNewIssuesCount","e","then","bind","_ref","_ref2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","newIssues","reactSparkLines","newGroups","Sparklines","SparklinesLine","_this3","project","slug","path","_this4","_this$props2","issuesPath","react__WEBPACK_IMPORTED_MODULE_7___default","Fragment","tn","_this$props3","organization","app_components_loadingIndicator__WEBPACK_IMPORTED_MODULE_10__","app_components_loadingError__WEBPACK_IMPORTED_MODULE_11__","_this$state","tuple","hasSentry10","features","has","height","stroke","fill","strokeWidth","renderProjectSummary","react_router__WEBPACK_IMPORTED_MODULE_8__","to","SentryTypes","Organization","withOrganization","ReleaseDeploys","react__WEBPACK_IMPORTED_MODULE_5___default","deploys","deploy","getBasePath","environment","id","app_components_link__WEBPACK_IMPORTED_MODULE_9__","verticalAlign","app_components_inlineSvg__WEBPACK_IMPORTED_MODULE_7__","src","app_components_timeSince__WEBPACK_IMPORTED_MODULE_8__","date","dateFinished","array","ReleaseEmptyState","StyledWell","centered","app_components_heroIcon__WEBPACK_IMPORTED_MODULE_9__","app_components_button__WEBPACK_IMPORTED_MODULE_8__","priority","href","styled","Well","target","space","ReleaseIssues","query","StyledIssueList","endpoint","getResolvedPath","pagination","app_components_panels__WEBPACK_IMPORTED_MODULE_10__","justify","showActions","params","getIssuesPath","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","limit","statsPeriod","IssueList","FileChange","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","react_default","inlineSvg","tooltip","avatar","PureComponent","Collapsed","onClick","count","func","RepositoryFileSummary","_getPrototypeOf2","_len","arguments","args","Array","_key","apply","onCollapseToggle","collapsed","repository","fileChangeSummary","MAX","MAX_WHEN_COLLAPSED","files","keys","fileCount","slice","numCollapsed","canCollapse","_fileChangeSummary$fi","fileChange","ReleaseOverview","createReactClass","displayName","Environment","contextTypes","release","mixins","ApiMixin","OrganizationState","getInitialState","projects","hasRepos","componentDidMount","fetchAll","componentDidUpdate","prevProps","_this$props$params","location","getReleaseProjects","getDeploys","getRepos","_this$props$params2","_this$props$params3","react__WEBPACK_IMPORTED_MODULE_2___default","render","_this$props$params4","lastCommit","context","app_components_loadingIndicator__WEBPACK_IMPORTED_MODULE_5__","app_components_loadingError__WEBPACK_IMPORTED_MODULE_6__","filesByRepository","paddingTop","_shared_releaseIssues__WEBPACK_IMPORTED_MODULE_18__","app_components_repositoryFileSummary__WEBPACK_IMPORTED_MODULE_10__","app_components_lastCommit__WEBPACK_IMPORTED_MODULE_7__","headerClass","app_components_commitAuthorStats__WEBPACK_IMPORTED_MODULE_8__","app_components_releaseProjectStatSparkline__WEBPACK_IMPORTED_MODULE_9__","_shared_releaseEmptyState__WEBPACK_IMPORTED_MODULE_17__","_shared_releaseDeploys__WEBPACK_IMPORTED_MODULE_16__","withEnvironmentInQueryString"],"mappings":"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","file":"ProjectReleaseOverview.js","sourcesContent":["import {Client} from 'app/api';\n\n/**\n * Delete release version\n *\n * @param {String} orgId Organization slug\n * @param {String} version Version\n * @returns {Promise}\n */\nexport function deleteRelease(orgId, version) {\n  const api = new Client();\n\n  return api.requestPromise(\n    `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`,\n    {\n      method: 'DELETE',\n    }\n  );\n}\n\n/**\n * Convert list of individual file changes into a per-file summary grouped by repository\n *\n * @param {Array<File>} fileList List of files\n * @returns {Object} Object grouped by repository and file name\n */\nexport function getFilesByRepository(fileList) {\n  return fileList.reduce(function(fbr, file) {\n    const {filename, repoName, author, type} = file;\n    if (!fbr.hasOwnProperty(repoName)) {\n      fbr[repoName] = {};\n    }\n    if (!fbr[repoName].hasOwnProperty(filename)) {\n      fbr[repoName][filename] = {\n        authors: {},\n        types: new Set(),\n        repos: new Set(),\n      };\n    }\n\n    fbr[repoName][filename].authors[author.email] = author;\n    fbr[repoName][filename].types.add(type);\n\n    return fbr;\n  }, {});\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Flex} from 'grid-emotion';\n\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport LoadingError from 'app/components/loadingError';\nimport Avatar from 'app/components/avatar';\nimport Tooltip from 'app/components/tooltip';\n\nimport withApi from 'app/utils/withApi';\n\nimport {t} from 'app/locale';\nimport {Panel, PanelItem, PanelBody} from 'app/components/panels';\n\nclass CommitBar extends React.Component {\n  static propTypes = {\n    totalCommits: PropTypes.number.isRequired,\n    authorCommits: PropTypes.number.isRequired,\n  };\n\n  render() {\n    const barStyle = {};\n    barStyle.width = this.props.authorCommits / this.props.totalCommits * 100 + '%';\n\n    return <div className=\"commit-bar\" style={barStyle} />;\n  }\n}\n\nclass CommitAuthorStats extends React.Component {\n  static propTypes = {\n    api: PropTypes.object,\n    orgId: PropTypes.string.isRequired,\n    // Provided in project release views, not in org release views\n    projectId: PropTypes.string,\n    version: PropTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      error: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.api.request(this.getPath(), {\n      method: 'GET',\n      success: (data, _, jqXHR) => {\n        this.setState({\n          error: false,\n          loading: false,\n          commitList: data,\n          pageLinks: jqXHR.getResponseHeader('Link'),\n        });\n      },\n      error: () => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      },\n    });\n  }\n\n  getPath() {\n    const {orgId, projectId, version} = this.props;\n    const encodedVersion = encodeURIComponent(version);\n\n    return this.props.projectId\n      ? `/projects/${orgId}/${projectId}/releases/${encodedVersion}/commits/`\n      : `/organizations/${orgId}/releases/${encodedVersion}/commits/`;\n  }\n\n  renderEmpty() {\n    return <div className=\"box empty\">{t('No authors in this release')}</div>;\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (this.state.error) {\n      return <LoadingError />;\n    }\n\n    const {commitList} = this.state;\n\n    const commitAuthors = commitList.reduce((_commitAuthors, commit) => {\n      const {author} = commit;\n      if (!_commitAuthors.hasOwnProperty(author.email)) {\n        _commitAuthors[author.email] = {\n          commitCount: 1,\n          author,\n        };\n      } else {\n        _commitAuthors[author.email].commitCount += 1;\n      }\n      return _commitAuthors;\n    }, {});\n\n    const commitAuthorValues = Object.values(commitAuthors);\n\n    // sort commitAuthors by highest commitCount to lowest commitCount\n    commitAuthorValues.sort((a, b) => {\n      return b.commitCount - a.commitCount;\n    });\n\n    return (\n      <div style={{marginTop: 5}}>\n        <h6 className=\"nav-header m-b-1\">{t('Commits by Author')}</h6>\n        {!commitAuthorValues.length && this.renderEmpty()}\n        <Panel>\n          <PanelBody>\n            {commitAuthorValues.map((commitAuthor, i) => {\n              const {author, commitCount} = commitAuthor;\n              return (\n                <PanelItem key={i} p={1} align=\"center\">\n                  <Flex>\n                    <Tooltip title={`${author.name} ${author.email}`}>\n                      <Avatar user={author} size={20} />\n                    </Tooltip>\n                  </Flex>\n                  <Flex flex=\"1\" px={1}>\n                    <CommitBar\n                      style={{marginLeft: 5}}\n                      totalCommits={commitList.length}\n                      authorCommits={commitCount}\n                    />\n                  </Flex>\n                  <div>{commitCount}</div>\n                </PanelItem>\n              );\n            })}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default withApi(CommitAuthorStats);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router';\n\nimport SentryTypes from 'app/sentryTypes';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport LoadingError from 'app/components/loadingError';\nimport {t, tn} from 'app/locale';\nimport withOrganization from 'app/utils/withOrganization';\nimport withApi from 'app/utils/withApi';\n\nclass ReleaseProjectStatSparkline extends React.Component {\n  static propTypes = {\n    api: PropTypes.object.isRequired,\n    organization: SentryTypes.Organization,\n    orgId: PropTypes.string,\n    project: PropTypes.object,\n    version: PropTypes.string,\n  };\n\n  state = {\n    loading: true,\n    error: false,\n    stats: [],\n    newIssueCount: null,\n  };\n\n  componentDidMount() {\n    Promise.all([\n      this.getStatReceived(),\n      this.getNewIssuesCount(),\n      import(/* webpackChunkName: \"ReactSparkLines\" */ 'react-sparklines'),\n    ]).then(\n      ([stats, newIssues, reactSparkLines]) => {\n        this.setState({\n          loading: false,\n          stats,\n          newIssueCount: newIssues && newIssues.newGroups,\n          Sparklines: reactSparkLines.Sparklines,\n          SparklinesLine: reactSparkLines.SparklinesLine,\n          error: false,\n        });\n      },\n      () => {\n        this.setState({error: true});\n      }\n    );\n  }\n\n  getStatReceived() {\n    const {api, orgId} = this.props;\n    const projectId = this.props.project.slug;\n    const path = `/projects/${orgId}/${projectId}/stats/`;\n    return api.requestPromise(path, {\n      method: 'GET',\n      data: 'stat=received',\n      success: (data, _, jqXHR) => {\n        this.setState({\n          stats: data,\n        });\n        this.getNewIssuesCount();\n      },\n      error: () => {\n        this.setState({\n          error: true,\n        });\n      },\n    });\n  }\n\n  getNewIssuesCount() {\n    const {api, orgId, version} = this.props;\n    const projectId = this.props.project.slug;\n    const issuesPath = `/projects/${orgId}/${projectId}/releases/${encodeURIComponent(\n      version\n    )}/`;\n    return api.requestPromise(issuesPath, {\n      method: 'GET',\n      success: (data, _, jqXHR) => {\n        this.setState({\n          newIssueCount: data.newGroups,\n          loading: false,\n        });\n      },\n      error: () => {\n        this.setState({\n          error: true,\n        });\n      },\n    });\n  }\n\n  renderProjectSummary() {\n    const {project} = this.props;\n    const {newIssueCount} = this.state;\n\n    return (\n      <React.Fragment>\n        <h6 className=\"m-b-0\">{project.slug}</h6>\n        <p className=\"m-b-0 text-muted\">\n          <small>\n            {newIssueCount > 0\n              ? tn('%s new issue', '%s new issues', newIssueCount)\n              : t('No new issues')}\n          </small>\n        </p>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const {organization, orgId, project, version} = this.props;\n\n    if (this.state.loading) {\n      return <LoadingIndicator />;\n    }\n    if (this.state.error) {\n      return <LoadingError />;\n    }\n\n    const {Sparklines, SparklinesLine, stats} = this.state;\n    const values = stats.map(tuple => tuple[1]);\n\n    const hasSentry10 = new Set(organization.features).has('sentry10');\n\n    return (\n      <li>\n        <div className=\"sparkline pull-right\" style={{width: 96}}>\n          <Sparklines data={values} width={100} height={32}>\n            <SparklinesLine style={{stroke: '#8f85d4', fill: 'none', strokeWidth: 3}} />\n          </Sparklines>\n        </div>\n        {hasSentry10 ? (\n          <div>{this.renderProjectSummary()}</div>\n        ) : (\n          <Link to={`/${orgId}/${project.slug}/releases/${encodeURIComponent(version)}/`}>\n            {this.renderProjectSummary()}\n          </Link>\n        )}\n      </li>\n    );\n  }\n}\n\nexport default withOrganization(withApi(ReleaseProjectStatSparkline));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InlineSvg from 'app/components/inlineSvg';\nimport TimeSince from 'app/components/timeSince';\nimport Link from 'app/components/link';\nimport {t} from 'app/locale';\n\nexport default class ReleaseDeploys extends React.Component {\n  static propTypes = {\n    deploys: PropTypes.array.isRequired,\n    version: PropTypes.string.isRequired,\n    orgId: PropTypes.string.isRequired,\n    // Provided only in the project version of release deploys\n    projectId: PropTypes.string,\n  };\n\n  getBasePath() {\n    const {orgId, projectId} = this.props;\n\n    return projectId ? `/${orgId}/${projectId}/` : `/organizations/${orgId}/issues/`;\n  }\n\n  renderEmpty() {\n    return <div className=\"box empty\">{t('None')}</div>;\n  }\n\n  render() {\n    const {deploys, version} = this.props;\n\n    return (\n      <React.Fragment>\n        <h6 className=\"nav-header m-b-1\">{t('Deploys')}</h6>\n        <ul className=\"nav nav-stacked\">\n          {!deploys.length\n            ? this.renderEmpty()\n            : deploys.map(deploy => {\n                const path = `${this.getBasePath()}?query=release:${version}&environment=${encodeURIComponent(\n                  deploy.environment\n                )}`;\n                return (\n                  <li key={deploy.id}>\n                    <Link to={path} title={t('View in stream')}>\n                      <div className=\"row row-flex row-center-vertically\">\n                        <div className=\"col-xs-6\">\n                          <span className=\"repo-label\" style={{verticalAlign: 'bottom'}}>\n                            {deploy.environment}\n                            <InlineSvg src=\"icon-open\" style={{marginLeft: 6}} />\n                          </span>\n                        </div>\n                        <div className=\"col-xs-6 align-right\">\n                          <small>\n                            <TimeSince date={deploy.dateFinished} />\n                          </small>\n                        </div>\n                      </div>\n                    </Link>\n                  </li>\n                );\n              })}\n        </ul>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'react-emotion';\n\nimport space from 'app/styles/space';\nimport Button from 'app/components/button';\nimport HeroIcon from 'app/components/heroIcon';\nimport Well from 'app/components/well';\nimport SentryTypes from 'app/sentryTypes';\nimport {t} from 'app/locale';\nimport withOrganization from 'app/utils/withOrganization';\n\nclass ReleaseEmptyState extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n  };\n  render() {\n    return (\n      <StyledWell centered>\n        <HeroIcon src=\"icon-commit\" />\n        <h5>{t('Releases are better with commit data!')}</h5>\n        <p>\n          {t(`Connect a repository to see commit info, files changed, and authors\n                  involved in future releases`)}.\n        </p>\n        <Button\n          priority=\"primary\"\n          href={`/organizations/${this.props.organization.slug}/repos/`}\n        >\n          {t('Connect a repository')}\n        </Button>\n      </StyledWell>\n    );\n  }\n}\n\nconst StyledWell = styled(Well)`\n  margin-top: ${space(4)};\n  padding-top: ${space(2)};\n  padding-bottom: ${space(4)};\n`;\n\nexport default withOrganization(ReleaseEmptyState);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\n\nimport IssueList from 'app/components/issueList';\nimport {Panel, PanelBody, PanelItem} from 'app/components/panels';\nimport space from 'app/styles/space';\nimport {t} from 'app/locale';\n\nexport default class ReleaseIssues extends React.Component {\n  static propTypes = {\n    query: PropTypes.object.isRequired,\n    version: PropTypes.string.isRequired,\n    orgId: PropTypes.string.isRequired,\n    // Provided only in the project version of release issues\n    projectId: PropTypes.string,\n  };\n\n  getResolvedPath() {\n    const {version, orgId, projectId} = this.props;\n\n    return projectId\n      ? `/projects/${orgId}/${projectId}/releases/${encodeURIComponent(\n          version\n        )}/resolved/`\n      : `/organizations/${orgId}/releases/${encodeURIComponent(version)}/resolved/`;\n  }\n\n  getIssuesPath() {\n    const {orgId, projectId} = this.props;\n\n    return projectId\n      ? `/projects/${orgId}/${projectId}/issues/`\n      : `/organizations/${orgId}/issues/`;\n  }\n\n  render() {\n    const {version, orgId, query} = this.props;\n\n    return (\n      <React.Fragment>\n        <h5>{t('Issues Resolved in this Release')}</h5>\n        <StyledIssueList\n          endpoint={this.getResolvedPath()}\n          query={query}\n          pagination={false}\n          renderEmpty={() => (\n            <Panel>\n              <PanelBody>\n                <PanelItem justify=\"center\">{t('No issues resolved')}</PanelItem>\n              </PanelBody>\n            </Panel>\n          )}\n          showActions={false}\n          params={{orgId}}\n        />\n        <h5>{t('New Issues in this Release')}</h5>\n        <StyledIssueList\n          endpoint={this.getIssuesPath()}\n          query={{\n            ...query,\n            query: 'first-release:\"' + version + '\"',\n            limit: 5,\n          }}\n          statsPeriod=\"0\"\n          pagination={false}\n          renderEmpty={() => (\n            <Panel>\n              <PanelBody>\n                <PanelItem justify=\"center\">{t('No new issues')}</PanelItem>\n              </PanelBody>\n            </Panel>\n          )}\n          showActions={false}\n          params={{orgId}}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledIssueList = styled(IssueList)`\n  margin-bottom: ${space(2)};\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Avatar from 'app/components/avatar';\nimport Tooltip from 'app/components/tooltip';\nimport InlineSvg from 'app/components/inlineSvg';\n\nclass FileChange extends React.PureComponent {\n  static propTypes = {\n    filename: PropTypes.string.isRequired,\n    authors: PropTypes.array.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  render() {\n    const {filename, authors} = this.props;\n    return (\n      <li className=\"list-group-item list-group-item-sm release-file-change\">\n        <div className=\"row row-flex row-center-vertically\">\n          <div className=\"col-sm-10 truncate file-name\">\n            <InlineSvg src=\"icon-file\" className=\"icon-file-generic\" size=\"15\" />\n            {filename}\n          </div>\n          <div className=\"col-sm-2 avatar-grid align-right\">\n            {authors.map((author, i) => {\n              return (\n                <Tooltip key={i} title={`${author.name} ${author.email}`}>\n                  <span className=\"avatar-grid-item m-b-0\">\n                    <Avatar user={author} />\n                  </span>\n                </Tooltip>\n              );\n            })}\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default FileChange;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport FileChange from 'app/components/fileChange';\nimport {t, tn} from 'app/locale';\n\nfunction Collapsed(props) {\n  return (\n    <li className=\"list-group-item list-group-item-sm align-center\">\n      <span className=\"icon-container\" />\n      <a onClick={props.onClick}>\n        {tn('Show %s collapsed file', 'Show %s collapsed files', props.count)}\n      </a>\n    </li>\n  );\n}\n\nCollapsed.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired,\n};\n\nclass RepositoryFileSummary extends React.Component {\n  static propTypes = {\n    fileChangeSummary: PropTypes.object,\n    repository: PropTypes.string,\n  };\n\n  static MAX_WHEN_COLLAPSED = 5;\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      collapsed: true,\n    };\n  }\n\n  onCollapseToggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    const {repository, fileChangeSummary} = this.props;\n    const MAX = RepositoryFileSummary.MAX_WHEN_COLLAPSED;\n    let files = Object.keys(fileChangeSummary);\n    const fileCount = files.length;\n    files.sort();\n    if (this.state.collapsed && fileCount > MAX) {\n      files = files.slice(0, MAX);\n    }\n    const numCollapsed = fileCount - files.length;\n    const canCollapse = fileCount > MAX;\n    return (\n      <div>\n        <h5>\n          {tn(\n            '%s file changed in ' + repository,\n            '%s files changed in ' + repository,\n            fileCount\n          )}\n        </h5>\n        <ul className=\"list-group list-group-striped m-b-2\">\n          {files.map(filename => {\n            const {authors, types} = fileChangeSummary[filename];\n            return (\n              <FileChange\n                key={filename}\n                filename={filename}\n                authors={Object.values(authors)}\n                types={types}\n              />\n            );\n          })}\n          {numCollapsed > 0 && (\n            <Collapsed onClick={this.onCollapseToggle} count={numCollapsed} />\n          )}\n          {numCollapsed === 0 &&\n            canCollapse && (\n              <li className=\"list-group-item list-group-item-sm align-center\">\n                <span className=\"icon-container\" />\n                <a onClick={this.onCollapseToggle}>{t('Collapse')}</a>\n              </li>\n            )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default RepositoryFileSummary;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport createReactClass from 'create-react-class';\n\nimport withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport LoadingError from 'app/components/loadingError';\nimport LastCommit from 'app/components/lastCommit';\nimport CommitAuthorStats from 'app/components/commitAuthorStats';\nimport ReleaseProjectStatSparkline from 'app/components/releaseProjectStatSparkline';\nimport RepositoryFileSummary from 'app/components/repositoryFileSummary';\n\nimport ApiMixin from 'app/mixins/apiMixin';\n\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport OrganizationState from 'app/mixins/organizationState';\n\nimport {getFilesByRepository} from '../shared/utils';\nimport ReleaseDeploys from '../shared/releaseDeploys';\nimport ReleaseEmptyState from '../shared/releaseEmptyState';\nimport ReleaseIssues from '../shared/releaseIssues';\n\nconst ReleaseOverview = createReactClass({\n  displayName: 'ReleaseOverview',\n\n  propTypes: {\n    environment: SentryTypes.Environment,\n  },\n\n  contextTypes: {\n    release: PropTypes.object,\n  },\n\n  mixins: [ApiMixin, OrganizationState],\n\n  getInitialState() {\n    return {\n      loading: true,\n      error: false,\n      projects: [],\n      fileList: [],\n      deploys: [],\n      hasRepos: false,\n    };\n  },\n\n  componentDidMount() {\n    this.fetchAll();\n  },\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.environment !== this.props.environment) {\n      this.fetchAll();\n    }\n  },\n\n  fetchAll() {\n    const {orgId, version} = this.props.params;\n    const query = {\n      ...this.props.location.query,\n    };\n\n    if (this.props.environment) {\n      query.environment = this.props.environment.name;\n    } else {\n      delete query.environment;\n    }\n\n    const path = `/organizations/${orgId}/releases/${encodeURIComponent(\n      version\n    )}/commitfiles/`;\n    this.api.request(path, {\n      method: 'GET',\n      data: query,\n      success: (data, _, jqXHR) => {\n        this.setState({\n          fileList: data,\n        });\n      },\n      error: () => {\n        this.setState({\n          error: true,\n        });\n      },\n    });\n    this.getReleaseProjects();\n    this.getDeploys();\n    this.getRepos();\n  },\n\n  getReleaseProjects() {\n    const {orgId, version} = this.props.params;\n    const query = this.props.environment\n      ? {environment: this.props.environment.name}\n      : {};\n\n    const path = `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`;\n    this.api.request(path, {\n      query,\n      method: 'GET',\n      success: (data, _, jqXHR) => {\n        this.setState({\n          projects: data.projects,\n        });\n      },\n      error: () => {\n        this.setState({\n          error: true,\n        });\n      },\n    });\n  },\n\n  getDeploys() {\n    const {orgId, version} = this.props.params;\n\n    const path = `/organizations/${orgId}/releases/${encodeURIComponent(\n      version\n    )}/deploys/`;\n    this.api.request(path, {\n      method: 'GET',\n      success: (data, _, jqXHR) => {\n        this.setState({\n          deploys: data,\n          loading: false,\n        });\n      },\n      error: () => {\n        this.setState({\n          error: true,\n        });\n      },\n    });\n  },\n\n  getRepos() {\n    const {orgId} = this.props.params;\n    const query = this.props.environment\n      ? {environment: this.props.environment.name}\n      : {};\n\n    const path = `/organizations/${orgId}/repos/`;\n    this.api.request(path, {\n      method: 'GET',\n      query,\n      success: (data, _, jqXHR) => {\n        this.setState({\n          hasRepos: data.length > 0,\n        });\n      },\n      error: () => {\n        this.setState({\n          error: true,\n        });\n      },\n    });\n  },\n\n  renderEmpty() {\n    return <div className=\"box empty\">{t('None')}</div>;\n  },\n\n  render() {\n    const {orgId, projectId, version} = this.props.params;\n    const {release} = this.context;\n    const lastCommit = release.lastCommit;\n\n    if (this.state.loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (this.state.error) {\n      return <LoadingError />;\n    }\n\n    const {fileList, projects, hasRepos} = this.state;\n\n    const filesByRepository = getFilesByRepository(fileList);\n\n    const query = this.props.environment\n      ? {environment: this.props.environment.name}\n      : {};\n\n    return (\n      <div>\n        <div className=\"row\" style={{paddingTop: 10}}>\n          <div className=\"col-sm-8\">\n            <ReleaseIssues\n              version={version}\n              query={query}\n              orgId={orgId}\n              projectId={projectId}\n            />\n            {hasRepos && (\n              <div>\n                {Object.keys(filesByRepository).map((repository, i) => {\n                  return (\n                    <RepositoryFileSummary\n                      key={i}\n                      repository={repository}\n                      fileChangeSummary={filesByRepository[repository]}\n                    />\n                  );\n                })}\n              </div>\n            )}\n          </div>\n          <div className=\"col-sm-4\">\n            {hasRepos ? (\n              <div>\n                {lastCommit && (\n                  <LastCommit commit={lastCommit} headerClass=\"nav-header\" />\n                )}\n                <CommitAuthorStats\n                  orgId={orgId}\n                  projectId={projectId}\n                  version={version}\n                />\n                <h6 className=\"nav-header m-b-1\">{t('Other Projects Affected')}</h6>\n                <ul className=\"nav nav-stacked\">\n                  {projects.length === 1\n                    ? this.renderEmpty()\n                    : projects.map(project => {\n                        if (project.slug === projectId) {\n                          return null;\n                        }\n                        return (\n                          <ReleaseProjectStatSparkline\n                            key={project.id}\n                            orgId={orgId}\n                            project={project}\n                            version={version}\n                          />\n                        );\n                      })}\n                </ul>\n              </div>\n            ) : (\n              <ReleaseEmptyState />\n            )}\n            <ReleaseDeploys\n              deploys={this.state.deploys}\n              version={version}\n              orgId={orgId}\n              projectId={projectId}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  },\n});\n\nexport default withEnvironmentInQueryString(ReleaseOverview);\n"],"sourceRoot":""}