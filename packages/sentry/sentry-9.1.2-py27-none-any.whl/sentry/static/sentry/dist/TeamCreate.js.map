{"version":3,"sources":["webpack:///./app/components/createTeam/createTeamForm.jsx","webpack:///./app/views/teamCreate.jsx"],"names":["CreateTeamForm","handleCreateTeamSuccess","data","onSuccess","_this","props","organization","this","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","Fragment","t","app_views_settings_components_forms_form__WEBPACK_IMPORTED_MODULE_9__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","submitLabel","apiEndpoint","concat","slug","apiMethod","onSubmit","onSubmitSuccess","requireChanges","data-test-id","formProps","app_views_settings_components_forms_textField__WEBPACK_IMPORTED_MODULE_11__","name","label","placeholder","help","required","stacked","flexibleControlStateSize","inline","transformInput","slugify","React","Component","propTypes","SentryTypes","Organization","isRequired","PropTypes","func","object","TeamCreate","handleSubmitSuccess","orgId","params","redirectUrl","router","push","react__WEBPACK_IMPORTED_MODULE_6___default","app_components_narrowLayout__WEBPACK_IMPORTED_MODULE_10__","app_components_createTeam_createTeamForm__WEBPACK_IMPORTED_MODULE_9__","context","AsyncView","contextTypes","withRouter"],"mappings":"2SASqBA,qLAQnBC,wBAA0B,SAAAC,GAAQ,IACzBC,EAAaC,EAAKC,MAAlBF,UAEkB,mBAAdA,GAIXA,EAAUD,4DAGH,IACAI,EAAgBC,KAAKF,MAArBC,aAEP,OACEE,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,SACGE,YACC,qHAIJJ,EAAAC,EAAAC,cAACG,EAAA,QAADC,IAAA,CACEC,YAAaH,YAAE,eACfI,YAAW,kBAAAC,OAAoBX,EAAaY,KAAjC,WACXC,UAAU,OACVC,SAAUb,KAAKF,MAAMe,SACrBC,gBAAiBd,KAAKN,wBACtBqB,gBAAc,EACdC,eAAa,oBACThB,KAAKF,MAAMmB,WAEfhB,EAAAC,EAAAC,cAACe,EAAA,QAAD,CACEC,KAAK,OACLC,MAAOf,YAAE,aACTgB,YAAahB,YAAE,0CACfiB,KAAMjB,YAAE,mEACRkB,UAAQ,EACRC,SAAO,EACPC,0BAAwB,EACxBC,QAAQ,EACRC,eAAgBC,eAhDgBC,IAAMC,WAA7BrC,EACZsC,UAAY,CACjBhC,aAAciC,UAAYC,aAAaC,WACvCtC,UAAWuC,IAAUC,KACrBvB,SAAUsB,IAAUC,KACpBnB,UAAWkB,IAAUE,iPCLnBC,qLAaJC,oBAAsB,SAAA5C,GAAQ,IACrB6C,EAAS3C,EAAKC,MAAM2C,OAApBD,MACDE,EAAW,aAAAhC,OAAgB8B,EAAhB,WAAA9B,OAA+Bf,EAAKgB,KAApC,KACjBd,EAAKC,MAAM6C,OAAOC,KAAKF,8DAVvB,MAAO,qDAIP,MAAO,wCAUP,OACEG,EAAA3C,EAAAC,cAAC2C,EAAA,QAAD,KACED,EAAA3C,EAAAC,cAAA,UAAKE,YAAE,sBAEPwC,EAAA3C,EAAAC,cAAC4C,EAAA,EAAD,CACEnD,UAAWI,KAAKuC,oBAChBxC,aAAcC,KAAKgD,QAAQjD,uBA1BZkD,WAAnBX,EACGY,aAAe,CACpBnD,aAAciC,UAAYC,cAgCfkB,+BAAWb","file":"TeamCreate.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t} from 'app/locale';\nimport Form from 'app/views/settings/components/forms/form';\nimport SentryTypes from 'app/sentryTypes';\nimport TextField from 'app/views/settings/components/forms/textField';\nimport slugify from 'app/utils/slugify';\n\nexport default class CreateTeamForm extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    onSuccess: PropTypes.func,\n    onSubmit: PropTypes.func,\n    formProps: PropTypes.object,\n  };\n\n  handleCreateTeamSuccess = data => {\n    const {onSuccess} = this.props;\n\n    if (typeof onSuccess !== 'function') {\n      return;\n    }\n\n    onSuccess(data);\n  };\n\n  render() {\n    const {organization} = this.props;\n\n    return (\n      <React.Fragment>\n        <p>\n          {t(\n            \"Teams group members' access to a specific focus, e.g. a major product or application that may have sub-projects.\"\n          )}\n        </p>\n\n        <Form\n          submitLabel={t('Create Team')}\n          apiEndpoint={`/organizations/${organization.slug}/teams/`}\n          apiMethod=\"POST\"\n          onSubmit={this.props.onSubmit}\n          onSubmitSuccess={this.handleCreateTeamSuccess}\n          requireChanges\n          data-test-id=\"create-team-form\"\n          {...this.props.formProps}\n        >\n          <TextField\n            name=\"slug\"\n            label={t('Team Slug')}\n            placeholder={t('e.g. operations, web-frontend, desktop')}\n            help={t('May contain lowercase letters, numbers, dashes and underscores.')}\n            required\n            stacked\n            flexibleControlStateSize\n            inline={false}\n            transformInput={slugify}\n          />\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import {withRouter} from 'react-router';\nimport React from 'react';\n\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport CreateTeamForm from 'app/components/createTeam/createTeamForm';\nimport NarrowLayout from 'app/components/narrowLayout';\nimport SentryTypes from 'app/sentryTypes';\n\nclass TeamCreate extends AsyncView {\n  static contextTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  getTitle() {\n    return 'Create Team';\n  }\n\n  getEndpoints() {\n    return [];\n  }\n\n  handleSubmitSuccess = data => {\n    const {orgId} = this.props.params;\n    const redirectUrl = `/settings/${orgId}/teams/${data.slug}/`;\n    this.props.router.push(redirectUrl);\n  };\n\n  renderBody() {\n    return (\n      <NarrowLayout>\n        <h3>{t('Create a New Team')}</h3>\n\n        <CreateTeamForm\n          onSuccess={this.handleSubmitSuccess}\n          organization={this.context.organization}\n        />\n      </NarrowLayout>\n    );\n  }\n}\n\nexport {TeamCreate};\nexport default withRouter(TeamCreate);\n"],"sourceRoot":""}