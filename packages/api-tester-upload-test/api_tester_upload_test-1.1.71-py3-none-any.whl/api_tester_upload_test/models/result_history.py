# -*- coding: utf-8 -*-

"""
    api_tester_upload_test

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import api_tester_upload_test.models.data

class ResultHistory(object):

    """Implementation of the 'ResultHistory' model.

    TODO: type model description here.

    Attributes:
        version (string): TODO: type description here.
        action (string): TODO: type description here.
        path (string): TODO: type description here.
        mtype (string): TODO: type description here.
        data (Data): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "version":'version',
        "action":'action',
        "path":'path',
        "mtype":'type',
        "data":'data'
    }

    def __init__(self,
                 version=None,
                 action=None,
                 path=None,
                 mtype=None,
                 data=None):
        """Constructor for the ResultHistory class"""

        # Initialize members of the class
        self.version = version
        self.action = action
        self.path = path
        self.mtype = mtype
        self.data = data


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        version = dictionary.get('version')
        action = dictionary.get('action')
        path = dictionary.get('path')
        mtype = dictionary.get('type')
        data = api_tester_upload_test.models.data.Data.from_dictionary(dictionary.get('data')) if dictionary.get('data') else None

        # Return an object of this model
        return cls(version,
                   action,
                   path,
                   mtype,
                   data)


