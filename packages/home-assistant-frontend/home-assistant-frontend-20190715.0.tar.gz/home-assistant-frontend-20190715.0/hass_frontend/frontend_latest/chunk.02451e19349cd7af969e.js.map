{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-item-behavior.js","webpack:///./node_modules/@polymer/paper-item/paper-item.js","webpack:///./node_modules/@polymer/paper-item/paper-item-shared-styles.js","webpack:///./node_modules/@polymer/paper-listbox/paper-listbox.js","webpack:///./src/components/ha-icon.ts","webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./src/components/user/ha-user-badge.ts","webpack:///./src/components/ha-sidebar.ts","webpack:///./src/external_app/external_config.ts"],"names":["__webpack_require__","d","__webpack_exports__","PaperItemBehavior","_polymer_iron_behaviors_iron_button_state_js__WEBPACK_IMPORTED_MODULE_1__","_polymer_iron_behaviors_iron_control_state_js__WEBPACK_IMPORTED_MODULE_2__","IronButtonState","IronControlState","hostAttributes","role","tabindex","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","_paper_item_behavior_js__WEBPACK_IMPORTED_MODULE_5__","Polymer","_template","html","is","behaviors","$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","_polymer_iron_menu_behavior_iron_menu_behavior_js__WEBPACK_IMPORTED_MODULE_2__","IronMenuBehavior","HaIcon","ironIconClass","customElements","get","loaded","[object Object]","args","super","this","_iconsetName","listen","node","eventName","methodName","e","then","bind","define","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","_paper_item_behavior_js__WEBPACK_IMPORTED_MODULE_6__","computeInitials","name","trim","split","slice","map","s","substr","join","customElement","StateBadge","_LitElement","_initialize","property","user","initials","changedProps","_get","_getPrototypeOf","prototype","call","toggleAttribute","length","css","LitElement","SHOW_AFTER_SPACER","computeUrl","urlPath","SUPPORT_SCROLL_IF_NEEDED","body","SORT_VALUE","logbook","history","developer-tools","configuration","panelSorter","a","b","aBuiltIn","component_name","bBuiltIn","title","renderPanel","hass","panel","url_path","icon","localize","HaSidebar","type","Boolean","reflect","localStorage","defaultPage","DEFAULT_PANEL","beforeSpacer","afterSpacer","panels","Object","values","forEach","includes","push","sort","computePanels","notificationCount","_notifications","entityId","states","computeDomain","narrow","dockedSidebar","_toggleSidebar","panelUrl","_defaultPage","_externalConfig","hasSettingsScreen","_handleExternalAppConfiguration","_handleShowNotificationDrawer","classMap","profile","iron-selected","has","oldHass","ha_sidebar_get","ha_sidebar_getPrototypeOf","auth","external","bus","cache","cfg","sendMessage","getExternalConfig","conf","addEventListener","_expandTimeout","clearTimeout","undefined","_expand","_contract","subscribeNotifications","connection","notifications","alwaysExpand","expanded","expandedWidth","selectedEl","shadowRoot","querySelector","scrollIntoViewIfNeeded","window","setTimeout","_contractTimeout","fireEvent","ev","preventDefault","fireMessage"],"mappings":"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","file":"chunk.02451e19349cd7af969e.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronButtonState} from '@polymer/iron-behaviors/iron-button-state.js';\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\n\n/*\n`PaperItemBehavior` is a convenience behavior shared by <paper-item> and\n<paper-icon-item> that manages the shared control states and attributes of\nthe items.\n*/\n/** @polymerBehavior PaperItemBehavior */\nexport const PaperItemBehaviorImpl = {\n  hostAttributes: {role: 'option', tabindex: '0'}\n};\n\n/** @polymerBehavior */\nexport const PaperItemBehavior =\n    [IronButtonState, IronControlState, PaperItemBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/**\nMaterial design:\n[Lists](https://www.google.com/design/spec/components/lists.html)\n\n`<paper-item>` is an interactive list item. By default, it is a horizontal\nflexbox.\n\n    <paper-item>Item</paper-item>\n\nUse this element with `<paper-item-body>` to make Material Design styled\ntwo-line and three-line items.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n      <iron-icon icon=\"warning\"></iron-icon>\n    </paper-item>\n\nTo use `paper-item` as a link, wrap it in an anchor tag. Since `paper-item` will\nalready receive focus, you may want to prevent the anchor tag from receiving\nfocus as well by setting its tabindex to -1.\n\n    <a href=\"https://www.polymer-project.org/\" tabindex=\"-1\">\n      <paper-item raised>Polymer Project</paper-item>\n    </a>\n\nIf you are concerned about performance and want to use `paper-item` in a\n`paper-listbox` with many items, you can just use a native `button` with the\n`paper-item` class applied (provided you have correctly included the shared\nstyles):\n\n    <style is=\"custom-style\" include=\"paper-item-shared-styles\"></style>\n\n    <paper-listbox>\n      <button class=\"paper-item\" role=\"option\">Inbox</button>\n      <button class=\"paper-item\" role=\"option\">Starred</button>\n      <button class=\"paper-item\" role=\"option\">Sent mail</button>\n    </paper-listbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-min-height` | Minimum height of the item | `48px`\n`--paper-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n### Accessibility\n\nThis element has `role=\"listitem\"` by default. Depending on usage, it may be\nmore appropriate to set `role=\"menuitem\"`, `role=\"menuitemcheckbox\"` or\n`role=\"menuitemradio\"`.\n\n    <paper-item role=\"menuitemcheckbox\">\n      <paper-item-body>\n        Show your status\n      </paper-item-body>\n      <paper-checkbox></paper-checkbox>\n    </paper-item>\n\n@group Paper Elements\n@element paper-item\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\">\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n      }\n    </style>\n    <slot></slot>\n`,\n\n  is: 'paper-item',\n  behaviors: [PaperItemBehavior]\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/color.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-item-shared-styles\">\n  <template>\n    <style>\n      :host, .paper-item {\n        display: block;\n        position: relative;\n        min-height: var(--paper-item-min-height, 48px);\n        padding: 0px 16px;\n      }\n\n      .paper-item {\n        @apply --paper-font-subhead;\n        border:none;\n        outline: none;\n        background: white;\n        width: 100%;\n        text-align: left;\n      }\n\n      :host([hidden]), .paper-item[hidden] {\n        display: none !important;\n      }\n\n      :host(.iron-selected), .paper-item.iron-selected {\n        font-weight: var(--paper-item-selected-weight, bold);\n\n        @apply --paper-item-selected;\n      }\n\n      :host([disabled]), .paper-item[disabled] {\n        color: var(--paper-item-disabled-color, var(--disabled-text-color));\n\n        @apply --paper-item-disabled;\n      }\n\n      :host(:focus), .paper-item:focus {\n        position: relative;\n        outline: 0;\n\n        @apply --paper-item-focused;\n      }\n\n      :host(:focus):before, .paper-item:focus:before {\n        @apply --layout-fit;\n\n        background: currentColor;\n        content: '';\n        opacity: var(--dark-divider-opacity);\n        pointer-events: none;\n\n        @apply --paper-item-focused-before;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/default-theme.js';\n\nimport {IronMenuBehavior} from '@polymer/iron-menu-behavior/iron-menu-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design:\n[Menus](https://www.google.com/design/spec/components/menus.html)\n\n`<paper-listbox>` implements an accessible listbox control with Material Design\nstyling. The focused item is highlighted, and the selected item has bolded text.\n\n    <paper-listbox>\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\nAn initial selection can be specified with the `selected` attribute.\n\n    <paper-listbox selected=\"0\">\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\nMake a multi-select listbox with the `multi` attribute. Items in a multi-select\nlistbox can be deselected, and multiple item can be selected.\n\n    <paper-listbox multi>\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-listbox-background-color`   | Menu background color |\n`--primary-background-color`\n`--paper-listbox-color`              | Menu foreground color |\n`--primary-text-color`\n`--paper-listbox`                    | Mixin applied to the listbox | `{}`\n\n### Accessibility\n\n`<paper-listbox>` has `role=\"listbox\"` by default. A multi-select listbox will\nalso have `aria-multiselectable` set. It implements key bindings to navigate\nthrough the listbox with the up and down arrow keys, esc to exit the listbox,\nand enter to activate a listbox item. Typing the first letter of a listbox item\nwill also focus it.\n\n@group Paper Elements\n@element paper-listbox\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        padding: 8px 0;\n\n        background: var(--paper-listbox-background-color, var(--primary-background-color));\n        color: var(--paper-listbox-color, var(--primary-text-color));\n\n        @apply --paper-listbox;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-listbox',\n  behaviors: [IronMenuBehavior],\n\n  /** @private */\n  hostAttributes: {role: 'listbox'}\n});\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","import {\n  LitElement,\n  TemplateResult,\n  css,\n  CSSResult,\n  html,\n  property,\n  customElement,\n} from \"lit-element\";\nimport { User } from \"../../data/user\";\nimport { CurrentUser } from \"../../types\";\n\nconst computeInitials = (name: string) => {\n  if (!name) {\n    return \"user\";\n  }\n  return (\n    name\n      .trim()\n      // Split by space and take first 3 words\n      .split(\" \")\n      .slice(0, 3)\n      // Of each word, take first letter\n      .map((s) => s.substr(0, 1))\n      .join(\"\")\n  );\n};\n\n@customElement(\"ha-user-badge\")\nclass StateBadge extends LitElement {\n  @property() public user?: User | CurrentUser;\n\n  protected render(): TemplateResult | void {\n    const user = this.user;\n    const initials = user ? computeInitials(user.name) : \"?\";\n    return html`\n      ${initials}\n    `;\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n    this.toggleAttribute(\n      \"long\",\n      (this.user ? computeInitials(this.user.name) : \"?\").length > 2\n    );\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: inline-block;\n        box-sizing: border-box;\n        width: 40px;\n        line-height: 40px;\n        border-radius: 50%;\n        text-align: center;\n        background-color: var(--light-primary-color);\n        text-decoration: none;\n        color: var(--primary-text-color);\n        overflow: hidden;\n      }\n\n      :host([long]) {\n        font-size: 80%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-user-badge\": StateBadge;\n  }\n}\n","import {\n  LitElement,\n  html,\n  CSSResult,\n  css,\n  PropertyValues,\n  property,\n} from \"lit-element\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport \"./ha-icon\";\n\nimport \"../components/user/ha-user-badge\";\nimport \"../components/ha-menu-button\";\nimport { HomeAssistant, PanelInfo } from \"../types\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { DEFAULT_PANEL } from \"../common/const\";\nimport {\n  getExternalConfig,\n  ExternalConfig,\n} from \"../external_app/external_config\";\nimport {\n  PersistentNotification,\n  subscribeNotifications,\n} from \"../data/persistent_notification\";\nimport computeDomain from \"../common/entity/compute_domain\";\nimport { classMap } from \"lit-html/directives/class-map\";\n\nconst SHOW_AFTER_SPACER = [\"config\", \"developer-tools\"];\n\nconst computeUrl = (urlPath) => `/${urlPath}`;\n\nconst SUPPORT_SCROLL_IF_NEEDED = \"scrollIntoViewIfNeeded\" in document.body;\n\nconst SORT_VALUE = {\n  map: 1,\n  logbook: 2,\n  history: 3,\n  \"developer-tools\": 9,\n  configuration: 10,\n};\n\nconst panelSorter = (a, b) => {\n  const aBuiltIn = a.component_name in SORT_VALUE;\n  const bBuiltIn = b.component_name in SORT_VALUE;\n\n  if (aBuiltIn && bBuiltIn) {\n    return SORT_VALUE[a.component_name] - SORT_VALUE[b.component_name];\n  }\n  if (aBuiltIn) {\n    return -1;\n  }\n  if (bBuiltIn) {\n    return 1;\n  }\n  // both not built in, sort by title\n  if (a.title! < b.title!) {\n    return -1;\n  }\n  if (a.title! > b.title!) {\n    return 1;\n  }\n  return 0;\n};\n\nconst computePanels = (hass: HomeAssistant): [PanelInfo[], PanelInfo[]] => {\n  const panels = hass.panels;\n  if (!panels) {\n    return [[], []];\n  }\n\n  const beforeSpacer: PanelInfo[] = [];\n  const afterSpacer: PanelInfo[] = [];\n\n  Object.values(panels).forEach((panel) => {\n    if (!panel.title) {\n      return;\n    }\n    (SHOW_AFTER_SPACER.includes(panel.component_name)\n      ? afterSpacer\n      : beforeSpacer\n    ).push(panel);\n  });\n\n  beforeSpacer.sort(panelSorter);\n  afterSpacer.sort(panelSorter);\n\n  return [beforeSpacer, afterSpacer];\n};\n\nconst renderPanel = (hass, panel) => html`\n  <a\n    aria-role=\"option\"\n    href=\"${computeUrl(panel.url_path)}\"\n    data-panel=\"${panel.url_path}\"\n    tabindex=\"-1\"\n  >\n    <paper-icon-item>\n      <ha-icon slot=\"item-icon\" .icon=\"${panel.icon}\"></ha-icon>\n      <span class=\"item-text\">\n        ${hass.localize(`panel.${panel.title}`) || panel.title}\n      </span>\n    </paper-icon-item>\n  </a>\n`;\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaSidebar extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public narrow!: boolean;\n\n  @property({ type: Boolean }) public alwaysExpand = false;\n  @property({ type: Boolean, reflect: true }) public expanded = false;\n  @property({ type: Boolean, reflect: true }) public expandedWidth = false;\n  @property() public _defaultPage?: string =\n    localStorage.defaultPage || DEFAULT_PANEL;\n  @property() private _externalConfig?: ExternalConfig;\n  @property() private _notifications?: PersistentNotification[];\n  private _expandTimeout?: number;\n  private _contractTimeout?: number;\n\n  protected render() {\n    const hass = this.hass;\n\n    if (!hass) {\n      return html``;\n    }\n\n    const [beforeSpacer, afterSpacer] = computePanels(hass);\n\n    let notificationCount = this._notifications\n      ? this._notifications.length\n      : 0;\n    for (const entityId in hass.states) {\n      if (computeDomain(entityId) === \"configurator\") {\n        notificationCount++;\n      }\n    }\n\n    return html`\n      <div class=\"menu\">\n        ${!this.narrow\n          ? html`\n              <paper-icon-button\n                aria-label=\"Sidebar Toggle\"\n                .icon=${hass.dockedSidebar ? \"hass:menu-open\" : \"hass:menu\"}\n                @click=${this._toggleSidebar}\n              ></paper-icon-button>\n            `\n          : \"\"}\n        <span class=\"title\">Home Assistant</span>\n      </div>\n      <paper-listbox attr-for-selected=\"data-panel\" .selected=${hass.panelUrl}>\n        <a\n          aria-role=\"option\"\n          href=\"${computeUrl(this._defaultPage)}\"\n          data-panel=${this._defaultPage}\n          tabindex=\"-1\"\n        >\n          <paper-icon-item>\n            <ha-icon slot=\"item-icon\" icon=\"hass:apps\"></ha-icon>\n            <span class=\"item-text\">${hass.localize(\"panel.states\")}</span>\n          </paper-icon-item>\n        </a>\n\n        ${beforeSpacer.map((panel) => renderPanel(hass, panel))}\n        <div class=\"spacer\" disabled></div>\n\n        ${afterSpacer.map((panel) => renderPanel(hass, panel))}\n        ${this._externalConfig && this._externalConfig.hasSettingsScreen\n          ? html`\n              <a\n                aria-role=\"option\"\n                aria-label=\"App Configuration\"\n                href=\"#external-app-configuration\"\n                tabindex=\"-1\"\n                @click=${this._handleExternalAppConfiguration}\n              >\n                <paper-icon-item>\n                  <ha-icon\n                    slot=\"item-icon\"\n                    icon=\"hass:cellphone-settings-variant\"\n                  ></ha-icon>\n                  <span class=\"item-text\">\n                    ${hass.localize(\"ui.sidebar.external_app_configuration\")}\n                  </span>\n                </paper-icon-item>\n              </a>\n            `\n          : \"\"}\n      </paper-listbox>\n\n      <div class=\"divider\"></div>\n\n      <paper-icon-item\n        class=\"notifications\"\n        aria-role=\"option\"\n        @click=${this._handleShowNotificationDrawer}\n      >\n        <ha-icon slot=\"item-icon\" icon=\"hass:bell\"></ha-icon>\n        ${notificationCount > 0\n          ? html`\n              <span class=\"notification-badge\" slot=\"item-icon\">\n                ${notificationCount}\n              </span>\n            `\n          : \"\"}\n        <span class=\"item-text\">\n          ${hass.localize(\"ui.notification_drawer.title\")}\n        </span>\n      </paper-icon-item>\n\n      <a\n        class=${classMap({\n          profile: true,\n          // Mimick behavior that paper-listbox provides\n          \"iron-selected\": hass.panelUrl === \"profile\",\n        })}\n        href=\"/profile\"\n        data-panel=\"panel\"\n        tabindex=\"-1\"\n        aria-role=\"option\"\n        aria-label=${hass.localize(\"panel.profile\")}\n      >\n        <paper-icon-item>\n          <ha-user-badge slot=\"item-icon\" .user=${hass.user}></ha-user-badge>\n\n          <span class=\"item-text\">\n            ${hass.user ? hass.user.name : \"\"}\n          </span>\n        </paper-icon-item>\n      </a>\n      <div disabled class=\"bottom-spacer\"></div>\n    `;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (\n      changedProps.has(\"expanded\") ||\n      changedProps.has(\"expandedWidth\") ||\n      changedProps.has(\"narrow\") ||\n      changedProps.has(\"alwaysExpand\") ||\n      changedProps.has(\"_externalConfig\") ||\n      changedProps.has(\"_notifications\")\n    ) {\n      return true;\n    }\n    if (!this.hass || !changedProps.has(\"hass\")) {\n      return false;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant;\n    if (!oldHass) {\n      return true;\n    }\n    const hass = this.hass;\n    return (\n      hass.panels !== oldHass.panels ||\n      hass.panelUrl !== oldHass.panelUrl ||\n      hass.user !== oldHass.user ||\n      hass.localize !== oldHass.localize ||\n      hass.states !== oldHass.states\n    );\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n\n    if (this.hass && this.hass.auth.external) {\n      getExternalConfig(this.hass.auth.external).then((conf) => {\n        this._externalConfig = conf;\n      });\n    }\n    // On tablets, there is no hover. So we receive click and mouseenter at the\n    // same time. In that case, we're going to cancel expanding, because it is\n    // going to require another tap outside the sidebar to trigger mouseleave\n    this.addEventListener(\"click\", () => {\n      if (this._expandTimeout) {\n        clearTimeout(this._expandTimeout);\n        this._expandTimeout = undefined;\n      }\n    });\n    this.addEventListener(\"mouseenter\", () => {\n      this._expand();\n    });\n    this.addEventListener(\"mouseleave\", () => {\n      this._contract();\n    });\n    subscribeNotifications(this.hass.connection, (notifications) => {\n      this._notifications = notifications;\n    });\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n    if (changedProps.has(\"alwaysExpand\") && this.alwaysExpand) {\n      this.expanded = true;\n      this.expandedWidth = true;\n    }\n    if (!SUPPORT_SCROLL_IF_NEEDED || !changedProps.has(\"hass\")) {\n      return;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    if (!oldHass || oldHass.panelUrl !== this.hass.panelUrl) {\n      const selectedEl = this.shadowRoot!.querySelector(\".iron-selected\");\n      if (selectedEl) {\n        // @ts-ignore\n        selectedEl.scrollIntoViewIfNeeded();\n      }\n    }\n  }\n\n  private _expand() {\n    // We debounce it one frame, because on tablets, the mouse-enter and\n    // click event fire at the same time.\n    this._expandTimeout = window.setTimeout(() => {\n      this.expanded = true;\n      this.expandedWidth = true;\n    }, 0);\n    if (this._contractTimeout) {\n      clearTimeout(this._contractTimeout);\n      this._contractTimeout = undefined;\n    }\n  }\n\n  private _contract() {\n    if (this._expandTimeout) {\n      clearTimeout(this._expandTimeout);\n      this._expandTimeout = undefined;\n    }\n    if (this.alwaysExpand) {\n      return;\n    }\n    this.expandedWidth = false;\n    this._contractTimeout = window.setTimeout(() => {\n      this.expanded = this.alwaysExpand || false;\n    }, 400);\n  }\n\n  private _handleShowNotificationDrawer() {\n    fireEvent(this, \"hass-show-notifications\");\n  }\n\n  private _handleExternalAppConfiguration(ev: Event) {\n    ev.preventDefault();\n    this.hass.auth.external!.fireMessage({\n      type: \"config_screen/show\",\n    });\n  }\n\n  private _toggleSidebar() {\n    fireEvent(this, \"hass-toggle-menu\");\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        height: 100%;\n        display: block;\n        overflow: hidden;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        border-right: 1px solid var(--divider-color);\n        background-color: var(\n          --sidebar-background-color,\n          var(--primary-background-color)\n        );\n        width: 64px;\n        transition: width 0.2s ease-in;\n        will-change: width;\n        contain: strict;\n        transition-delay: 0.2s;\n      }\n      :host([expandedwidth]) {\n        width: 256px;\n      }\n\n      .menu {\n        box-sizing: border-box;\n        height: 65px;\n        display: flex;\n        padding: 0 12px;\n        border-bottom: 1px solid transparent;\n        white-space: nowrap;\n        font-weight: 400;\n        color: var(--primary-text-color);\n        border-bottom: 1px solid var(--divider-color);\n        background-color: var(--primary-background-color);\n        font-size: 20px;\n        align-items: center;\n      }\n      :host([expanded]) .menu {\n        width: 256px;\n      }\n\n      .menu paper-icon-button {\n        color: var(--sidebar-icon-color);\n      }\n      :host([expanded]) .menu paper-icon-button {\n        margin-right: 23px;\n      }\n\n      .title {\n        display: none;\n      }\n      :host([expanded]) .title {\n        display: initial;\n      }\n\n      paper-listbox::-webkit-scrollbar {\n        width: 0.4rem;\n        height: 0.4rem;\n      }\n\n      paper-listbox::-webkit-scrollbar-thumb {\n        -webkit-border-radius: 4px;\n        border-radius: 4px;\n        background: var(--scrollbar-thumb-color);\n      }\n\n      paper-listbox {\n        padding: 4px 0;\n        display: flex;\n        flex-direction: column;\n        box-sizing: border-box;\n        height: calc(100% - 196px);\n        overflow-y: auto;\n        overflow-x: hidden;\n        scrollbar-color: var(--scrollbar-thumb-color) transparent;\n        scrollbar-width: thin;\n      }\n\n      a {\n        color: var(--sidebar-text-color);\n        font-weight: 500;\n        font-size: 14px;\n        text-decoration: none;\n      }\n\n      paper-icon-item {\n        box-sizing: border-box;\n        margin: 4px 8px;\n        padding-left: 12px;\n        border-radius: 4px;\n        --paper-item-min-height: 40px;\n        width: 48px;\n      }\n      :host([expanded]) paper-icon-item {\n        width: 240px;\n      }\n\n      ha-icon[slot=\"item-icon\"] {\n        color: var(--sidebar-icon-color);\n      }\n\n      .iron-selected paper-icon-item:before {\n        border-radius: 4px;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        pointer-events: none;\n        content: \"\";\n        background-color: var(--sidebar-selected-icon-color);\n        opacity: 0.12;\n        transition: opacity 15ms linear;\n        will-change: opacity;\n      }\n\n      .iron-selected paper-icon-item[pressed]:before {\n        opacity: 0.37;\n      }\n\n      paper-icon-item span {\n        color: var(--sidebar-text-color);\n        font-weight: 500;\n        font-size: 14px;\n      }\n\n      a.iron-selected paper-icon-item ha-icon {\n        color: var(--sidebar-selected-icon-color);\n      }\n\n      a.iron-selected .item-text {\n        color: var(--sidebar-selected-text-color);\n      }\n\n      paper-icon-item .item-text {\n        display: none;\n      }\n      :host([expanded]) paper-icon-item .item-text {\n        display: block;\n      }\n\n      .divider {\n        bottom: 112px;\n        padding: 10px 0;\n      }\n      .divider::before {\n        content: \" \";\n        display: block;\n        height: 1px;\n        background-color: var(--divider-color);\n      }\n\n      .notifications {\n        cursor: pointer;\n      }\n      .profile {\n      }\n      .profile paper-icon-item {\n        padding-left: 4px;\n      }\n      .profile .item-text {\n        margin-left: 8px;\n      }\n\n      .notification-badge {\n        position: absolute;\n        font-weight: 400;\n        bottom: 14px;\n        left: 26px;\n        border-radius: 50%;\n        background-color: var(--primary-color);\n        height: 20px;\n        line-height: 20px;\n        text-align: center;\n        padding: 0px 6px;\n        font-size: 0.65em;\n        color: var(--text-primary-color);\n      }\n\n      .spacer {\n        flex: 1;\n        pointer-events: none;\n      }\n\n      .subheader {\n        color: var(--sidebar-text-color);\n        font-weight: 500;\n        font-size: 14px;\n        padding: 16px;\n        white-space: nowrap;\n      }\n\n      .dev-tools {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        padding: 0 8px;\n        width: 256px;\n        box-sizing: border-box;\n      }\n\n      .dev-tools a {\n        color: var(--sidebar-icon-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-sidebar\": HaSidebar;\n  }\n}\n\ncustomElements.define(\"ha-sidebar\", HaSidebar);\n","import { ExternalMessaging } from \"./external_messaging\";\n\nexport interface ExternalConfig {\n  hasSettingsScreen: boolean;\n}\n\nexport const getExternalConfig = (\n  bus: ExternalMessaging\n): Promise<ExternalConfig> => {\n  if (!bus.cache.cfg) {\n    bus.cache.cfg = bus.sendMessage<ExternalConfig>({\n      type: \"config/get\",\n    });\n  }\n  return bus.cache.cfg;\n};\n"],"sourceRoot":""}