# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMorphologicalWatershedFromMarkersImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMorphologicalWatershedFromMarkersImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkMorphologicalWatershedFromMarkersImageFilterPython
            return _itkMorphologicalWatershedFromMarkersImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMorphologicalWatershedFromMarkersImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMorphologicalWatershedFromMarkersImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMorphologicalWatershedFromMarkersImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImageToImageFilterAPython
import itkImagePython
import stdcomplexPython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.New()


def itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.New()


def itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.New()


def itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.New()


def itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.New()


def itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.New()


def itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.New()


def itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.New()


def itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.New()


def itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.New()


def itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.New()


def itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.New()


def itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.New()


def itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.New()


def itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.New()


def itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.New()


def itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.New()


def itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_New():
  return itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.New()


def itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_New():
  return itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.New()


def itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_New():
  return itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.New()


def itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_New():
  return itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.New()


def itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_New():
  return itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.New()


def itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_New():
  return itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.New()


def itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_New():
  return itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.New()

class itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2 self) -> itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2 self, itkImageSS2 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2 self) -> itkImageSS2

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2 self, itkImageF2 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2 self, itkImageSS2 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2)

def itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2ISS2_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2 self) -> itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2 self, itkImageUC2 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2 self) -> itkImageUC2

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2 self, itkImageF2 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2 self, itkImageUC2 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2)

def itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUC2_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2 self) -> itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2 self, itkImageUS2 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2 self) -> itkImageUS2

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2 self, itkImageF2 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2 self, itkImageUS2 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2)

def itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF2IUS2_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3 self) -> itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3 self, itkImageSS3 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3 self) -> itkImageSS3

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3 self, itkImageF3 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3 self, itkImageSS3 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3)

def itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3ISS3_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3 self) -> itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3 self, itkImageUC3 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3 self) -> itkImageUC3

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3 self, itkImageF3 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3 self, itkImageUC3 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3)

def itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUC3_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3 self) -> itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3 self, itkImageUS3 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3 self) -> itkImageUS3

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3 self, itkImageF3 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3 self, itkImageUS3 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3)

def itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIF3IUS3_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2 self) -> itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2 self, itkImageSS2 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2 self) -> itkImageSS2

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2 self, itkImageSS2 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2 self, itkImageSS2 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_swigregister
itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_swigregister(itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2)

def itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2ISS2_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2 self) -> itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2 self, itkImageUC2 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2 self) -> itkImageUC2

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2 self, itkImageSS2 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2 self, itkImageUC2 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_swigregister
itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_swigregister(itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2)

def itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUC2_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2 self) -> itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2 self, itkImageUS2 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2 self) -> itkImageUS2

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2 self, itkImageSS2 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2 self, itkImageUS2 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_swigregister
itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_swigregister(itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2)

def itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS2IUS2_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3 self) -> itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3 self, itkImageSS3 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3 self) -> itkImageSS3

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3 self, itkImageSS3 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3 self, itkImageSS3 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_swigregister
itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_swigregister(itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3)

def itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3ISS3_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3 self) -> itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3 self, itkImageUC3 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3 self) -> itkImageUC3

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3 self, itkImageSS3 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3 self, itkImageUC3 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_swigregister
itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_swigregister(itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3)

def itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUC3_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3 self) -> itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3 self, itkImageUS3 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3 self) -> itkImageUS3

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3 self, itkImageSS3 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3 self, itkImageUS3 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_swigregister
itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_swigregister(itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3)

def itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterISS3IUS3_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2 self) -> itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2 self, itkImageSS2 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2 self) -> itkImageSS2

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2 self, itkImageUC2 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2 self, itkImageSS2 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2)

def itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2ISS2_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2 self) -> itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2 self, itkImageUC2 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2 self) -> itkImageUC2

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2 self, itkImageUC2 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2 self, itkImageUC2 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2)

def itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUC2_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2 self) -> itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2 self, itkImageUS2 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2 self) -> itkImageUS2

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2 self, itkImageUC2 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2 self, itkImageUS2 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2)

def itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC2IUS2_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3 self) -> itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3 self, itkImageSS3 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3 self) -> itkImageSS3

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3 self, itkImageUC3 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3 self, itkImageSS3 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3)

def itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3ISS3_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3 self) -> itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3 self, itkImageUC3 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3 self) -> itkImageUC3

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3 self, itkImageUC3 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3 self, itkImageUC3 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3)

def itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUC3_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3 self) -> itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3 self, itkImageUS3 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3 self) -> itkImageUS3

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3 self, itkImageUC3 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3 self, itkImageUS3 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3)

def itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUC3IUS3_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2 self) -> itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2 self, itkImageSS2 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2 self) -> itkImageSS2

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2 self, itkImageUS2 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2 self, itkImageSS2 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2)

def itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2ISS2_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2 self) -> itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2 self, itkImageUC2 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2 self) -> itkImageUC2

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2 self, itkImageUS2 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2 self, itkImageUC2 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2)

def itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUC2_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2 self) -> itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2 self, itkImageUS2 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2 self) -> itkImageUS2

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2 self, itkImageUS2 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2 self, itkImageUS2 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2)
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2)

def itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS2IUS2_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3 self) -> itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3 self, itkImageSS3 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3 self) -> itkImageSS3

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3 self, itkImageUS3 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3 self, itkImageSS3 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3)

def itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3ISS3_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3 self) -> itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3 self, itkImageUC3 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3 self) -> itkImageUC3

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3 self, itkImageUS3 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3 self, itkImageUC3 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3)

def itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUC3_cast(obj)

class itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """


    Morphological watershed transform from markers.

    The watershed transform is a tool for image segmentation that is fast
    and flexible and potentially fairly parameter free. It was originally
    derived from a geophysical model of rain falling on a terrain and a
    variety of more formal definitions have been devised to allow
    development of practical algorithms. If an image is considered as a
    terrain and divided into catchment basins then the hope is that each
    catchment basin would contain an object of interest.

    The output is a label image. A label image, sometimes referred to as a
    watershed produces 2 regions, all pixels belonging to one region would
    have value A, and all belonging to the other might have value B.
    Unassigned pixels, such as watershed lines, might have the background
    value (0 by convention).

    The simplest way of using the watershed is to preprocess the image we
    want to segment so that the boundaries of our objects are bright (e.g
    apply an edge detector) and compute the watershed transform of the
    edge image. Watershed lines will correspond to the boundaries and our
    problem will be solved. This is rarely useful in practice because
    there are always more regional minima than there are objects, either
    due to noise or natural variations in the object surfaces. Therefore,
    while many watershed lines do lie on significant boundaries, there are
    many that don't. Various methods can be used to reduce the number of
    minima in the image, like thresholding the smallest values, filtering
    the minima and/or smoothing the image.

    This filter use another approach to avoid the problem of over
    segmentation: it let the user provide a marker image which mark the
    minima in the input image and give them a label. The minima are
    imposed in the input image by the markers. The labels of the output
    image are the label of the marker image.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   WatershedImageFilter, MorphologicalWatershedImageFilter

    C++ includes: itkMorphologicalWatershedFromMarkersImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3 self) -> itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_Pointer"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_Clone(self)


    def SetMarkerImage(self, input):
        """
        SetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3 self, itkImageUS3 input)

        Set the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_SetMarkerImage(self, input)


    def GetMarkerImage(self):
        """
        GetMarkerImage(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3 self) -> itkImageUS3

        Get the marker image

        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_GetMarkerImage(self)


    def SetInput1(self, input):
        """
        SetInput1(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3 self, itkImageUS3 input)

        Set the input image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_SetInput1(self, input)


    def SetInput2(self, input):
        """
        SetInput2(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3 self, itkImageUS3 input)

        Set the marker image 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_SetInput2(self, input)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg):
        """
        SetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self):
        """GetMarkWatershedLine(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self):
        """MarkWatershedLineOn(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self):
        """MarkWatershedLineOff(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3 self)"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_MarkWatershedLineOff(self)

    __swig_destroy__ = _itkMorphologicalWatershedFromMarkersImageFilterPython.delete_itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3"""
        return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3

        Create a new object of the class itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.Clone = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_Clone, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.SetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_SetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.GetMarkerImage = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_GetMarkerImage, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.SetInput1 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_SetInput1, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.SetInput2 = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_SetInput2, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_SetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_GetFullyConnected, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_FullyConnectedOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_FullyConnectedOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_SetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_GetMarkWatershedLine, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_MarkWatershedLineOn, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_MarkWatershedLineOff, None, itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3)
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_swigregister = _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_swigregister
itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_swigregister(itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3)

def itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3___New_orig__():
    """itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3___New_orig__() -> itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_Pointer"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3___New_orig__()

def itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_cast(obj):
    """itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3"""
    return _itkMorphologicalWatershedFromMarkersImageFilterPython.itkMorphologicalWatershedFromMarkersImageFilterIUS3IUS3_cast(obj)


def morphological_watershed_from_markers_image_filter(*args, **kwargs):
    """Procedural interface for MorphologicalWatershedFromMarkersImageFilter"""
    import itk
    instance = itk.MorphologicalWatershedFromMarkersImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def morphological_watershed_from_markers_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.MorphologicalWatershedFromMarkersImageFilter, itkTemplate.itkTemplate):
        morphological_watershed_from_markers_image_filter.__doc__ = itk.MorphologicalWatershedFromMarkersImageFilter.values()[0].__doc__
    else:
        morphological_watershed_from_markers_image_filter.__doc__ = itk.MorphologicalWatershedFromMarkersImageFilter.__doc__




