# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import vtk
import ctypes
import os
if os.name != 'nt':
    _vtk_major_version = str(vtk.vtkVersion.GetVTKMajorVersion())
    _vtk_minor_version = str(vtk.vtkVersion.GetVTKMinorVersion())
    _vtkIOlib = 'libvtkIO-' + _vtk_major_version + '.' + _vtk_minor_version + '.so.1'
    ctypes.CDLL(_vtkIOlib, ctypes.RTLD_GLOBAL)
    _vtkInteractionlib = 'libvtkInteraction-' + _vtk_major_version + '.' + _vtk_minor_version + '.so.1'
    ctypes.CDLL(_vtkInteractionlib, ctypes.RTLD_GLOBAL)
    _vtkOpenGLlib = 'libvtkOpenGL-' + _vtk_major_version + '.' + _vtk_minor_version + '.so.1'
    ctypes.CDLL(_vtkOpenGLlib, ctypes.RTLD_GLOBAL)
    import sys
    _vtkWrappinglib = 'libvtkWrappingPython' + str(sys.version_info[0]) + str(sys.version_info[1]) + 'Core-' + _vtk_major_version + '.'  + _vtk_minor_version + '.so.1'
    ctypes.CDLL(_vtkWrappinglib, ctypes.RTLD_GLOBAL)





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _ITKVtkGluePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ITKVtkGluePython', [dirname(__file__)])
        except ImportError:
            import _ITKVtkGluePython
            return _ITKVtkGluePython
        if fp is not None:
            try:
                _mod = imp.load_module('_ITKVtkGluePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ITKVtkGluePython = swig_import_helper()
    del swig_import_helper
else:
    import _ITKVtkGluePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



import ITKPyBasePython
import ITKSpatialObjectsPython
import ITKCommonPython



from itkBoxSpatialObjectToVTKPolyDataFilterPython import *
from itkImageToVTKImageFilterPython import *
from itkSpatialObjectToVTKPolyDataFilterPython import *
from itkVTKImageExportPython import *
from itkVTKImageImportPython import *
from itkVTKImageToImageFilterPython import *
from itkViewImagePython import *




