# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import oclip_pb2 as oclip__pb2


class OpenInterfaceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.invoke = channel.unary_unary(
        '/oclip.OpenInterface/invoke',
        request_serializer=oclip__pb2.Input.SerializeToString,
        response_deserializer=oclip__pb2.Output.FromString,
        )
    self.remoteCli = channel.unary_unary(
        '/oclip.OpenInterface/remoteCli',
        request_serializer=oclip__pb2.Args.SerializeToString,
        response_deserializer=oclip__pb2.Result.FromString,
        )


class OpenInterfaceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def invoke(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def remoteCli(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OpenInterfaceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'invoke': grpc.unary_unary_rpc_method_handler(
          servicer.invoke,
          request_deserializer=oclip__pb2.Input.FromString,
          response_serializer=oclip__pb2.Output.SerializeToString,
      ),
      'remoteCli': grpc.unary_unary_rpc_method_handler(
          servicer.remoteCli,
          request_deserializer=oclip__pb2.Args.FromString,
          response_serializer=oclip__pb2.Result.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'oclip.OpenInterface', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
