
class PyPenetrance
------------------

.. class:: PyPenetrance

   This penetrance operator assigns penetrance values by calling a
   user provided function. It accepts a list of loci (parameter
   ``loci``), and a Python function ``func`` which should be defined
   with one or more of parameters ``geno``, ``mut``, ``gen``, ``ind``,
   ``pop``, or names of information fields. When this operator is
   applied to a population, it passes genotypes or mutants (non-zero
   alleles) at specified loci at specified loci, generation number, a
   reference to an individual, a reference to the current population
   (usually used to retrieve population variables) and values at
   specified information fields to respective parameters of this
   function. Genotypes of each individual are passed as a tuple of
   alleles arranged locus by locus (in the order of A1,A2,B1,B2 for
   loci A and B). Mutants are passed as a default dictionary of loci
   index (with respect to all genotype of individuals, not just the
   first ploidy) and alleles. The returned penetrance values will be
   used to determine the affection status of each individual.


   .. method:: PyPenetrance(func, loci=[], ancGens=UNSPECIFIED, begin=0, end=-1, step=1, at=[], reps=ALL_AVAIL, subPops=ALL_AVAIL, infoFields=[])


      Create a Python hybrid penetrance operator that passes genotype
      at specified *loci*, values at specified information fields (if
      requested), and a generation number to a user-defined function
      *func*. Parameter *loci* can be a list of loci indexes, names,
      list of chromosome position pairs, ``ALL_AVAIL``, or a function
      with optional parameter ``pop`` that will be called at each
      ganeeration to determine indexes of loci. The return value will
      be treated as  Individual penetrance.

