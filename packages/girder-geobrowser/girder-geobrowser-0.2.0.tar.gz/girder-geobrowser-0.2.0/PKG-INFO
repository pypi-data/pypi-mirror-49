Metadata-Version: 2.1
Name: girder-geobrowser
Version: 0.2.0
Summary: Map-oriented custom Girder appfor geospatial metadata browsing
Home-page: https://github.com/girder/geo_browser
Maintainer: Kitware, Inc.
Maintainer-email: kitware@kitware.com
License: UNKNOWN
Description: # Girder GeoBrowser
        
        ## Requirements
        * The Girder [Geospatial](https://github.com/OpenGeoscience/girder_geospatial) Plugin
        
        ## Plugin Installation
        ```
        pip install girder-geobrowser
        ```
        
        ## Custom Python Commands
        `setup.py` includes 2 custom commands:
        
        * `build_ui`: This command builds the frontend from the `gui` folder, and places the build into `geobrowser_plugin/external_web_client`.
        * `clean_build`: This command cleans the project of the files generated by the previous command.
        
        **WARNING**
        
        If you run `girder serve` in development mode, the standalone frontend will not be served at `/geobrowser`. This is because it is expected that the frontend will be served on its own (E.g. `yarn run serve`) in order to see the changes being made. If for some reason you need to serve the frontend at `/geobrowser`, you will need to run girder serve in production mode. However be aware that in this case it is serving the pre-built files, and thus no changes will take affect until you rebuild the frontend (E.g. by running `python setup.py build_ui`).
        
        ## Custom Girder CLI Commands
        This plugin adds a Girder CLI command, `extract-geospatial`. This command manually runs the [Geospatial](https://github.com/OpenGeoscience/girder_geospatial) plugin on any Girder paths specified (defaults to '/'). To specify one or more path, use the `-p` argument. For example, to run this command on the collections `collection1` and `collection2`, you would run:
        
        ```
        girder extract-geospatial -p collection/collection1 -p collection/collection2
        ```
        
        ## Standalone Frontend Setup
        
        ### Install Yarn
        ```
        npm install -g yarn
        ```
        
        ### Install Frontend packages
        ```
        cd gui
        yarn install
        ```
        
        ### Compiles and hot-reloads for development
        ```
        yarn run serve
        ```
        
        ### Compiles and minifies for production
        ```
        yarn run build
        ```
        
        ### Run your tests
        ```
        yarn run test
        ```
        
        ### Lints and fixes files
        ```
        yarn run lint
        ```
        
        ### Customize configuration
        See [Configuration Reference](https://cli.vuejs.org/config/).
        
Platform: UNKNOWN
Description-Content-Type: text/markdown
