
class MapSelector
-----------------

.. class:: MapSelector

   This selector assigns individual fitness values using a user-
   specified dictionary. This operator can be applied to populations
   with arbitrary number of homologous chromosomes.


   .. method:: MapSelector(loci, fitness, begin=0, end=-1, step=1, at=[], reps=ALL_AVAIL, subPops=ALL_AVAIL, infoFields=ALL_AVAIL)


      Create a selector that assigns individual fitness values using a
      dictionary *fitness* with genotype at *loci* as keys, and
      fitness as values. Parameter *loci* can be a list of indexes,
      loci names, list of chromosome position pairs, ``ALL_AVAIL``, or
      a function with optional parameter ``pop`` that will be called
      at each ganeeration to determine indexes of loci. For each
      individual (parents if this operator is applied before mating,
      and offspring if this operator is applied during mating),
      genotypes at *loci* are collected one by one (e.g. p0_loc0,
      p1_loc0, p0_loc1, p1_loc1... for a diploid individual, with
      number of alleles varying for sex and mitochondrial DNAs) and
      are looked up in the dictionary. If a genotype cannot be found,
      it will be looked up again without phase information (e.g.
      ``(1,0)`` will match key ``(0,1)``). If the genotype still can
      not be found, a :class:`ValueError` will be raised. This
      operator supports sex chromosomes and haplodiploid populations.
      In these cases, only valid genotypes should be used to generator
      the dictionary keys.

