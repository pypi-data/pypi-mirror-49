{
  "description":"Distribution Filtering GAN",
  "publication":"https://arxiv.org/pdf/1906.04612v1.pdf",
  "discriminator":
  {
    "class": "class:hypergan.discriminators.configurable_discriminator.ConfigurableDiscriminator",
    "initializer": "he_normal",
    "defaults":{
      "activation": "lrelu",
      "initializer": "he_normal",
      "filter": [3,3],
      "stride": [1,1],
      "avg_pool": [2,2]
    },
    "layers":[
      "conv 32 name=d1",
      "conv 64 name=discriminator_4",
      "attention heads=4 lambda=1",
      "conv 128 name=discriminator_7",
      "attention heads=4 lambda=1",
      "conv 256 name=discriminator_10",
      "attention heads=4 lambda=1",
      "conv 512 name=discriminator_13",
      "linear 1 name=discriminator_16 activation=null bias=false initializer=stylegan"
    ]
  },
  "generator": {
    "class": "class:hypergan.discriminators.configurable_discriminator.ConfigurableDiscriminator",
    "defaults": {
      "activation": "relu",
      "initializer": "he_normal",
      "filter": [3,3],
      "stride": [1,1],
      "avg_pool": [1,1]
    },
    "layers": [
      "identity name=oz",
      "slice 0 64",
      "identity name=z",
      "reference name=oz",
      "slice 64 64",
      "linear 512 initializer=stylegan",
      "linear 512 initializer=stylegan name=w",
      "layer z",
      "linear 512 initializer=stylegan",
      "linear 4*4*512 initializer=stylegan",

      "adaptive_instance_norm",
      "subpixel 256",
      "adaptive_instance_norm",
      "subpixel 128",
      "adaptive_instance_norm",
      "subpixel 64",
      "adaptive_instance_norm",
      "subpixel 32",
      "adaptive_instance_norm",
      "subpixel 16",
      "adaptive_instance_norm",
      "subpixel 3 activation=clamped_unit stride=2"
    ]
  },
  "noise_generator": {
    "class": "class:hypergan.discriminators.configurable_discriminator.ConfigurableDiscriminator",
    "defaults": {
      "activation": "relu",
      "initializer": "he_normal",
      "filter": [3,3],
      "stride": [1,1],
      "avg_pool": [1,1]
    },
    "layers": [
      "linear bias=false 128*128*3 activation=null"
    ]
  },
  "latent": {
    "class": "function:hypergan.distributions.uniform_distribution.UniformDistribution",
    "max": 1,
    "min": -1,
    "projections": [
      "function:hypergan.distributions.uniform_distribution.identity"
    ],
    "z": 128
  },
  "loss": {
    "class": "function:hypergan.losses.logistic_loss.LogisticLoss",
    "reduce": "reduce_mean"
  },
  "trainer": {
    "class": "function:hypergan.trainers.batch_fitness_trainer.BatchFitnessTrainer",
    "heuristic": 0,
    "search_steps": 100000,
    "trainer": {
      "class": "function:hypergan.trainers.simultaneous_trainer.SimultaneousTrainer",
      "optimizer": {
        "class": "function:hypergan.optimizers.elastic_weight_consolidation_optimizer.ElasticWeightConsolidationOptimizer",
        "f_decay": 0.85,
        "initial_constraint": 0.1,
        "gradient_scale": 1.0,
        "lam": 20.0,
        "optimizer": {
          "class": "function:hypergan.optimizers.experimental.ema_optimizer.EmaOptimizer",
          "decay": 0.2,

          "optimizer": {
            "class": "function:tensorflow.python.training.adam.AdamOptimizer",
            "learn_rate": 1e-4,
            "beta1":0.0,
            "beta2":0.999
          }
        }
      },
      "hooks":[
        {
          "class": "function:hypergan.train_hooks.experimental.input_fitness_train_hook.InputFitnessTrainHook",
          "heuristic": 0,
          "search_steps": 100000
        },
        {
          "class": "function:hypergan.train_hooks.weight_constraint_train_hook.WeightConstraintTrainHook",
          "weight_constraint": ["l2nn"],
          "iterations": 1,
          "decay": 0.0000001,
          "constraint_every": 1
        },
        {
          "class": "function:hypergan.train_hooks.experimental.zero_penalty_train_hook.ZeroPenaltyTrainHook",
          "lambda": 1e-5,
          "component": "noise_generator"
        }
      ]
    }
  },
  "runtime": {
      "channels": 3,
      "width": 128,
      "height": 128,
      "train": "hypergan train [dataset] --sample_every 100 --sampler debug --format jpg --size 128x128x3 -b 1 -c dfgan --save_every 10000 --resize"
  },
  "fixed_input": true,
  "class": "class:hypergan.gans.noisy_gan.NoisyGAN"
}
