stages:
  - build
  - test
  - release
  - stage
  - review
  - prod


variables:
  DEVO_IMAGE: daddz/devo:0.8.5
  NAMESPACE_TEST: {{ project_name }}-$CI_COMMIT_SHORT_SHA
  NAMESPACE_REVIEW: {{ project_name }}-$CI_COMMIT_REF_SLUG
  NAMESPACE_STAGE: {{ project_name }}-stage
  NAMESPACE_PROD: {{ project_name }}-prod
  BASE_URL: {{ base_url }}


build:
  stage: build
  image: $DEVO_IMAGE
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script:
    - source $DEVO_CREDENTIALS && export $(cut -d= -f1 $DEVO_CREDENTIALS)
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD {{ registry_url }}
    - skaffold build -q > build_test.out
  artifacts:
    paths:
      - build_test.out


test:lint:
  stage: test
  image: $DEVO_IMAGE
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script:
    - source $DEVO_CREDENTIALS && export $(cut -d= -f1 $DEVO_CREDENTIALS)
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD {{ registry_url }}
    - export IMG=$(jq -r .builds[0].tag build_test.out)
    - docker run $IMG /scripts/lint


test:integration:
  stage: test
  image: $DEVO_IMAGE
  before_script:
    - source $DEVO_CREDENTIALS && export $(cut -d= -f1 $DEVO_CREDENTIALS)
    - devo kube init --name $NAMESPACE_TEST --url $KUBE_URL --user $KUBE_USER --token $KUBE_TOKEN
    - devo kube prepare-env $NAMESPACE_TEST --registry-user $CI_REGISTRY_USER --registry-password $CI_REGISTRY_PASSWORD
    - skaffold deploy -a build_test.out --namespace $NAMESPACE_TEST
  script:
    - devo kube test $NAMESPACE_TEST
  after_script:
    - devo kube after-test $NAMESPACE_TEST


release:
  stage: release
  image: $DEVO_IMAGE
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script:
    - source $DEVO_CREDENTIALS && export $(cut -d= -f1 $DEVO_CREDENTIALS)
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD {{ registry_url }}
    - skaffold build -p prod -q > build_prod.out
  artifacts:
    paths:
      - build_prod.out
  only:
    refs:
      - master


deploy:review:
  stage: review
  image: $DEVO_IMAGE
  services:
    - docker:dind
  variables:
      DOCKER_HOST: tcp://docker:2375
      DOCKER_DRIVER: overlay2
  before_script:
    - source $DEVO_CREDENTIALS && export $(cut -d= -f1 $DEVO_CREDENTIALS)
    - devo kube init --name $NAMESPACE_REVIEW --url $KUBE_URL --user $KUBE_USER --token $KUBE_TOKEN
    - devo kube prepare-env $NAMESPACE_REVIEW --registry-user $CI_REGISTRY_USER --registry-password $CI_REGISTRY_PASSWORD
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD {{ registry_url }}
    - skaffold build -p stage -q > build_prod.out
    - (cd k8s/stage; kustomize edit set namespace $NAMESPACE_REVIEW)
    - skaffold deploy -p stage -a build_prod.out --namespace $NAMESPACE_REVIEW
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: http://{{ project_name }}-app-$NAMESPACE_REVIEW.$BASE_URL
    on_stop: stop:review
  only:
    refs:
      - merge_requests


stop:review:
  stage: review
  image: $DEVO_IMAGE
  variables:
    GIT_STRATEGY: none
  before_script:
    - source $DEVO_CREDENTIALS && export $(cut -d= -f1 $DEVO_CREDENTIALS)
    - devo kube init --name $NAMESPACE_REVIEW --url $KUBE_URL --user $KUBE_USER --token $KUBE_TOKEN
  script:
    - devo kube after-test $NAMESPACE_REVIEW
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  when: manual
  only:
    refs:
      - merge_requests


deploy:stage:
  stage: stage
  image: $DEVO_IMAGE
  before_script:
    - source $DEVO_CREDENTIALS && export $(cut -d= -f1 $DEVO_CREDENTIALS)
    - devo kube init --name $NAMESPACE_STAGE --url $KUBE_URL --user $KUBE_USER --token $KUBE_TOKEN
    - devo kube prepare-env $NAMESPACE_STAGE --registry-user $CI_REGISTRY_USER --registry-password $CI_REGISTRY_PASSWORD
  script:
    - skaffold deploy -p stage -a build_prod.out --namespace $NAMESPACE_STAGE
  environment:
    name: $NAMESPACE_STAGE
    url: http://{{ project_name }}-app-$NAMESPACE_STAGE.$BASE_URL
  only:
    refs:
      - master


deploy:prod:
  stage: prod
  image: $DEVO_IMAGE
  before_script:
    - cp $DEVO_K8S_PROD_ENV k8s/prod/prod.env
    - source $DEVO_CREDENTIALS && export $(cut -d= -f1 $DEVO_CREDENTIALS)
    - devo kube init --name $NAMESPACE_PROD --url $KUBE_URL --user $KUBE_USER --token $KUBE_TOKEN
    - devo kube prepare-env $NAMESPACE_PROD --registry-user $CI_REGISTRY_USER --registry-password $CI_REGISTRY_PASSWORD
  script:
    - skaffold deploy -p prod -a build_prod.out --namespace $NAMESPACE_PROD
  environment:
    name: $NAMESPACE_PROD
    url: http://{{ project_name }}-app-$NAMESPACE_PROD.$BASE_URL
  when: manual
  only:
    refs:
      - master
