{"version":3,"sources":["webpack:///./app/views/userFeedback/container.jsx","webpack:///./app/views/userFeedback/utils.jsx","webpack:///./app/views/userFeedback/organizationUserFeedback.jsx"],"names":["UserFeedbackContainer","_this$props","this","props","_this$props$location","location","pathname","query","pageLinks","children","status","unresolvedQuery","lodash_omit__WEBPACK_IMPORTED_MODULE_6___default","allIssuesQuery","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","style","marginBottom","app_components_pageHeading__WEBPACK_IMPORTED_MODULE_13__","withMargins","t","textAlign","marginTop","react_router__WEBPACK_IMPORTED_MODULE_8__","to","app_components_panels__WEBPACK_IMPORTED_MODULE_12__","app_components_pagination__WEBPACK_IMPORTED_MODULE_11__","React","Component","propTypes","PropTypes","object","isRequired","string","DEFAULT_STATUS","getQuery","search","qs","parse","objectSpread_default","pick_default","concat","toConsumableArray_default","Object","values","URL_PARAM","OrganizationUserFeedback","organization","slug","orgId","params","state","reportList","map","item","issue","react_default","compactIssue","key","id","data","eventId","event","eventID","userFeedback","report","issueId","length","renderEmpty","renderResults","emptyStateWarning","styles_organization","components_alert","type","renderBody","_this$state","loading","loadingIndicator","reportListPageLinks","feature","features","renderDisabled","renderNoAccess","globalSelectionHeader","noProjectMessage","container","renderStreamBody","AsyncView","SentryTypes","Organization","withOrganization"],"mappings":"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","file":"OrganizationUserFeedback.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router';\nimport PropTypes from 'prop-types';\nimport {omit} from 'lodash';\nimport {t} from 'app/locale';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody} from 'app/components/panels';\nimport PageHeading from 'app/components/pageHeading';\n\nexport default class UserFeedbackContainer extends React.Component {\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n    pageLinks: PropTypes.string,\n    status: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const {location: {pathname, query}, pageLinks, children, status} = this.props;\n\n    const unresolvedQuery = omit(query, 'status');\n    const allIssuesQuery = {...query, status: ''};\n\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-sm-9\" style={{marginBottom: '5px'}}>\n            <PageHeading withMargins>{t('User Feedback')}</PageHeading>\n          </div>\n          <div className=\"col-sm-3\" style={{textAlign: 'right', marginTop: '4px'}}>\n            <div className=\"btn-group\">\n              <Link\n                to={{pathname, query: unresolvedQuery}}\n                className={\n                  'btn btn-sm btn-default' + (status === 'unresolved' ? ' active' : '')\n                }\n              >\n                {t('Unresolved')}\n              </Link>\n              <Link\n                to={{pathname, query: allIssuesQuery}}\n                className={'btn btn-sm btn-default' + (status === '' ? ' active' : '')}\n              >\n                {t('All Issues')}\n              </Link>\n            </div>\n          </div>\n        </div>\n        <Panel>\n          <PanelBody className=\"issue-list\">{children}</PanelBody>\n        </Panel>\n        <Pagination pageLinks={pageLinks} />\n      </div>\n    );\n  }\n}\n","import {pick} from 'lodash';\nimport qs from 'query-string';\n\nimport {URL_PARAM} from 'app/components/organizations/globalSelectionHeader/constants';\n\nconst DEFAULT_STATUS = 'unresolved';\n\n/**\n * Get query for API given the current location.search string\n *\n * @param {String} search\n * @returns {Object}\n */\nexport function getQuery(search) {\n  const query = qs.parse(search);\n\n  const status = typeof query.status !== 'undefined' ? query.status : DEFAULT_STATUS;\n\n  const queryParams = {\n    status,\n    ...pick(query, ['cursor', ...Object.values(URL_PARAM)]),\n  };\n\n  return queryParams;\n}\n","import React from 'react';\n\nimport {t} from 'app/locale';\nimport withOrganization from 'app/utils/withOrganization';\nimport SentryTypes from 'app/sentryTypes';\nimport Feature from 'app/components/acl/feature';\nimport Alert from 'app/components/alert';\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport CompactIssue from 'app/components/compactIssue';\nimport EventUserFeedback from 'app/components/events/userFeedback';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';\nimport NoProjectMessage from 'app/components/noProjectMessage';\nimport AsyncView from 'app/views/asyncView';\nimport {PageContent} from 'app/styles/organization';\n\nimport UserFeedbackContainer from './container';\nimport {getQuery} from './utils';\n\nclass OrganizationUserFeedback extends AsyncView {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n  };\n\n  getEndpoints() {\n    const {organization, location: {search}} = this.props;\n\n    return [\n      [\n        'reportList',\n        `/organizations/${organization.slug}/user-feedback/`,\n        {\n          query: getQuery(search),\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return `${t('User Feedback')} - ${this.props.organization.slug}`;\n  }\n\n  renderResults() {\n    const {orgId} = this.props.params;\n\n    return this.state.reportList.map(item => {\n      const issue = item.issue;\n      return (\n        <CompactIssue\n          key={item.id}\n          id={issue.id}\n          data={issue}\n          eventId={item.event.eventID}\n        >\n          <EventUserFeedback report={item} orgId={orgId} issueId={issue.id} />\n        </CompactIssue>\n      );\n    });\n  }\n\n  renderList() {\n    if (this.state.reportList.length === 0) {\n      return this.renderEmpty();\n    }\n\n    return this.renderResults();\n  }\n\n  renderEmpty() {\n    return (\n      <EmptyStateWarning>\n        <p>{t('Sorry, no results match your search query.')}</p>\n      </EmptyStateWarning>\n    );\n  }\n\n  renderNoAccess() {\n    return (\n      <PageContent>\n        <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n      </PageContent>\n    );\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderStreamBody() {\n    const {loading, reportList} = this.state;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (!reportList.length) {\n      return this.renderEmpty();\n    }\n\n    return this.renderResults();\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const {location} = this.props;\n    const {status} = getQuery(location.search);\n    const {reportListPageLinks} = this.state;\n\n    return (\n      <Feature\n        features={['organizations:sentry10']}\n        organization={organization}\n        renderDisabled={this.renderNoAccess}\n      >\n        <GlobalSelectionHeader organization={organization} />\n        <PageContent>\n          <NoProjectMessage organization={organization}>\n            <UserFeedbackContainer\n              pageLinks={reportListPageLinks}\n              status={status}\n              location={location}\n            >\n              {this.renderStreamBody()}\n            </UserFeedbackContainer>\n          </NoProjectMessage>\n        </PageContent>\n      </Feature>\n    );\n  }\n}\n\nexport {OrganizationUserFeedback};\nexport default withOrganization(OrganizationUserFeedback);\n"],"sourceRoot":""}