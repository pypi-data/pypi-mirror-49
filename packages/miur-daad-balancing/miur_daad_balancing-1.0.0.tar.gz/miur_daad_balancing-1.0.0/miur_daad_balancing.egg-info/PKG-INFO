Metadata-Version: 2.1
Name: miur-daad-balancing
Version: 1.0.0
Summary: Testing dataset balancing techniques from previous works.
Home-page: https://github.com/LucaCappelletti94/miur_daad_balancing
Author: Luca Cappelletti
Author-email: cappelletti.luca94@gmail.com
License: MIT
Description: miur_daad_balancing
        =========================================================================================
        |travis| |sonar_quality| |sonar_maintainability| |codacy| |code_climate_maintainability| |pip|
        
        Testing dataset balancing techniques from previous works.
        
        How do I install this package?
        ----------------------------------------------
        As usual, just download it using pip:
        
        .. code:: shell
        
            pip install miur_daad_balancing
        
        Tests Coverage
        ----------------------------------------------
        Since some software handling coverages sometime get slightly different results, here's three of them:
        
        |coveralls| |sonar_coverage| |code_climate_coverage|
        
        Usage
        ----------------------------------------------
        Three balancing methods are available for the MIUR-DAAD project:
        
        Umbalanced
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        This method just leaves the data as-is, and is used more as callback usefull to uniform the pipeline:
        
        .. code:: python
        
            from miur_daad_balancing import umbalanced
            
            training, testing = generate_my_data(...)
            balanced_training, balanced_testing = umbalanced(training, testing)
        
        Balanced
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Applies a maximum threshold to every class in the training set as specified in the default package settings (3000):
        
        .. code:: python
        
            from miur_daad_balancing import balanced
            
            training, testing = generate_my_data(...)
            balanced_training, balanced_testing = balanced(training, testing)
        
        Full Balanced
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Applies a maximum threshold to every class in the training set and balances to some default proportions the testing set:
        
        .. code:: python
        
            from miur_daad_balancing import full_balanced
            
            training, testing = generate_my_data(...)
            balanced_training, balanced_testing = full_balanced(training, testing)
        
        
        .. |travis| image:: https://travis-ci.org/LucaCappelletti94/miur_daad_balancing.png
           :target: https://travis-ci.org/LucaCappelletti94/miur_daad_balancing
           :alt: Travis CI build
        
        .. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_miur_daad_balancing&metric=alert_status
            :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_miur_daad_balancing
            :alt: SonarCloud Quality
        
        .. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_miur_daad_balancing&metric=sqale_rating
            :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_miur_daad_balancing
            :alt: SonarCloud Maintainability
        
        .. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_miur_daad_balancing&metric=coverage
            :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_miur_daad_balancing
            :alt: SonarCloud Coverage
        
        .. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/miur_daad_balancing/badge.svg?branch=master
            :target: https://coveralls.io/github/LucaCappelletti94/miur_daad_balancing?branch=master
            :alt: Coveralls Coverage
        
        .. |pip| image:: https://badge.fury.io/py/miur_daad_balancing.svg
            :target: https://badge.fury.io/py/miur_daad_balancing
            :alt: Pypi project
        
        .. |codacy|  image:: https://api.codacy.com/project/badge/Grade/b4a7c72f058b433597426fa696d71539
            :target: https://www.codacy.com/app/LucaCappelletti94/miur_daad_balancing?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/miur_daad_balancing&amp;utm_campaign=Badge_Grade
            :alt: Codacy Maintainability
        
        .. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/2ca44bd945309b74bc33/maintainability
            :target: https://codeclimate.com/github/LucaCappelletti94/miur_daad_balancing/maintainability
            :alt: Maintainability
        
        .. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/2ca44bd945309b74bc33/test_coverage
            :target: https://codeclimate.com/github/LucaCappelletti94/miur_daad_balancing/test_coverage
            :alt: Code Climate Coverate
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Provides-Extra: test
