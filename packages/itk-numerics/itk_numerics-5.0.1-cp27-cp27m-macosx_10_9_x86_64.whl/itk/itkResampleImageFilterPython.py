# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkResampleImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkResampleImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkResampleImageFilterPython
            return _itkResampleImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkResampleImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkResampleImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkResampleImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkInterpolateImageFunctionPython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import pyBasePython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkImageFunctionBasePython
import ITKCommonBasePython
import itkFunctionBasePython
import itkPointPython
import itkRGBAPixelPython
import itkArrayPython
import itkContinuousIndexPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkImagePython
import itkImageRegionPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkSymmetricSecondRankTensorPython
import itkTransformBasePython
import itkDiffusionTensor3DPython
import itkOptimizerParametersPython
import itkArray2DPython
import itkVariableLengthVectorPython
import itkExtrapolateImageFunctionPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkImageToImageFilterCommonPython

def itkResampleImageFilterVIF3VIF3_New():
  return itkResampleImageFilterVIF3VIF3.New()


def itkResampleImageFilterVIUS3VIUS3_New():
  return itkResampleImageFilterVIUS3VIUS3.New()


def itkResampleImageFilterVISS3VISS3_New():
  return itkResampleImageFilterVISS3VISS3.New()


def itkResampleImageFilterVIUC3VIUC3_New():
  return itkResampleImageFilterVIUC3VIUC3.New()


def itkResampleImageFilterVIF2VIF2_New():
  return itkResampleImageFilterVIF2VIF2.New()


def itkResampleImageFilterVIUS2VIUS2_New():
  return itkResampleImageFilterVIUS2VIUS2.New()


def itkResampleImageFilterVISS2VISS2_New():
  return itkResampleImageFilterVISS2VISS2.New()


def itkResampleImageFilterVIUC2VIUC2_New():
  return itkResampleImageFilterVIUC2VIUC2.New()


def itkResampleImageFilterIRGBAUC3IRGBAUC3_New():
  return itkResampleImageFilterIRGBAUC3IRGBAUC3.New()


def itkResampleImageFilterIRGBAUC2IRGBAUC2_New():
  return itkResampleImageFilterIRGBAUC2IRGBAUC2.New()


def itkResampleImageFilterIRGBUC3IRGBUC3_New():
  return itkResampleImageFilterIRGBUC3IRGBUC3.New()


def itkResampleImageFilterIRGBUC2IRGBUC2_New():
  return itkResampleImageFilterIRGBUC2IRGBUC2.New()


def itkResampleImageFilterIVF43IVF43_New():
  return itkResampleImageFilterIVF43IVF43.New()


def itkResampleImageFilterIVF42IVF42_New():
  return itkResampleImageFilterIVF42IVF42.New()


def itkResampleImageFilterIVF33IVF33_New():
  return itkResampleImageFilterIVF33IVF33.New()


def itkResampleImageFilterIVF32IVF32_New():
  return itkResampleImageFilterIVF32IVF32.New()


def itkResampleImageFilterIVF23IVF23_New():
  return itkResampleImageFilterIVF23IVF23.New()


def itkResampleImageFilterIVF22IVF22_New():
  return itkResampleImageFilterIVF22IVF22.New()


def itkResampleImageFilterIF3IF3_New():
  return itkResampleImageFilterIF3IF3.New()


def itkResampleImageFilterIF2IF2_New():
  return itkResampleImageFilterIF2IF2.New()


def itkResampleImageFilterIUS3IUS3_New():
  return itkResampleImageFilterIUS3IUS3.New()


def itkResampleImageFilterIUS2IUS2_New():
  return itkResampleImageFilterIUS2IUS2.New()


def itkResampleImageFilterIUC3IUC3_New():
  return itkResampleImageFilterIUC3IUC3.New()


def itkResampleImageFilterIUC2IUC2_New():
  return itkResampleImageFilterIUC2IUC2.New()


def itkResampleImageFilterISS3ISS3_New():
  return itkResampleImageFilterISS3ISS3.New()


def itkResampleImageFilterISS2ISS2_New():
  return itkResampleImageFilterISS2ISS2.New()

class itkResampleImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIF2IF2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIF2IF2 self) -> itkResampleImageFilterIF2IF2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIF2IF2 self, itkDataObjectDecoratorTD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIF2IF2 self, itkTransformD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIF2IF2 self) -> itkDataObjectDecoratorTD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIF2IF2 self) -> itkTransformD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIF2IF2 self, itkInterpolateImageFunctionIF2D _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIF2IF2 self) -> itkInterpolateImageFunctionIF2D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIF2IF2 self) -> itkInterpolateImageFunctionIF2D
        GetInterpolator(itkResampleImageFilterIF2IF2 self) -> itkInterpolateImageFunctionIF2D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIF2IF2 self, itkExtrapolateImageFunctionIF2D _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIF2IF2 self) -> itkExtrapolateImageFunctionIF2D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIF2IF2 self) -> itkExtrapolateImageFunctionIF2D
        GetExtrapolator(itkResampleImageFilterIF2IF2 self) -> itkExtrapolateImageFunctionIF2D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIF2IF2 self, itkSize2 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIF2IF2 self) -> itkSize2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIF2IF2 self, float const _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIF2IF2 self) -> float const &"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIF2IF2 self, itkVectorD2 _arg)
        SetOutputSpacing(itkResampleImageFilterIF2IF2 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIF2IF2 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIF2IF2 self, itkPointD2 _arg)
        SetOutputOrigin(itkResampleImageFilterIF2IF2 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIF2IF2 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIF2IF2 self, itkMatrixD22 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIF2IF2 self) -> itkMatrixD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIF2IF2 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIF2IF2 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIF2IF2 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIF2IF2 self, itkImageBase2 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIF2IF2 self) -> itkImageBase2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIF2IF2 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIF2IF2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIF2IF2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIF2IF2 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIF2IF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIF2IF2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIF2IF2

        Create a new object of the class itkResampleImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIF2IF2.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_Clone, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetTransformInput, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetTransform, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetTransformInput, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetTransform, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetInterpolator, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetModifiableInterpolator, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetInterpolator, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetExtrapolator, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetModifiableExtrapolator, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetExtrapolator, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetSize, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetSize, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetDefaultPixelValue, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetDefaultPixelValue, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputSpacing, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetOutputSpacing, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputOrigin, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetOutputOrigin, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputDirection, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetOutputDirection, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputParametersFromImage, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputStartIndex, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetOutputStartIndex, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetReferenceImage, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetReferenceImage, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetUseReferenceImage, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_UseReferenceImageOn, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_UseReferenceImageOff, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetUseReferenceImage, None, itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_swigregister
itkResampleImageFilterIF2IF2_swigregister(itkResampleImageFilterIF2IF2)

def itkResampleImageFilterIF2IF2___New_orig__():
    """itkResampleImageFilterIF2IF2___New_orig__() -> itkResampleImageFilterIF2IF2_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2___New_orig__()

def itkResampleImageFilterIF2IF2_cast(obj):
    """itkResampleImageFilterIF2IF2_cast(itkLightObject obj) -> itkResampleImageFilterIF2IF2"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_cast(obj)

class itkResampleImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIF3IF3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIF3IF3 self) -> itkResampleImageFilterIF3IF3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIF3IF3 self, itkDataObjectDecoratorTD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIF3IF3 self, itkTransformD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIF3IF3 self) -> itkDataObjectDecoratorTD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIF3IF3 self) -> itkTransformD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIF3IF3 self, itkInterpolateImageFunctionIF3D _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIF3IF3 self) -> itkInterpolateImageFunctionIF3D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIF3IF3 self) -> itkInterpolateImageFunctionIF3D
        GetInterpolator(itkResampleImageFilterIF3IF3 self) -> itkInterpolateImageFunctionIF3D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIF3IF3 self, itkExtrapolateImageFunctionIF3D _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIF3IF3 self) -> itkExtrapolateImageFunctionIF3D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIF3IF3 self) -> itkExtrapolateImageFunctionIF3D
        GetExtrapolator(itkResampleImageFilterIF3IF3 self) -> itkExtrapolateImageFunctionIF3D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIF3IF3 self, itkSize3 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIF3IF3 self) -> itkSize3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIF3IF3 self, float const _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIF3IF3 self) -> float const &"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIF3IF3 self, itkVectorD3 _arg)
        SetOutputSpacing(itkResampleImageFilterIF3IF3 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIF3IF3 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIF3IF3 self, itkPointD3 _arg)
        SetOutputOrigin(itkResampleImageFilterIF3IF3 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIF3IF3 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIF3IF3 self, itkMatrixD33 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIF3IF3 self) -> itkMatrixD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIF3IF3 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIF3IF3 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIF3IF3 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIF3IF3 self, itkImageBase3 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIF3IF3 self) -> itkImageBase3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIF3IF3 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIF3IF3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIF3IF3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIF3IF3 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIF3IF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIF3IF3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIF3IF3

        Create a new object of the class itkResampleImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIF3IF3.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_Clone, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetTransformInput, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetTransform, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetTransformInput, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetTransform, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetInterpolator, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetModifiableInterpolator, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetInterpolator, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetExtrapolator, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetModifiableExtrapolator, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetExtrapolator, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetSize, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetSize, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetDefaultPixelValue, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetDefaultPixelValue, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputSpacing, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetOutputSpacing, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputOrigin, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetOutputOrigin, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputDirection, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetOutputDirection, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputParametersFromImage, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputStartIndex, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetOutputStartIndex, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetReferenceImage, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetReferenceImage, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetUseReferenceImage, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_UseReferenceImageOn, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_UseReferenceImageOff, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetUseReferenceImage, None, itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_swigregister
itkResampleImageFilterIF3IF3_swigregister(itkResampleImageFilterIF3IF3)

def itkResampleImageFilterIF3IF3___New_orig__():
    """itkResampleImageFilterIF3IF3___New_orig__() -> itkResampleImageFilterIF3IF3_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3___New_orig__()

def itkResampleImageFilterIF3IF3_cast(obj):
    """itkResampleImageFilterIF3IF3_cast(itkLightObject obj) -> itkResampleImageFilterIF3IF3"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_cast(obj)

class itkResampleImageFilterIRGBAUC2IRGBAUC2(itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIRGBAUC2IRGBAUC2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itkResampleImageFilterIRGBAUC2IRGBAUC2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, itkDataObjectDecoratorTD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, itkTransformD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itkDataObjectDecoratorTD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itkTransformD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, itkInterpolateImageFunctionIRGBAUC2D _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itkInterpolateImageFunctionIRGBAUC2D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itkInterpolateImageFunctionIRGBAUC2D
        GetInterpolator(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itkInterpolateImageFunctionIRGBAUC2D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, itk::ExtrapolateImageFunction< itk::Image< itk::RGBAPixel< unsigned char >,2 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::RGBAPixel< unsigned char >,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::RGBAPixel< unsigned char >,2 >,double > const
        GetExtrapolator(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::RGBAPixel< unsigned char >,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, itkSize2 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itkSize2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, itkRGBAPixelUC _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itkRGBAPixelUC"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, itkVectorD2 _arg)
        SetOutputSpacing(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, itkPointD2 _arg)
        SetOutputOrigin(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, itkMatrixD22 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itkMatrixD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, itkImageBase2 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> itkImageBase2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIRGBAUC2IRGBAUC2 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIRGBAUC2IRGBAUC2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIRGBAUC2IRGBAUC2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIRGBAUC2IRGBAUC2 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIRGBAUC2IRGBAUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIRGBAUC2IRGBAUC2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIRGBAUC2IRGBAUC2

        Create a new object of the class itkResampleImageFilterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIRGBAUC2IRGBAUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIRGBAUC2IRGBAUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIRGBAUC2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIRGBAUC2IRGBAUC2.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_Clone, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetTransformInput, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetTransform, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetTransformInput, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetTransform, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetInterpolator, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetModifiableInterpolator, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetInterpolator, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetExtrapolator, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetModifiableExtrapolator, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetExtrapolator, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetSize, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetSize, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetDefaultPixelValue, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetDefaultPixelValue, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputSpacing, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetOutputSpacing, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputOrigin, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetOutputOrigin, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputDirection, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetOutputDirection, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputParametersFromImage, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputStartIndex, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetOutputStartIndex, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetReferenceImage, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetReferenceImage, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetUseReferenceImage, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_UseReferenceImageOn, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_UseReferenceImageOff, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetUseReferenceImage, None, itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_swigregister
itkResampleImageFilterIRGBAUC2IRGBAUC2_swigregister(itkResampleImageFilterIRGBAUC2IRGBAUC2)

def itkResampleImageFilterIRGBAUC2IRGBAUC2___New_orig__():
    """itkResampleImageFilterIRGBAUC2IRGBAUC2___New_orig__() -> itkResampleImageFilterIRGBAUC2IRGBAUC2_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2___New_orig__()

def itkResampleImageFilterIRGBAUC2IRGBAUC2_cast(obj):
    """itkResampleImageFilterIRGBAUC2IRGBAUC2_cast(itkLightObject obj) -> itkResampleImageFilterIRGBAUC2IRGBAUC2"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_cast(obj)

class itkResampleImageFilterIRGBAUC3IRGBAUC3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIRGBAUC3IRGBAUC3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itkResampleImageFilterIRGBAUC3IRGBAUC3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, itkDataObjectDecoratorTD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, itkTransformD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itkDataObjectDecoratorTD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itkTransformD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, itkInterpolateImageFunctionIRGBAUC3D _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itkInterpolateImageFunctionIRGBAUC3D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itkInterpolateImageFunctionIRGBAUC3D
        GetInterpolator(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itkInterpolateImageFunctionIRGBAUC3D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, itk::ExtrapolateImageFunction< itk::Image< itk::RGBAPixel< unsigned char >,3 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::RGBAPixel< unsigned char >,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::RGBAPixel< unsigned char >,3 >,double > const
        GetExtrapolator(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::RGBAPixel< unsigned char >,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, itkSize3 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itkSize3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, itkRGBAPixelUC _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itkRGBAPixelUC"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, itkVectorD3 _arg)
        SetOutputSpacing(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, itkPointD3 _arg)
        SetOutputOrigin(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, itkMatrixD33 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itkMatrixD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, itkImageBase3 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> itkImageBase3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIRGBAUC3IRGBAUC3 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIRGBAUC3IRGBAUC3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIRGBAUC3IRGBAUC3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIRGBAUC3IRGBAUC3 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIRGBAUC3IRGBAUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIRGBAUC3IRGBAUC3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class itkResampleImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIRGBAUC3IRGBAUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIRGBAUC3IRGBAUC3.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_Clone, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetTransformInput, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetTransform, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetTransformInput, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetTransform, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetInterpolator, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetModifiableInterpolator, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetInterpolator, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetExtrapolator, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetModifiableExtrapolator, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetExtrapolator, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetSize, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetSize, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetDefaultPixelValue, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetDefaultPixelValue, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputSpacing, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetOutputSpacing, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputOrigin, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetOutputOrigin, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputDirection, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetOutputDirection, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputParametersFromImage, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputStartIndex, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetOutputStartIndex, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetReferenceImage, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetReferenceImage, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetUseReferenceImage, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_UseReferenceImageOn, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_UseReferenceImageOff, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetUseReferenceImage, None, itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_swigregister
itkResampleImageFilterIRGBAUC3IRGBAUC3_swigregister(itkResampleImageFilterIRGBAUC3IRGBAUC3)

def itkResampleImageFilterIRGBAUC3IRGBAUC3___New_orig__():
    """itkResampleImageFilterIRGBAUC3IRGBAUC3___New_orig__() -> itkResampleImageFilterIRGBAUC3IRGBAUC3_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3___New_orig__()

def itkResampleImageFilterIRGBAUC3IRGBAUC3_cast(obj):
    """itkResampleImageFilterIRGBAUC3IRGBAUC3_cast(itkLightObject obj) -> itkResampleImageFilterIRGBAUC3IRGBAUC3"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_cast(obj)

class itkResampleImageFilterIRGBUC2IRGBUC2(itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIRGBUC2IRGBUC2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itkResampleImageFilterIRGBUC2IRGBUC2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIRGBUC2IRGBUC2 self, itkDataObjectDecoratorTD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIRGBUC2IRGBUC2 self, itkTransformD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itkDataObjectDecoratorTD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itkTransformD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIRGBUC2IRGBUC2 self, itkInterpolateImageFunctionIRGBUC2D _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itkInterpolateImageFunctionIRGBUC2D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itkInterpolateImageFunctionIRGBUC2D
        GetInterpolator(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itkInterpolateImageFunctionIRGBUC2D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIRGBUC2IRGBUC2 self, itk::ExtrapolateImageFunction< itk::Image< itk::RGBPixel< unsigned char >,2 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::RGBPixel< unsigned char >,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::RGBPixel< unsigned char >,2 >,double > const
        GetExtrapolator(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::RGBPixel< unsigned char >,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIRGBUC2IRGBUC2 self, itkSize2 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itkSize2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIRGBUC2IRGBUC2 self, itkRGBPixelUC _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itkRGBPixelUC"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIRGBUC2IRGBUC2 self, itkVectorD2 _arg)
        SetOutputSpacing(itkResampleImageFilterIRGBUC2IRGBUC2 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIRGBUC2IRGBUC2 self, itkPointD2 _arg)
        SetOutputOrigin(itkResampleImageFilterIRGBUC2IRGBUC2 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIRGBUC2IRGBUC2 self, itkMatrixD22 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itkMatrixD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIRGBUC2IRGBUC2 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIRGBUC2IRGBUC2 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIRGBUC2IRGBUC2 self, itkImageBase2 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> itkImageBase2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIRGBUC2IRGBUC2 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIRGBUC2IRGBUC2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIRGBUC2IRGBUC2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIRGBUC2IRGBUC2 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIRGBUC2IRGBUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIRGBUC2IRGBUC2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIRGBUC2IRGBUC2

        Create a new object of the class itkResampleImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIRGBUC2IRGBUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIRGBUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIRGBUC2IRGBUC2.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_Clone, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetTransformInput, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetTransform, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetTransformInput, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetTransform, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetInterpolator, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetModifiableInterpolator, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetInterpolator, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetExtrapolator, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetModifiableExtrapolator, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetExtrapolator, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetSize, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetSize, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetDefaultPixelValue, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetDefaultPixelValue, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputSpacing, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetOutputSpacing, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputOrigin, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetOutputOrigin, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputDirection, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetOutputDirection, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputParametersFromImage, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputStartIndex, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetOutputStartIndex, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetReferenceImage, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetReferenceImage, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetUseReferenceImage, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_UseReferenceImageOn, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_UseReferenceImageOff, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetUseReferenceImage, None, itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_swigregister
itkResampleImageFilterIRGBUC2IRGBUC2_swigregister(itkResampleImageFilterIRGBUC2IRGBUC2)

def itkResampleImageFilterIRGBUC2IRGBUC2___New_orig__():
    """itkResampleImageFilterIRGBUC2IRGBUC2___New_orig__() -> itkResampleImageFilterIRGBUC2IRGBUC2_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2___New_orig__()

def itkResampleImageFilterIRGBUC2IRGBUC2_cast(obj):
    """itkResampleImageFilterIRGBUC2IRGBUC2_cast(itkLightObject obj) -> itkResampleImageFilterIRGBUC2IRGBUC2"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_cast(obj)

class itkResampleImageFilterIRGBUC3IRGBUC3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIRGBUC3IRGBUC3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itkResampleImageFilterIRGBUC3IRGBUC3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIRGBUC3IRGBUC3 self, itkDataObjectDecoratorTD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIRGBUC3IRGBUC3 self, itkTransformD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itkDataObjectDecoratorTD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itkTransformD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIRGBUC3IRGBUC3 self, itkInterpolateImageFunctionIRGBUC3D _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itkInterpolateImageFunctionIRGBUC3D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itkInterpolateImageFunctionIRGBUC3D
        GetInterpolator(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itkInterpolateImageFunctionIRGBUC3D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIRGBUC3IRGBUC3 self, itk::ExtrapolateImageFunction< itk::Image< itk::RGBPixel< unsigned char >,3 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::RGBPixel< unsigned char >,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::RGBPixel< unsigned char >,3 >,double > const
        GetExtrapolator(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::RGBPixel< unsigned char >,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIRGBUC3IRGBUC3 self, itkSize3 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itkSize3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIRGBUC3IRGBUC3 self, itkRGBPixelUC _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itkRGBPixelUC"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIRGBUC3IRGBUC3 self, itkVectorD3 _arg)
        SetOutputSpacing(itkResampleImageFilterIRGBUC3IRGBUC3 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIRGBUC3IRGBUC3 self, itkPointD3 _arg)
        SetOutputOrigin(itkResampleImageFilterIRGBUC3IRGBUC3 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIRGBUC3IRGBUC3 self, itkMatrixD33 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itkMatrixD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIRGBUC3IRGBUC3 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIRGBUC3IRGBUC3 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIRGBUC3IRGBUC3 self, itkImageBase3 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> itkImageBase3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIRGBUC3IRGBUC3 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIRGBUC3IRGBUC3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIRGBUC3IRGBUC3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIRGBUC3IRGBUC3 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIRGBUC3IRGBUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIRGBUC3IRGBUC3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIRGBUC3IRGBUC3

        Create a new object of the class itkResampleImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIRGBUC3IRGBUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIRGBUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIRGBUC3IRGBUC3.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_Clone, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetTransformInput, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetTransform, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetTransformInput, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetTransform, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetInterpolator, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetModifiableInterpolator, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetInterpolator, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetExtrapolator, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetModifiableExtrapolator, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetExtrapolator, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetSize, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetSize, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetDefaultPixelValue, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetDefaultPixelValue, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputSpacing, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetOutputSpacing, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputOrigin, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetOutputOrigin, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputDirection, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetOutputDirection, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputParametersFromImage, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputStartIndex, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetOutputStartIndex, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetReferenceImage, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetReferenceImage, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetUseReferenceImage, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_UseReferenceImageOn, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_UseReferenceImageOff, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetUseReferenceImage, None, itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_swigregister
itkResampleImageFilterIRGBUC3IRGBUC3_swigregister(itkResampleImageFilterIRGBUC3IRGBUC3)

def itkResampleImageFilterIRGBUC3IRGBUC3___New_orig__():
    """itkResampleImageFilterIRGBUC3IRGBUC3___New_orig__() -> itkResampleImageFilterIRGBUC3IRGBUC3_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3___New_orig__()

def itkResampleImageFilterIRGBUC3IRGBUC3_cast(obj):
    """itkResampleImageFilterIRGBUC3IRGBUC3_cast(itkLightObject obj) -> itkResampleImageFilterIRGBUC3IRGBUC3"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_cast(obj)

class itkResampleImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterISS2ISS2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterISS2ISS2 self) -> itkResampleImageFilterISS2ISS2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterISS2ISS2 self, itkDataObjectDecoratorTD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterISS2ISS2 self, itkTransformD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterISS2ISS2 self) -> itkDataObjectDecoratorTD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterISS2ISS2 self) -> itkTransformD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterISS2ISS2 self, itkInterpolateImageFunctionISS2D _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterISS2ISS2 self) -> itkInterpolateImageFunctionISS2D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterISS2ISS2 self) -> itkInterpolateImageFunctionISS2D
        GetInterpolator(itkResampleImageFilterISS2ISS2 self) -> itkInterpolateImageFunctionISS2D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterISS2ISS2 self, itkExtrapolateImageFunctionISS2D _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterISS2ISS2 self) -> itkExtrapolateImageFunctionISS2D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterISS2ISS2 self) -> itkExtrapolateImageFunctionISS2D
        GetExtrapolator(itkResampleImageFilterISS2ISS2 self) -> itkExtrapolateImageFunctionISS2D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterISS2ISS2 self, itkSize2 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterISS2ISS2 self) -> itkSize2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterISS2ISS2 self, short const _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterISS2ISS2 self) -> short const &"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterISS2ISS2 self, itkVectorD2 _arg)
        SetOutputSpacing(itkResampleImageFilterISS2ISS2 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterISS2ISS2 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterISS2ISS2 self, itkPointD2 _arg)
        SetOutputOrigin(itkResampleImageFilterISS2ISS2 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterISS2ISS2 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterISS2ISS2 self, itkMatrixD22 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterISS2ISS2 self) -> itkMatrixD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterISS2ISS2 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterISS2ISS2 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterISS2ISS2 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterISS2ISS2 self, itkImageBase2 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterISS2ISS2 self) -> itkImageBase2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterISS2ISS2 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterISS2ISS2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterISS2ISS2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterISS2ISS2 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterISS2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterISS2ISS2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterISS2ISS2

        Create a new object of the class itkResampleImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterISS2ISS2.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_Clone, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetTransformInput, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetTransform, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetTransformInput, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetTransform, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetInterpolator, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetModifiableInterpolator, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetInterpolator, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetExtrapolator, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetModifiableExtrapolator, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetExtrapolator, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetSize, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetSize, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetDefaultPixelValue, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetDefaultPixelValue, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputSpacing, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetOutputSpacing, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputOrigin, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetOutputOrigin, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputDirection, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetOutputDirection, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputParametersFromImage, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputStartIndex, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetOutputStartIndex, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetReferenceImage, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetReferenceImage, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetUseReferenceImage, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_UseReferenceImageOn, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_UseReferenceImageOff, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetUseReferenceImage, None, itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_swigregister
itkResampleImageFilterISS2ISS2_swigregister(itkResampleImageFilterISS2ISS2)

def itkResampleImageFilterISS2ISS2___New_orig__():
    """itkResampleImageFilterISS2ISS2___New_orig__() -> itkResampleImageFilterISS2ISS2_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2___New_orig__()

def itkResampleImageFilterISS2ISS2_cast(obj):
    """itkResampleImageFilterISS2ISS2_cast(itkLightObject obj) -> itkResampleImageFilterISS2ISS2"""
    return _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_cast(obj)

class itkResampleImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterISS3ISS3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterISS3ISS3 self) -> itkResampleImageFilterISS3ISS3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterISS3ISS3 self, itkDataObjectDecoratorTD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterISS3ISS3 self, itkTransformD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterISS3ISS3 self) -> itkDataObjectDecoratorTD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterISS3ISS3 self) -> itkTransformD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterISS3ISS3 self, itkInterpolateImageFunctionISS3D _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterISS3ISS3 self) -> itkInterpolateImageFunctionISS3D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterISS3ISS3 self) -> itkInterpolateImageFunctionISS3D
        GetInterpolator(itkResampleImageFilterISS3ISS3 self) -> itkInterpolateImageFunctionISS3D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterISS3ISS3 self, itkExtrapolateImageFunctionISS3D _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterISS3ISS3 self) -> itkExtrapolateImageFunctionISS3D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterISS3ISS3 self) -> itkExtrapolateImageFunctionISS3D
        GetExtrapolator(itkResampleImageFilterISS3ISS3 self) -> itkExtrapolateImageFunctionISS3D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterISS3ISS3 self, itkSize3 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterISS3ISS3 self) -> itkSize3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterISS3ISS3 self, short const _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterISS3ISS3 self) -> short const &"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterISS3ISS3 self, itkVectorD3 _arg)
        SetOutputSpacing(itkResampleImageFilterISS3ISS3 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterISS3ISS3 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterISS3ISS3 self, itkPointD3 _arg)
        SetOutputOrigin(itkResampleImageFilterISS3ISS3 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterISS3ISS3 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterISS3ISS3 self, itkMatrixD33 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterISS3ISS3 self) -> itkMatrixD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterISS3ISS3 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterISS3ISS3 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterISS3ISS3 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterISS3ISS3 self, itkImageBase3 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterISS3ISS3 self) -> itkImageBase3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterISS3ISS3 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterISS3ISS3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterISS3ISS3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterISS3ISS3 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterISS3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterISS3ISS3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterISS3ISS3

        Create a new object of the class itkResampleImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterISS3ISS3.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_Clone, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetTransformInput, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetTransform, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetTransformInput, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetTransform, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetInterpolator, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetModifiableInterpolator, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetInterpolator, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetExtrapolator, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetModifiableExtrapolator, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetExtrapolator, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetSize, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetSize, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetDefaultPixelValue, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetDefaultPixelValue, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputSpacing, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetOutputSpacing, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputOrigin, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetOutputOrigin, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputDirection, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetOutputDirection, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputParametersFromImage, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputStartIndex, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetOutputStartIndex, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetReferenceImage, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetReferenceImage, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetUseReferenceImage, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_UseReferenceImageOn, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_UseReferenceImageOff, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetUseReferenceImage, None, itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_swigregister
itkResampleImageFilterISS3ISS3_swigregister(itkResampleImageFilterISS3ISS3)

def itkResampleImageFilterISS3ISS3___New_orig__():
    """itkResampleImageFilterISS3ISS3___New_orig__() -> itkResampleImageFilterISS3ISS3_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3___New_orig__()

def itkResampleImageFilterISS3ISS3_cast(obj):
    """itkResampleImageFilterISS3ISS3_cast(itkLightObject obj) -> itkResampleImageFilterISS3ISS3"""
    return _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_cast(obj)

class itkResampleImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIUC2IUC2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIUC2IUC2 self) -> itkResampleImageFilterIUC2IUC2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIUC2IUC2 self, itkDataObjectDecoratorTD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIUC2IUC2 self, itkTransformD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIUC2IUC2 self) -> itkDataObjectDecoratorTD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIUC2IUC2 self) -> itkTransformD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIUC2IUC2 self, itkInterpolateImageFunctionIUC2D _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIUC2IUC2 self) -> itkInterpolateImageFunctionIUC2D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIUC2IUC2 self) -> itkInterpolateImageFunctionIUC2D
        GetInterpolator(itkResampleImageFilterIUC2IUC2 self) -> itkInterpolateImageFunctionIUC2D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIUC2IUC2 self, itkExtrapolateImageFunctionIUC2D _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIUC2IUC2 self) -> itkExtrapolateImageFunctionIUC2D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIUC2IUC2 self) -> itkExtrapolateImageFunctionIUC2D
        GetExtrapolator(itkResampleImageFilterIUC2IUC2 self) -> itkExtrapolateImageFunctionIUC2D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIUC2IUC2 self, itkSize2 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIUC2IUC2 self) -> itkSize2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIUC2IUC2 self, unsigned char const _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIUC2IUC2 self) -> unsigned char const &"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIUC2IUC2 self, itkVectorD2 _arg)
        SetOutputSpacing(itkResampleImageFilterIUC2IUC2 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIUC2IUC2 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIUC2IUC2 self, itkPointD2 _arg)
        SetOutputOrigin(itkResampleImageFilterIUC2IUC2 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIUC2IUC2 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIUC2IUC2 self, itkMatrixD22 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIUC2IUC2 self) -> itkMatrixD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIUC2IUC2 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIUC2IUC2 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIUC2IUC2 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIUC2IUC2 self, itkImageBase2 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIUC2IUC2 self) -> itkImageBase2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIUC2IUC2 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIUC2IUC2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIUC2IUC2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIUC2IUC2 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIUC2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIUC2IUC2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIUC2IUC2

        Create a new object of the class itkResampleImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIUC2IUC2.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_Clone, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetTransformInput, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetTransform, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetTransformInput, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetTransform, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetInterpolator, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetModifiableInterpolator, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetInterpolator, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetExtrapolator, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetModifiableExtrapolator, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetExtrapolator, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetSize, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetSize, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetDefaultPixelValue, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetDefaultPixelValue, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputSpacing, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetOutputSpacing, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputOrigin, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetOutputOrigin, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputDirection, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetOutputDirection, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputParametersFromImage, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputStartIndex, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetOutputStartIndex, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetReferenceImage, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetReferenceImage, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetUseReferenceImage, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_UseReferenceImageOn, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_UseReferenceImageOff, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetUseReferenceImage, None, itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_swigregister
itkResampleImageFilterIUC2IUC2_swigregister(itkResampleImageFilterIUC2IUC2)

def itkResampleImageFilterIUC2IUC2___New_orig__():
    """itkResampleImageFilterIUC2IUC2___New_orig__() -> itkResampleImageFilterIUC2IUC2_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2___New_orig__()

def itkResampleImageFilterIUC2IUC2_cast(obj):
    """itkResampleImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkResampleImageFilterIUC2IUC2"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_cast(obj)

class itkResampleImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIUC3IUC3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIUC3IUC3 self) -> itkResampleImageFilterIUC3IUC3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIUC3IUC3 self, itkDataObjectDecoratorTD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIUC3IUC3 self, itkTransformD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIUC3IUC3 self) -> itkDataObjectDecoratorTD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIUC3IUC3 self) -> itkTransformD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIUC3IUC3 self, itkInterpolateImageFunctionIUC3D _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIUC3IUC3 self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIUC3IUC3 self) -> itkInterpolateImageFunctionIUC3D
        GetInterpolator(itkResampleImageFilterIUC3IUC3 self) -> itkInterpolateImageFunctionIUC3D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIUC3IUC3 self, itkExtrapolateImageFunctionIUC3D _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIUC3IUC3 self) -> itkExtrapolateImageFunctionIUC3D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIUC3IUC3 self) -> itkExtrapolateImageFunctionIUC3D
        GetExtrapolator(itkResampleImageFilterIUC3IUC3 self) -> itkExtrapolateImageFunctionIUC3D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIUC3IUC3 self, itkSize3 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIUC3IUC3 self) -> itkSize3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIUC3IUC3 self, unsigned char const _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIUC3IUC3 self) -> unsigned char const &"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIUC3IUC3 self, itkVectorD3 _arg)
        SetOutputSpacing(itkResampleImageFilterIUC3IUC3 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIUC3IUC3 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIUC3IUC3 self, itkPointD3 _arg)
        SetOutputOrigin(itkResampleImageFilterIUC3IUC3 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIUC3IUC3 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIUC3IUC3 self, itkMatrixD33 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIUC3IUC3 self) -> itkMatrixD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIUC3IUC3 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIUC3IUC3 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIUC3IUC3 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIUC3IUC3 self, itkImageBase3 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIUC3IUC3 self) -> itkImageBase3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIUC3IUC3 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIUC3IUC3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIUC3IUC3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIUC3IUC3 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIUC3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIUC3IUC3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIUC3IUC3

        Create a new object of the class itkResampleImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIUC3IUC3.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_Clone, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetTransformInput, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetTransform, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetTransformInput, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetTransform, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetInterpolator, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetModifiableInterpolator, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetInterpolator, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetExtrapolator, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetModifiableExtrapolator, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetExtrapolator, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetSize, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetSize, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetDefaultPixelValue, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetDefaultPixelValue, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputSpacing, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetOutputSpacing, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputOrigin, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetOutputOrigin, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputDirection, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetOutputDirection, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputParametersFromImage, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputStartIndex, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetOutputStartIndex, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetReferenceImage, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetReferenceImage, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetUseReferenceImage, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_UseReferenceImageOn, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_UseReferenceImageOff, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetUseReferenceImage, None, itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_swigregister
itkResampleImageFilterIUC3IUC3_swigregister(itkResampleImageFilterIUC3IUC3)

def itkResampleImageFilterIUC3IUC3___New_orig__():
    """itkResampleImageFilterIUC3IUC3___New_orig__() -> itkResampleImageFilterIUC3IUC3_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3___New_orig__()

def itkResampleImageFilterIUC3IUC3_cast(obj):
    """itkResampleImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkResampleImageFilterIUC3IUC3"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_cast(obj)

class itkResampleImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIUS2IUS2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIUS2IUS2 self) -> itkResampleImageFilterIUS2IUS2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIUS2IUS2 self, itkDataObjectDecoratorTD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIUS2IUS2 self, itkTransformD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIUS2IUS2 self) -> itkDataObjectDecoratorTD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIUS2IUS2 self) -> itkTransformD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIUS2IUS2 self, itkInterpolateImageFunctionIUS2D _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIUS2IUS2 self) -> itkInterpolateImageFunctionIUS2D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIUS2IUS2 self) -> itkInterpolateImageFunctionIUS2D
        GetInterpolator(itkResampleImageFilterIUS2IUS2 self) -> itkInterpolateImageFunctionIUS2D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIUS2IUS2 self, itkExtrapolateImageFunctionIUS2D _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIUS2IUS2 self) -> itkExtrapolateImageFunctionIUS2D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIUS2IUS2 self) -> itkExtrapolateImageFunctionIUS2D
        GetExtrapolator(itkResampleImageFilterIUS2IUS2 self) -> itkExtrapolateImageFunctionIUS2D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIUS2IUS2 self, itkSize2 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIUS2IUS2 self) -> itkSize2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIUS2IUS2 self, unsigned short const _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIUS2IUS2 self) -> unsigned short const &"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIUS2IUS2 self, itkVectorD2 _arg)
        SetOutputSpacing(itkResampleImageFilterIUS2IUS2 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIUS2IUS2 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIUS2IUS2 self, itkPointD2 _arg)
        SetOutputOrigin(itkResampleImageFilterIUS2IUS2 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIUS2IUS2 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIUS2IUS2 self, itkMatrixD22 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIUS2IUS2 self) -> itkMatrixD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIUS2IUS2 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIUS2IUS2 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIUS2IUS2 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIUS2IUS2 self, itkImageBase2 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIUS2IUS2 self) -> itkImageBase2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIUS2IUS2 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIUS2IUS2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIUS2IUS2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIUS2IUS2 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIUS2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIUS2IUS2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIUS2IUS2

        Create a new object of the class itkResampleImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIUS2IUS2.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_Clone, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetTransformInput, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetTransform, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetTransformInput, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetTransform, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetInterpolator, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetModifiableInterpolator, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetInterpolator, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetExtrapolator, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetModifiableExtrapolator, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetExtrapolator, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetSize, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetSize, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetDefaultPixelValue, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetDefaultPixelValue, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputSpacing, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetOutputSpacing, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputOrigin, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetOutputOrigin, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputDirection, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetOutputDirection, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputParametersFromImage, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputStartIndex, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetOutputStartIndex, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetReferenceImage, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetReferenceImage, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetUseReferenceImage, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_UseReferenceImageOn, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_UseReferenceImageOff, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetUseReferenceImage, None, itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_swigregister
itkResampleImageFilterIUS2IUS2_swigregister(itkResampleImageFilterIUS2IUS2)

def itkResampleImageFilterIUS2IUS2___New_orig__():
    """itkResampleImageFilterIUS2IUS2___New_orig__() -> itkResampleImageFilterIUS2IUS2_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2___New_orig__()

def itkResampleImageFilterIUS2IUS2_cast(obj):
    """itkResampleImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkResampleImageFilterIUS2IUS2"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_cast(obj)

class itkResampleImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIUS3IUS3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIUS3IUS3 self) -> itkResampleImageFilterIUS3IUS3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIUS3IUS3 self, itkDataObjectDecoratorTD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIUS3IUS3 self, itkTransformD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIUS3IUS3 self) -> itkDataObjectDecoratorTD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIUS3IUS3 self) -> itkTransformD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIUS3IUS3 self, itkInterpolateImageFunctionIUS3D _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIUS3IUS3 self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIUS3IUS3 self) -> itkInterpolateImageFunctionIUS3D
        GetInterpolator(itkResampleImageFilterIUS3IUS3 self) -> itkInterpolateImageFunctionIUS3D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIUS3IUS3 self, itkExtrapolateImageFunctionIUS3D _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIUS3IUS3 self) -> itkExtrapolateImageFunctionIUS3D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIUS3IUS3 self) -> itkExtrapolateImageFunctionIUS3D
        GetExtrapolator(itkResampleImageFilterIUS3IUS3 self) -> itkExtrapolateImageFunctionIUS3D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIUS3IUS3 self, itkSize3 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIUS3IUS3 self) -> itkSize3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIUS3IUS3 self, unsigned short const _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIUS3IUS3 self) -> unsigned short const &"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIUS3IUS3 self, itkVectorD3 _arg)
        SetOutputSpacing(itkResampleImageFilterIUS3IUS3 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIUS3IUS3 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIUS3IUS3 self, itkPointD3 _arg)
        SetOutputOrigin(itkResampleImageFilterIUS3IUS3 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIUS3IUS3 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIUS3IUS3 self, itkMatrixD33 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIUS3IUS3 self) -> itkMatrixD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIUS3IUS3 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIUS3IUS3 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIUS3IUS3 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIUS3IUS3 self, itkImageBase3 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIUS3IUS3 self) -> itkImageBase3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIUS3IUS3 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIUS3IUS3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIUS3IUS3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIUS3IUS3 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIUS3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIUS3IUS3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIUS3IUS3

        Create a new object of the class itkResampleImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIUS3IUS3.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_Clone, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetTransformInput, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetTransform, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetTransformInput, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetTransform, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetInterpolator, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetModifiableInterpolator, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetInterpolator, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetExtrapolator, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetModifiableExtrapolator, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetExtrapolator, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetSize, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetSize, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetDefaultPixelValue, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetDefaultPixelValue, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputSpacing, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetOutputSpacing, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputOrigin, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetOutputOrigin, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputDirection, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetOutputDirection, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputParametersFromImage, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputStartIndex, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetOutputStartIndex, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetReferenceImage, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetReferenceImage, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetUseReferenceImage, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_UseReferenceImageOn, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_UseReferenceImageOff, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetUseReferenceImage, None, itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_swigregister
itkResampleImageFilterIUS3IUS3_swigregister(itkResampleImageFilterIUS3IUS3)

def itkResampleImageFilterIUS3IUS3___New_orig__():
    """itkResampleImageFilterIUS3IUS3___New_orig__() -> itkResampleImageFilterIUS3IUS3_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3___New_orig__()

def itkResampleImageFilterIUS3IUS3_cast(obj):
    """itkResampleImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkResampleImageFilterIUS3IUS3"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_cast(obj)

class itkResampleImageFilterIVF22IVF22(itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIVF22IVF22_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIVF22IVF22 self) -> itkResampleImageFilterIVF22IVF22_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIVF22IVF22 self, itkDataObjectDecoratorTD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIVF22IVF22 self, itkTransformD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIVF22IVF22 self) -> itkDataObjectDecoratorTD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIVF22IVF22 self) -> itkTransformD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIVF22IVF22 self, itkInterpolateImageFunctionIVF22D _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIVF22IVF22 self) -> itkInterpolateImageFunctionIVF22D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIVF22IVF22 self) -> itkInterpolateImageFunctionIVF22D
        GetInterpolator(itkResampleImageFilterIVF22IVF22 self) -> itkInterpolateImageFunctionIVF22D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIVF22IVF22 self, itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,2 >,2 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIVF22IVF22 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,2 >,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIVF22IVF22 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,2 >,2 >,double > const
        GetExtrapolator(itkResampleImageFilterIVF22IVF22 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,2 >,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIVF22IVF22 self, itkSize2 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIVF22IVF22 self) -> itkSize2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIVF22IVF22 self, itkVectorF2 _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIVF22IVF22 self) -> itkVectorF2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIVF22IVF22 self, itkVectorD2 _arg)
        SetOutputSpacing(itkResampleImageFilterIVF22IVF22 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIVF22IVF22 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIVF22IVF22 self, itkPointD2 _arg)
        SetOutputOrigin(itkResampleImageFilterIVF22IVF22 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIVF22IVF22 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIVF22IVF22 self, itkMatrixD22 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIVF22IVF22 self) -> itkMatrixD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIVF22IVF22 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIVF22IVF22 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIVF22IVF22 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIVF22IVF22 self, itkImageBase2 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIVF22IVF22 self) -> itkImageBase2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIVF22IVF22 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIVF22IVF22 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIVF22IVF22 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIVF22IVF22 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIVF22IVF22

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIVF22IVF22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIVF22IVF22

        Create a new object of the class itkResampleImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIVF22IVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIVF22IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIVF22IVF22.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_Clone, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetTransformInput, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetTransform, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetTransformInput, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetTransform, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetInterpolator, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetModifiableInterpolator, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetInterpolator, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetExtrapolator, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetModifiableExtrapolator, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetExtrapolator, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetSize, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetSize, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetDefaultPixelValue, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetDefaultPixelValue, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputSpacing, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetOutputSpacing, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputOrigin, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetOutputOrigin, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputDirection, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetOutputDirection, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputParametersFromImage, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputStartIndex, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetOutputStartIndex, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetReferenceImage, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetReferenceImage, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetUseReferenceImage, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_UseReferenceImageOn, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_UseReferenceImageOff, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetUseReferenceImage, None, itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_swigregister
itkResampleImageFilterIVF22IVF22_swigregister(itkResampleImageFilterIVF22IVF22)

def itkResampleImageFilterIVF22IVF22___New_orig__():
    """itkResampleImageFilterIVF22IVF22___New_orig__() -> itkResampleImageFilterIVF22IVF22_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22___New_orig__()

def itkResampleImageFilterIVF22IVF22_cast(obj):
    """itkResampleImageFilterIVF22IVF22_cast(itkLightObject obj) -> itkResampleImageFilterIVF22IVF22"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_cast(obj)

class itkResampleImageFilterIVF23IVF23(itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIVF23IVF23_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIVF23IVF23 self) -> itkResampleImageFilterIVF23IVF23_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIVF23IVF23 self, itkDataObjectDecoratorTD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIVF23IVF23 self, itkTransformD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIVF23IVF23 self) -> itkDataObjectDecoratorTD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIVF23IVF23 self) -> itkTransformD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIVF23IVF23 self, itk::InterpolateImageFunction< itk::Image< itk::Vector< float,2 >,3 >,double > * _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIVF23IVF23 self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,2 >,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIVF23IVF23 self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,2 >,3 >,double > const
        GetInterpolator(itkResampleImageFilterIVF23IVF23 self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,2 >,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIVF23IVF23 self, itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,2 >,3 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIVF23IVF23 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,2 >,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIVF23IVF23 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,2 >,3 >,double > const
        GetExtrapolator(itkResampleImageFilterIVF23IVF23 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,2 >,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIVF23IVF23 self, itkSize3 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIVF23IVF23 self) -> itkSize3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIVF23IVF23 self, itkVectorF2 _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIVF23IVF23 self) -> itkVectorF2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIVF23IVF23 self, itkVectorD3 _arg)
        SetOutputSpacing(itkResampleImageFilterIVF23IVF23 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIVF23IVF23 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIVF23IVF23 self, itkPointD3 _arg)
        SetOutputOrigin(itkResampleImageFilterIVF23IVF23 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIVF23IVF23 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIVF23IVF23 self, itkMatrixD33 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIVF23IVF23 self) -> itkMatrixD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIVF23IVF23 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIVF23IVF23 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIVF23IVF23 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIVF23IVF23 self, itkImageBase3 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIVF23IVF23 self) -> itkImageBase3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIVF23IVF23 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIVF23IVF23 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIVF23IVF23 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIVF23IVF23 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIVF23IVF23

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIVF23IVF23"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIVF23IVF23

        Create a new object of the class itkResampleImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIVF23IVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIVF23IVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIVF23IVF23.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_Clone, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetTransformInput, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetTransform, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetTransformInput, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetTransform, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetInterpolator, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetModifiableInterpolator, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetInterpolator, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetExtrapolator, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetModifiableExtrapolator, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetExtrapolator, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetSize, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetSize, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetDefaultPixelValue, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetDefaultPixelValue, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputSpacing, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetOutputSpacing, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputOrigin, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetOutputOrigin, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputDirection, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetOutputDirection, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputParametersFromImage, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputStartIndex, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetOutputStartIndex, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetReferenceImage, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetReferenceImage, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetUseReferenceImage, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_UseReferenceImageOn, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_UseReferenceImageOff, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetUseReferenceImage, None, itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_swigregister
itkResampleImageFilterIVF23IVF23_swigregister(itkResampleImageFilterIVF23IVF23)

def itkResampleImageFilterIVF23IVF23___New_orig__():
    """itkResampleImageFilterIVF23IVF23___New_orig__() -> itkResampleImageFilterIVF23IVF23_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23___New_orig__()

def itkResampleImageFilterIVF23IVF23_cast(obj):
    """itkResampleImageFilterIVF23IVF23_cast(itkLightObject obj) -> itkResampleImageFilterIVF23IVF23"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_cast(obj)

class itkResampleImageFilterIVF32IVF32(itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIVF32IVF32_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIVF32IVF32 self) -> itkResampleImageFilterIVF32IVF32_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIVF32IVF32 self, itkDataObjectDecoratorTD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIVF32IVF32 self, itkTransformD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIVF32IVF32 self) -> itkDataObjectDecoratorTD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIVF32IVF32 self) -> itkTransformD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIVF32IVF32 self, itk::InterpolateImageFunction< itk::Image< itk::Vector< float,3 >,2 >,double > * _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIVF32IVF32 self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,3 >,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIVF32IVF32 self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,3 >,2 >,double > const
        GetInterpolator(itkResampleImageFilterIVF32IVF32 self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,3 >,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIVF32IVF32 self, itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,3 >,2 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIVF32IVF32 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,3 >,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIVF32IVF32 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,3 >,2 >,double > const
        GetExtrapolator(itkResampleImageFilterIVF32IVF32 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,3 >,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIVF32IVF32 self, itkSize2 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIVF32IVF32 self) -> itkSize2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIVF32IVF32 self, itkVectorF3 _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIVF32IVF32 self) -> itkVectorF3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIVF32IVF32 self, itkVectorD2 _arg)
        SetOutputSpacing(itkResampleImageFilterIVF32IVF32 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIVF32IVF32 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIVF32IVF32 self, itkPointD2 _arg)
        SetOutputOrigin(itkResampleImageFilterIVF32IVF32 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIVF32IVF32 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIVF32IVF32 self, itkMatrixD22 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIVF32IVF32 self) -> itkMatrixD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIVF32IVF32 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIVF32IVF32 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIVF32IVF32 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIVF32IVF32 self, itkImageBase2 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIVF32IVF32 self) -> itkImageBase2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIVF32IVF32 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIVF32IVF32 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIVF32IVF32 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIVF32IVF32 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIVF32IVF32

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIVF32IVF32"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIVF32IVF32

        Create a new object of the class itkResampleImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIVF32IVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIVF32IVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIVF32IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIVF32IVF32.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_Clone, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetTransformInput, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetTransform, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetTransformInput, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetTransform, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetInterpolator, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetModifiableInterpolator, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetInterpolator, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetExtrapolator, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetModifiableExtrapolator, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetExtrapolator, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetSize, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetSize, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetDefaultPixelValue, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetDefaultPixelValue, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputSpacing, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetOutputSpacing, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputOrigin, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetOutputOrigin, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputDirection, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetOutputDirection, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputParametersFromImage, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputStartIndex, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetOutputStartIndex, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetReferenceImage, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetReferenceImage, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetUseReferenceImage, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_UseReferenceImageOn, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_UseReferenceImageOff, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetUseReferenceImage, None, itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_swigregister
itkResampleImageFilterIVF32IVF32_swigregister(itkResampleImageFilterIVF32IVF32)

def itkResampleImageFilterIVF32IVF32___New_orig__():
    """itkResampleImageFilterIVF32IVF32___New_orig__() -> itkResampleImageFilterIVF32IVF32_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32___New_orig__()

def itkResampleImageFilterIVF32IVF32_cast(obj):
    """itkResampleImageFilterIVF32IVF32_cast(itkLightObject obj) -> itkResampleImageFilterIVF32IVF32"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_cast(obj)

class itkResampleImageFilterIVF33IVF33(itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIVF33IVF33_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIVF33IVF33 self) -> itkResampleImageFilterIVF33IVF33_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIVF33IVF33 self, itkDataObjectDecoratorTD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIVF33IVF33 self, itkTransformD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIVF33IVF33 self) -> itkDataObjectDecoratorTD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIVF33IVF33 self) -> itkTransformD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIVF33IVF33 self, itkInterpolateImageFunctionIVF33D _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIVF33IVF33 self) -> itkInterpolateImageFunctionIVF33D"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIVF33IVF33 self) -> itkInterpolateImageFunctionIVF33D
        GetInterpolator(itkResampleImageFilterIVF33IVF33 self) -> itkInterpolateImageFunctionIVF33D
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIVF33IVF33 self, itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,3 >,3 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIVF33IVF33 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,3 >,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIVF33IVF33 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,3 >,3 >,double > const
        GetExtrapolator(itkResampleImageFilterIVF33IVF33 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,3 >,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIVF33IVF33 self, itkSize3 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIVF33IVF33 self) -> itkSize3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIVF33IVF33 self, itkVectorF3 _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIVF33IVF33 self) -> itkVectorF3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIVF33IVF33 self, itkVectorD3 _arg)
        SetOutputSpacing(itkResampleImageFilterIVF33IVF33 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIVF33IVF33 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIVF33IVF33 self, itkPointD3 _arg)
        SetOutputOrigin(itkResampleImageFilterIVF33IVF33 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIVF33IVF33 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIVF33IVF33 self, itkMatrixD33 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIVF33IVF33 self) -> itkMatrixD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIVF33IVF33 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIVF33IVF33 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIVF33IVF33 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIVF33IVF33 self, itkImageBase3 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIVF33IVF33 self) -> itkImageBase3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIVF33IVF33 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIVF33IVF33 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIVF33IVF33 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIVF33IVF33 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIVF33IVF33

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIVF33IVF33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIVF33IVF33

        Create a new object of the class itkResampleImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIVF33IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIVF33IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIVF33IVF33.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_Clone, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetTransformInput, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetTransform, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetTransformInput, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetTransform, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetInterpolator, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetModifiableInterpolator, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetInterpolator, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetExtrapolator, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetModifiableExtrapolator, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetExtrapolator, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetSize, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetSize, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetDefaultPixelValue, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetDefaultPixelValue, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputSpacing, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetOutputSpacing, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputOrigin, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetOutputOrigin, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputDirection, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetOutputDirection, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputParametersFromImage, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputStartIndex, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetOutputStartIndex, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetReferenceImage, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetReferenceImage, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetUseReferenceImage, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_UseReferenceImageOn, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_UseReferenceImageOff, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetUseReferenceImage, None, itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_swigregister
itkResampleImageFilterIVF33IVF33_swigregister(itkResampleImageFilterIVF33IVF33)

def itkResampleImageFilterIVF33IVF33___New_orig__():
    """itkResampleImageFilterIVF33IVF33___New_orig__() -> itkResampleImageFilterIVF33IVF33_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33___New_orig__()

def itkResampleImageFilterIVF33IVF33_cast(obj):
    """itkResampleImageFilterIVF33IVF33_cast(itkLightObject obj) -> itkResampleImageFilterIVF33IVF33"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_cast(obj)

class itkResampleImageFilterIVF42IVF42(itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIVF42IVF42_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIVF42IVF42 self) -> itkResampleImageFilterIVF42IVF42_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIVF42IVF42 self, itkDataObjectDecoratorTD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIVF42IVF42 self, itkTransformD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIVF42IVF42 self) -> itkDataObjectDecoratorTD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIVF42IVF42 self) -> itkTransformD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIVF42IVF42 self, itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 >,2 >,double > * _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIVF42IVF42 self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 >,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIVF42IVF42 self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 >,2 >,double > const
        GetInterpolator(itkResampleImageFilterIVF42IVF42 self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 >,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIVF42IVF42 self, itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,4 >,2 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIVF42IVF42 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,4 >,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIVF42IVF42 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,4 >,2 >,double > const
        GetExtrapolator(itkResampleImageFilterIVF42IVF42 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,4 >,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIVF42IVF42 self, itkSize2 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIVF42IVF42 self) -> itkSize2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIVF42IVF42 self, itkVectorF4 _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIVF42IVF42 self) -> itkVectorF4"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIVF42IVF42 self, itkVectorD2 _arg)
        SetOutputSpacing(itkResampleImageFilterIVF42IVF42 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIVF42IVF42 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIVF42IVF42 self, itkPointD2 _arg)
        SetOutputOrigin(itkResampleImageFilterIVF42IVF42 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIVF42IVF42 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIVF42IVF42 self, itkMatrixD22 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIVF42IVF42 self) -> itkMatrixD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIVF42IVF42 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIVF42IVF42 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIVF42IVF42 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIVF42IVF42 self, itkImageBase2 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIVF42IVF42 self) -> itkImageBase2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIVF42IVF42 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIVF42IVF42 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIVF42IVF42 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIVF42IVF42 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIVF42IVF42

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIVF42IVF42"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIVF42IVF42

        Create a new object of the class itkResampleImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIVF42IVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIVF42IVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIVF42IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIVF42IVF42.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_Clone, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetTransformInput, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetTransform, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetTransformInput, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetTransform, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetInterpolator, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetModifiableInterpolator, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetInterpolator, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetExtrapolator, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetModifiableExtrapolator, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetExtrapolator, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetSize, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetSize, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetDefaultPixelValue, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetDefaultPixelValue, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputSpacing, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetOutputSpacing, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputOrigin, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetOutputOrigin, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputDirection, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetOutputDirection, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputParametersFromImage, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputStartIndex, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetOutputStartIndex, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetReferenceImage, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetReferenceImage, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetUseReferenceImage, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_UseReferenceImageOn, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_UseReferenceImageOff, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetUseReferenceImage, None, itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_swigregister
itkResampleImageFilterIVF42IVF42_swigregister(itkResampleImageFilterIVF42IVF42)

def itkResampleImageFilterIVF42IVF42___New_orig__():
    """itkResampleImageFilterIVF42IVF42___New_orig__() -> itkResampleImageFilterIVF42IVF42_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42___New_orig__()

def itkResampleImageFilterIVF42IVF42_cast(obj):
    """itkResampleImageFilterIVF42IVF42_cast(itkLightObject obj) -> itkResampleImageFilterIVF42IVF42"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_cast(obj)

class itkResampleImageFilterIVF43IVF43(itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterIVF43IVF43_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterIVF43IVF43 self) -> itkResampleImageFilterIVF43IVF43_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterIVF43IVF43 self, itkDataObjectDecoratorTD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterIVF43IVF43 self, itkTransformD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterIVF43IVF43 self) -> itkDataObjectDecoratorTD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterIVF43IVF43 self) -> itkTransformD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterIVF43IVF43 self, itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 >,3 >,double > * _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterIVF43IVF43 self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 >,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterIVF43IVF43 self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 >,3 >,double > const
        GetInterpolator(itkResampleImageFilterIVF43IVF43 self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 >,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterIVF43IVF43 self, itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,4 >,3 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterIVF43IVF43 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,4 >,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterIVF43IVF43 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,4 >,3 >,double > const
        GetExtrapolator(itkResampleImageFilterIVF43IVF43 self) -> itk::ExtrapolateImageFunction< itk::Image< itk::Vector< float,4 >,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterIVF43IVF43 self, itkSize3 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterIVF43IVF43 self) -> itkSize3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterIVF43IVF43 self, itkVectorF4 _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterIVF43IVF43 self) -> itkVectorF4"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterIVF43IVF43 self, itkVectorD3 _arg)
        SetOutputSpacing(itkResampleImageFilterIVF43IVF43 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterIVF43IVF43 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterIVF43IVF43 self, itkPointD3 _arg)
        SetOutputOrigin(itkResampleImageFilterIVF43IVF43 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterIVF43IVF43 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterIVF43IVF43 self, itkMatrixD33 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterIVF43IVF43 self) -> itkMatrixD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterIVF43IVF43 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterIVF43IVF43 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterIVF43IVF43 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterIVF43IVF43 self, itkImageBase3 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterIVF43IVF43 self) -> itkImageBase3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterIVF43IVF43 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterIVF43IVF43 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterIVF43IVF43 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterIVF43IVF43 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIVF43IVF43

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterIVF43IVF43"""
        return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIVF43IVF43

        Create a new object of the class itkResampleImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIVF43IVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIVF43IVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterIVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterIVF43IVF43.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_Clone, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetTransformInput, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetTransform, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetTransformInput, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetTransform, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetInterpolator, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetModifiableInterpolator, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetInterpolator, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetExtrapolator, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetModifiableExtrapolator, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetExtrapolator, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetSize, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetSize, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetDefaultPixelValue, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetDefaultPixelValue, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputSpacing, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetOutputSpacing, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputOrigin, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetOutputOrigin, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputDirection, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetOutputDirection, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputParametersFromImage, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputStartIndex, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetOutputStartIndex, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetReferenceImage, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetReferenceImage, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetUseReferenceImage, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_UseReferenceImageOn, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_UseReferenceImageOff, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetUseReferenceImage, None, itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_swigregister
itkResampleImageFilterIVF43IVF43_swigregister(itkResampleImageFilterIVF43IVF43)

def itkResampleImageFilterIVF43IVF43___New_orig__():
    """itkResampleImageFilterIVF43IVF43___New_orig__() -> itkResampleImageFilterIVF43IVF43_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43___New_orig__()

def itkResampleImageFilterIVF43IVF43_cast(obj):
    """itkResampleImageFilterIVF43IVF43_cast(itkLightObject obj) -> itkResampleImageFilterIVF43IVF43"""
    return _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_cast(obj)

class itkResampleImageFilterVIF2VIF2(itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterVIF2VIF2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterVIF2VIF2 self) -> itkResampleImageFilterVIF2VIF2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterVIF2VIF2 self, itkDataObjectDecoratorTD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterVIF2VIF2 self, itkTransformD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterVIF2VIF2 self) -> itkDataObjectDecoratorTD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterVIF2VIF2 self) -> itkTransformD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterVIF2VIF2 self, itk::InterpolateImageFunction< itk::VectorImage< float,2 >,double > * _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterVIF2VIF2 self) -> itk::InterpolateImageFunction< itk::VectorImage< float,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterVIF2VIF2 self) -> itk::InterpolateImageFunction< itk::VectorImage< float,2 >,double > const
        GetInterpolator(itkResampleImageFilterVIF2VIF2 self) -> itk::InterpolateImageFunction< itk::VectorImage< float,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterVIF2VIF2 self, itk::ExtrapolateImageFunction< itk::VectorImage< float,2 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterVIF2VIF2 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< float,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterVIF2VIF2 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< float,2 >,double > const
        GetExtrapolator(itkResampleImageFilterVIF2VIF2 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< float,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterVIF2VIF2 self, itkSize2 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterVIF2VIF2 self) -> itkSize2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterVIF2VIF2 self, itkVariableLengthVectorF _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterVIF2VIF2 self) -> itkVariableLengthVectorF"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterVIF2VIF2 self, itkVectorD2 _arg)
        SetOutputSpacing(itkResampleImageFilterVIF2VIF2 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterVIF2VIF2 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterVIF2VIF2 self, itkPointD2 _arg)
        SetOutputOrigin(itkResampleImageFilterVIF2VIF2 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterVIF2VIF2 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterVIF2VIF2 self, itkMatrixD22 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterVIF2VIF2 self) -> itkMatrixD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterVIF2VIF2 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterVIF2VIF2 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterVIF2VIF2 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterVIF2VIF2 self, itkImageBase2 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterVIF2VIF2 self) -> itkImageBase2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterVIF2VIF2 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterVIF2VIF2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterVIF2VIF2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterVIF2VIF2 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVIF2VIF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterVIF2VIF2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVIF2VIF2

        Create a new object of the class itkResampleImageFilterVIF2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVIF2VIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVIF2VIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterVIF2VIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterVIF2VIF2.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_Clone, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetTransformInput, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetTransform, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetTransformInput, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetTransform, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetInterpolator, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetModifiableInterpolator, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetInterpolator, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetExtrapolator, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetModifiableExtrapolator, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetExtrapolator, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetSize, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetSize, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetDefaultPixelValue, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetDefaultPixelValue, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputSpacing, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetOutputSpacing, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputOrigin, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetOutputOrigin, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputDirection, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetOutputDirection, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputParametersFromImage, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputStartIndex, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetOutputStartIndex, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetReferenceImage, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetReferenceImage, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetUseReferenceImage, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_UseReferenceImageOn, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_UseReferenceImageOff, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetUseReferenceImage, None, itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_swigregister
itkResampleImageFilterVIF2VIF2_swigregister(itkResampleImageFilterVIF2VIF2)

def itkResampleImageFilterVIF2VIF2___New_orig__():
    """itkResampleImageFilterVIF2VIF2___New_orig__() -> itkResampleImageFilterVIF2VIF2_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2___New_orig__()

def itkResampleImageFilterVIF2VIF2_cast(obj):
    """itkResampleImageFilterVIF2VIF2_cast(itkLightObject obj) -> itkResampleImageFilterVIF2VIF2"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_cast(obj)

class itkResampleImageFilterVIF3VIF3(itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterVIF3VIF3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterVIF3VIF3 self) -> itkResampleImageFilterVIF3VIF3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterVIF3VIF3 self, itkDataObjectDecoratorTD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterVIF3VIF3 self, itkTransformD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterVIF3VIF3 self) -> itkDataObjectDecoratorTD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterVIF3VIF3 self) -> itkTransformD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterVIF3VIF3 self, itk::InterpolateImageFunction< itk::VectorImage< float,3 >,double > * _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterVIF3VIF3 self) -> itk::InterpolateImageFunction< itk::VectorImage< float,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterVIF3VIF3 self) -> itk::InterpolateImageFunction< itk::VectorImage< float,3 >,double > const
        GetInterpolator(itkResampleImageFilterVIF3VIF3 self) -> itk::InterpolateImageFunction< itk::VectorImage< float,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterVIF3VIF3 self, itk::ExtrapolateImageFunction< itk::VectorImage< float,3 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterVIF3VIF3 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< float,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterVIF3VIF3 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< float,3 >,double > const
        GetExtrapolator(itkResampleImageFilterVIF3VIF3 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< float,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterVIF3VIF3 self, itkSize3 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterVIF3VIF3 self) -> itkSize3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterVIF3VIF3 self, itkVariableLengthVectorF _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterVIF3VIF3 self) -> itkVariableLengthVectorF"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterVIF3VIF3 self, itkVectorD3 _arg)
        SetOutputSpacing(itkResampleImageFilterVIF3VIF3 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterVIF3VIF3 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterVIF3VIF3 self, itkPointD3 _arg)
        SetOutputOrigin(itkResampleImageFilterVIF3VIF3 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterVIF3VIF3 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterVIF3VIF3 self, itkMatrixD33 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterVIF3VIF3 self) -> itkMatrixD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterVIF3VIF3 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterVIF3VIF3 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterVIF3VIF3 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterVIF3VIF3 self, itkImageBase3 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterVIF3VIF3 self) -> itkImageBase3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterVIF3VIF3 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterVIF3VIF3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterVIF3VIF3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterVIF3VIF3 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVIF3VIF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterVIF3VIF3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVIF3VIF3

        Create a new object of the class itkResampleImageFilterVIF3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVIF3VIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVIF3VIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterVIF3VIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterVIF3VIF3.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_Clone, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetTransformInput, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetTransform, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetTransformInput, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetTransform, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetInterpolator, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetModifiableInterpolator, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetInterpolator, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetExtrapolator, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetModifiableExtrapolator, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetExtrapolator, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetSize, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetSize, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetDefaultPixelValue, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetDefaultPixelValue, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputSpacing, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetOutputSpacing, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputOrigin, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetOutputOrigin, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputDirection, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetOutputDirection, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputParametersFromImage, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputStartIndex, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetOutputStartIndex, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetReferenceImage, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetReferenceImage, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetUseReferenceImage, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_UseReferenceImageOn, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_UseReferenceImageOff, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetUseReferenceImage, None, itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_swigregister
itkResampleImageFilterVIF3VIF3_swigregister(itkResampleImageFilterVIF3VIF3)

def itkResampleImageFilterVIF3VIF3___New_orig__():
    """itkResampleImageFilterVIF3VIF3___New_orig__() -> itkResampleImageFilterVIF3VIF3_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3___New_orig__()

def itkResampleImageFilterVIF3VIF3_cast(obj):
    """itkResampleImageFilterVIF3VIF3_cast(itkLightObject obj) -> itkResampleImageFilterVIF3VIF3"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_cast(obj)

class itkResampleImageFilterVISS2VISS2(itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterVISS2VISS2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterVISS2VISS2 self) -> itkResampleImageFilterVISS2VISS2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterVISS2VISS2 self, itkDataObjectDecoratorTD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterVISS2VISS2 self, itkTransformD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterVISS2VISS2 self) -> itkDataObjectDecoratorTD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterVISS2VISS2 self) -> itkTransformD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterVISS2VISS2 self, itk::InterpolateImageFunction< itk::VectorImage< short,2 >,double > * _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterVISS2VISS2 self) -> itk::InterpolateImageFunction< itk::VectorImage< short,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterVISS2VISS2 self) -> itk::InterpolateImageFunction< itk::VectorImage< short,2 >,double > const
        GetInterpolator(itkResampleImageFilterVISS2VISS2 self) -> itk::InterpolateImageFunction< itk::VectorImage< short,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterVISS2VISS2 self, itk::ExtrapolateImageFunction< itk::VectorImage< short,2 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterVISS2VISS2 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< short,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterVISS2VISS2 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< short,2 >,double > const
        GetExtrapolator(itkResampleImageFilterVISS2VISS2 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< short,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterVISS2VISS2 self, itkSize2 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterVISS2VISS2 self) -> itkSize2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterVISS2VISS2 self, itkVariableLengthVectorSS _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterVISS2VISS2 self) -> itkVariableLengthVectorSS"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterVISS2VISS2 self, itkVectorD2 _arg)
        SetOutputSpacing(itkResampleImageFilterVISS2VISS2 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterVISS2VISS2 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterVISS2VISS2 self, itkPointD2 _arg)
        SetOutputOrigin(itkResampleImageFilterVISS2VISS2 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterVISS2VISS2 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterVISS2VISS2 self, itkMatrixD22 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterVISS2VISS2 self) -> itkMatrixD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterVISS2VISS2 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterVISS2VISS2 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterVISS2VISS2 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterVISS2VISS2 self, itkImageBase2 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterVISS2VISS2 self) -> itkImageBase2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterVISS2VISS2 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterVISS2VISS2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterVISS2VISS2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterVISS2VISS2 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVISS2VISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterVISS2VISS2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVISS2VISS2

        Create a new object of the class itkResampleImageFilterVISS2VISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVISS2VISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVISS2VISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterVISS2VISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterVISS2VISS2.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_Clone, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetTransformInput, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetTransform, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetTransformInput, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetTransform, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetInterpolator, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetModifiableInterpolator, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetInterpolator, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetExtrapolator, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetModifiableExtrapolator, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetExtrapolator, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetSize, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetSize, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetDefaultPixelValue, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetDefaultPixelValue, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputSpacing, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetOutputSpacing, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputOrigin, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetOutputOrigin, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputDirection, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetOutputDirection, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputParametersFromImage, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputStartIndex, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetOutputStartIndex, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetReferenceImage, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetReferenceImage, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetUseReferenceImage, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_UseReferenceImageOn, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_UseReferenceImageOff, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetUseReferenceImage, None, itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_swigregister
itkResampleImageFilterVISS2VISS2_swigregister(itkResampleImageFilterVISS2VISS2)

def itkResampleImageFilterVISS2VISS2___New_orig__():
    """itkResampleImageFilterVISS2VISS2___New_orig__() -> itkResampleImageFilterVISS2VISS2_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2___New_orig__()

def itkResampleImageFilterVISS2VISS2_cast(obj):
    """itkResampleImageFilterVISS2VISS2_cast(itkLightObject obj) -> itkResampleImageFilterVISS2VISS2"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_cast(obj)

class itkResampleImageFilterVISS3VISS3(itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterVISS3VISS3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterVISS3VISS3 self) -> itkResampleImageFilterVISS3VISS3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterVISS3VISS3 self, itkDataObjectDecoratorTD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterVISS3VISS3 self, itkTransformD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterVISS3VISS3 self) -> itkDataObjectDecoratorTD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterVISS3VISS3 self) -> itkTransformD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterVISS3VISS3 self, itk::InterpolateImageFunction< itk::VectorImage< short,3 >,double > * _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterVISS3VISS3 self) -> itk::InterpolateImageFunction< itk::VectorImage< short,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterVISS3VISS3 self) -> itk::InterpolateImageFunction< itk::VectorImage< short,3 >,double > const
        GetInterpolator(itkResampleImageFilterVISS3VISS3 self) -> itk::InterpolateImageFunction< itk::VectorImage< short,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterVISS3VISS3 self, itk::ExtrapolateImageFunction< itk::VectorImage< short,3 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterVISS3VISS3 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< short,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterVISS3VISS3 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< short,3 >,double > const
        GetExtrapolator(itkResampleImageFilterVISS3VISS3 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< short,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterVISS3VISS3 self, itkSize3 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterVISS3VISS3 self) -> itkSize3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterVISS3VISS3 self, itkVariableLengthVectorSS _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterVISS3VISS3 self) -> itkVariableLengthVectorSS"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterVISS3VISS3 self, itkVectorD3 _arg)
        SetOutputSpacing(itkResampleImageFilterVISS3VISS3 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterVISS3VISS3 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterVISS3VISS3 self, itkPointD3 _arg)
        SetOutputOrigin(itkResampleImageFilterVISS3VISS3 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterVISS3VISS3 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterVISS3VISS3 self, itkMatrixD33 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterVISS3VISS3 self) -> itkMatrixD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterVISS3VISS3 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterVISS3VISS3 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterVISS3VISS3 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterVISS3VISS3 self, itkImageBase3 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterVISS3VISS3 self) -> itkImageBase3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterVISS3VISS3 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterVISS3VISS3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterVISS3VISS3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterVISS3VISS3 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVISS3VISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterVISS3VISS3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVISS3VISS3

        Create a new object of the class itkResampleImageFilterVISS3VISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVISS3VISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVISS3VISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterVISS3VISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterVISS3VISS3.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_Clone, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetTransformInput, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetTransform, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetTransformInput, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetTransform, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetInterpolator, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetModifiableInterpolator, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetInterpolator, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetExtrapolator, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetModifiableExtrapolator, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetExtrapolator, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetSize, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetSize, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetDefaultPixelValue, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetDefaultPixelValue, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputSpacing, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetOutputSpacing, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputOrigin, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetOutputOrigin, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputDirection, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetOutputDirection, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputParametersFromImage, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputStartIndex, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetOutputStartIndex, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetReferenceImage, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetReferenceImage, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetUseReferenceImage, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_UseReferenceImageOn, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_UseReferenceImageOff, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetUseReferenceImage, None, itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_swigregister
itkResampleImageFilterVISS3VISS3_swigregister(itkResampleImageFilterVISS3VISS3)

def itkResampleImageFilterVISS3VISS3___New_orig__():
    """itkResampleImageFilterVISS3VISS3___New_orig__() -> itkResampleImageFilterVISS3VISS3_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3___New_orig__()

def itkResampleImageFilterVISS3VISS3_cast(obj):
    """itkResampleImageFilterVISS3VISS3_cast(itkLightObject obj) -> itkResampleImageFilterVISS3VISS3"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_cast(obj)

class itkResampleImageFilterVIUC2VIUC2(itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterVIUC2VIUC2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterVIUC2VIUC2 self) -> itkResampleImageFilterVIUC2VIUC2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterVIUC2VIUC2 self, itkDataObjectDecoratorTD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterVIUC2VIUC2 self, itkTransformD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterVIUC2VIUC2 self) -> itkDataObjectDecoratorTD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterVIUC2VIUC2 self) -> itkTransformD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterVIUC2VIUC2 self, itk::InterpolateImageFunction< itk::VectorImage< unsigned char,2 >,double > * _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterVIUC2VIUC2 self) -> itk::InterpolateImageFunction< itk::VectorImage< unsigned char,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterVIUC2VIUC2 self) -> itk::InterpolateImageFunction< itk::VectorImage< unsigned char,2 >,double > const
        GetInterpolator(itkResampleImageFilterVIUC2VIUC2 self) -> itk::InterpolateImageFunction< itk::VectorImage< unsigned char,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterVIUC2VIUC2 self, itk::ExtrapolateImageFunction< itk::VectorImage< unsigned char,2 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterVIUC2VIUC2 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< unsigned char,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterVIUC2VIUC2 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< unsigned char,2 >,double > const
        GetExtrapolator(itkResampleImageFilterVIUC2VIUC2 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< unsigned char,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterVIUC2VIUC2 self, itkSize2 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterVIUC2VIUC2 self) -> itkSize2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterVIUC2VIUC2 self, itkVariableLengthVectorUC _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterVIUC2VIUC2 self) -> itkVariableLengthVectorUC"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterVIUC2VIUC2 self, itkVectorD2 _arg)
        SetOutputSpacing(itkResampleImageFilterVIUC2VIUC2 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterVIUC2VIUC2 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterVIUC2VIUC2 self, itkPointD2 _arg)
        SetOutputOrigin(itkResampleImageFilterVIUC2VIUC2 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterVIUC2VIUC2 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterVIUC2VIUC2 self, itkMatrixD22 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterVIUC2VIUC2 self) -> itkMatrixD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterVIUC2VIUC2 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterVIUC2VIUC2 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterVIUC2VIUC2 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterVIUC2VIUC2 self, itkImageBase2 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterVIUC2VIUC2 self) -> itkImageBase2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterVIUC2VIUC2 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterVIUC2VIUC2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterVIUC2VIUC2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterVIUC2VIUC2 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVIUC2VIUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterVIUC2VIUC2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVIUC2VIUC2

        Create a new object of the class itkResampleImageFilterVIUC2VIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVIUC2VIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVIUC2VIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterVIUC2VIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterVIUC2VIUC2.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_Clone, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetTransformInput, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetTransform, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetTransformInput, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetTransform, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetInterpolator, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetModifiableInterpolator, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetInterpolator, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetExtrapolator, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetModifiableExtrapolator, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetExtrapolator, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetSize, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetSize, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetDefaultPixelValue, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetDefaultPixelValue, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputSpacing, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetOutputSpacing, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputOrigin, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetOutputOrigin, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputDirection, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetOutputDirection, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputParametersFromImage, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputStartIndex, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetOutputStartIndex, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetReferenceImage, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetReferenceImage, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetUseReferenceImage, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_UseReferenceImageOn, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_UseReferenceImageOff, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetUseReferenceImage, None, itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_swigregister
itkResampleImageFilterVIUC2VIUC2_swigregister(itkResampleImageFilterVIUC2VIUC2)

def itkResampleImageFilterVIUC2VIUC2___New_orig__():
    """itkResampleImageFilterVIUC2VIUC2___New_orig__() -> itkResampleImageFilterVIUC2VIUC2_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2___New_orig__()

def itkResampleImageFilterVIUC2VIUC2_cast(obj):
    """itkResampleImageFilterVIUC2VIUC2_cast(itkLightObject obj) -> itkResampleImageFilterVIUC2VIUC2"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_cast(obj)

class itkResampleImageFilterVIUC3VIUC3(itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterVIUC3VIUC3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterVIUC3VIUC3 self) -> itkResampleImageFilterVIUC3VIUC3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterVIUC3VIUC3 self, itkDataObjectDecoratorTD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterVIUC3VIUC3 self, itkTransformD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterVIUC3VIUC3 self) -> itkDataObjectDecoratorTD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterVIUC3VIUC3 self) -> itkTransformD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterVIUC3VIUC3 self, itk::InterpolateImageFunction< itk::VectorImage< unsigned char,3 >,double > * _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterVIUC3VIUC3 self) -> itk::InterpolateImageFunction< itk::VectorImage< unsigned char,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterVIUC3VIUC3 self) -> itk::InterpolateImageFunction< itk::VectorImage< unsigned char,3 >,double > const
        GetInterpolator(itkResampleImageFilterVIUC3VIUC3 self) -> itk::InterpolateImageFunction< itk::VectorImage< unsigned char,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterVIUC3VIUC3 self, itk::ExtrapolateImageFunction< itk::VectorImage< unsigned char,3 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterVIUC3VIUC3 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< unsigned char,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterVIUC3VIUC3 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< unsigned char,3 >,double > const
        GetExtrapolator(itkResampleImageFilterVIUC3VIUC3 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< unsigned char,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterVIUC3VIUC3 self, itkSize3 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterVIUC3VIUC3 self) -> itkSize3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterVIUC3VIUC3 self, itkVariableLengthVectorUC _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterVIUC3VIUC3 self) -> itkVariableLengthVectorUC"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterVIUC3VIUC3 self, itkVectorD3 _arg)
        SetOutputSpacing(itkResampleImageFilterVIUC3VIUC3 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterVIUC3VIUC3 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterVIUC3VIUC3 self, itkPointD3 _arg)
        SetOutputOrigin(itkResampleImageFilterVIUC3VIUC3 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterVIUC3VIUC3 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterVIUC3VIUC3 self, itkMatrixD33 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterVIUC3VIUC3 self) -> itkMatrixD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterVIUC3VIUC3 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterVIUC3VIUC3 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterVIUC3VIUC3 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterVIUC3VIUC3 self, itkImageBase3 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterVIUC3VIUC3 self) -> itkImageBase3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterVIUC3VIUC3 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterVIUC3VIUC3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterVIUC3VIUC3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterVIUC3VIUC3 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVIUC3VIUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterVIUC3VIUC3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVIUC3VIUC3

        Create a new object of the class itkResampleImageFilterVIUC3VIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVIUC3VIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVIUC3VIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterVIUC3VIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterVIUC3VIUC3.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_Clone, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetTransformInput, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetTransform, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetTransformInput, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetTransform, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetInterpolator, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetModifiableInterpolator, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetInterpolator, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetExtrapolator, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetModifiableExtrapolator, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetExtrapolator, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetSize, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetSize, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetDefaultPixelValue, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetDefaultPixelValue, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputSpacing, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetOutputSpacing, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputOrigin, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetOutputOrigin, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputDirection, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetOutputDirection, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputParametersFromImage, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputStartIndex, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetOutputStartIndex, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetReferenceImage, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetReferenceImage, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetUseReferenceImage, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_UseReferenceImageOn, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_UseReferenceImageOff, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetUseReferenceImage, None, itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_swigregister
itkResampleImageFilterVIUC3VIUC3_swigregister(itkResampleImageFilterVIUC3VIUC3)

def itkResampleImageFilterVIUC3VIUC3___New_orig__():
    """itkResampleImageFilterVIUC3VIUC3___New_orig__() -> itkResampleImageFilterVIUC3VIUC3_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3___New_orig__()

def itkResampleImageFilterVIUC3VIUC3_cast(obj):
    """itkResampleImageFilterVIUC3VIUC3_cast(itkLightObject obj) -> itkResampleImageFilterVIUC3VIUC3"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_cast(obj)

class itkResampleImageFilterVIUS2VIUS2(itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterVIUS2VIUS2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterVIUS2VIUS2 self) -> itkResampleImageFilterVIUS2VIUS2_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterVIUS2VIUS2 self, itkDataObjectDecoratorTD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterVIUS2VIUS2 self, itkTransformD22 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterVIUS2VIUS2 self) -> itkDataObjectDecoratorTD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterVIUS2VIUS2 self) -> itkTransformD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterVIUS2VIUS2 self, itk::InterpolateImageFunction< itk::VectorImage< unsigned short,2 >,double > * _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterVIUS2VIUS2 self) -> itk::InterpolateImageFunction< itk::VectorImage< unsigned short,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterVIUS2VIUS2 self) -> itk::InterpolateImageFunction< itk::VectorImage< unsigned short,2 >,double > const
        GetInterpolator(itkResampleImageFilterVIUS2VIUS2 self) -> itk::InterpolateImageFunction< itk::VectorImage< unsigned short,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterVIUS2VIUS2 self, itk::ExtrapolateImageFunction< itk::VectorImage< unsigned short,2 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterVIUS2VIUS2 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< unsigned short,2 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterVIUS2VIUS2 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< unsigned short,2 >,double > const
        GetExtrapolator(itkResampleImageFilterVIUS2VIUS2 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< unsigned short,2 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterVIUS2VIUS2 self, itkSize2 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterVIUS2VIUS2 self) -> itkSize2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterVIUS2VIUS2 self, itkVariableLengthVectorUS _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterVIUS2VIUS2 self) -> itkVariableLengthVectorUS"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterVIUS2VIUS2 self, itkVectorD2 _arg)
        SetOutputSpacing(itkResampleImageFilterVIUS2VIUS2 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterVIUS2VIUS2 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterVIUS2VIUS2 self, itkPointD2 _arg)
        SetOutputOrigin(itkResampleImageFilterVIUS2VIUS2 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterVIUS2VIUS2 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterVIUS2VIUS2 self, itkMatrixD22 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterVIUS2VIUS2 self) -> itkMatrixD22"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterVIUS2VIUS2 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterVIUS2VIUS2 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterVIUS2VIUS2 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterVIUS2VIUS2 self, itkImageBase2 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterVIUS2VIUS2 self) -> itkImageBase2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterVIUS2VIUS2 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterVIUS2VIUS2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterVIUS2VIUS2 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterVIUS2VIUS2 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVIUS2VIUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterVIUS2VIUS2"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVIUS2VIUS2

        Create a new object of the class itkResampleImageFilterVIUS2VIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVIUS2VIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVIUS2VIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterVIUS2VIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterVIUS2VIUS2.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_Clone, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetTransformInput, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetTransform, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetTransformInput, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetTransform, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetInterpolator, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetModifiableInterpolator, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetInterpolator, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetExtrapolator, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetModifiableExtrapolator, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetExtrapolator, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetSize, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetSize, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetDefaultPixelValue, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetDefaultPixelValue, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputSpacing, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetOutputSpacing, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputOrigin, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetOutputOrigin, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputDirection, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetOutputDirection, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputParametersFromImage, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputStartIndex, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetOutputStartIndex, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetReferenceImage, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetReferenceImage, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetUseReferenceImage, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_UseReferenceImageOn, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_UseReferenceImageOff, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetUseReferenceImage, None, itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_swigregister
itkResampleImageFilterVIUS2VIUS2_swigregister(itkResampleImageFilterVIUS2VIUS2)

def itkResampleImageFilterVIUS2VIUS2___New_orig__():
    """itkResampleImageFilterVIUS2VIUS2___New_orig__() -> itkResampleImageFilterVIUS2VIUS2_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2___New_orig__()

def itkResampleImageFilterVIUS2VIUS2_cast(obj):
    """itkResampleImageFilterVIUS2VIUS2_cast(itkLightObject obj) -> itkResampleImageFilterVIUS2VIUS2"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_cast(obj)

class itkResampleImageFilterVIUS3VIUS3(itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3):
    """


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe. Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/TranslationTran
    sform Translate an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/Upsampling
    Upsampling an image

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ResampleImageFil
    ter Resample (stretch or compress) an image

    C++ includes: itkResampleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkResampleImageFilterVIUS3VIUS3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkResampleImageFilterVIUS3VIUS3 self) -> itkResampleImageFilterVIUS3VIUS3_Pointer"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_Clone(self)


    def SetTransformInput(self, _arg):
        """SetTransformInput(itkResampleImageFilterVIUS3VIUS3 self, itkDataObjectDecoratorTD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetTransformInput(self, _arg)


    def SetTransform(self, _arg):
        """SetTransform(itkResampleImageFilterVIUS3VIUS3 self, itkTransformD33 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetTransform(self, _arg)


    def GetTransformInput(self):
        """GetTransformInput(itkResampleImageFilterVIUS3VIUS3 self) -> itkDataObjectDecoratorTD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetTransformInput(self)


    def GetTransform(self):
        """GetTransform(itkResampleImageFilterVIUS3VIUS3 self) -> itkTransformD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetTransform(self)


    def SetInterpolator(self, _arg):
        """
        SetInterpolator(itkResampleImageFilterVIUS3VIUS3 self, itk::InterpolateImageFunction< itk::VectorImage< unsigned short,3 >,double > * _arg)

        Get/Set the
        interpolator function. The default is
        LinearInterpolateImageFunction<InputImageType,
        TInterpolatorPrecisionType>. Some other options are
        NearestNeighborInterpolateImageFunction (useful for binary masks and
        other images with a small number of possible pixel values), and
        BSplineInterpolateImageFunction (which provides a higher order of
        interpolation). 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self):
        """GetModifiableInterpolator(itkResampleImageFilterVIUS3VIUS3 self) -> itk::InterpolateImageFunction< itk::VectorImage< unsigned short,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args):
        """
        GetInterpolator(itkResampleImageFilterVIUS3VIUS3 self) -> itk::InterpolateImageFunction< itk::VectorImage< unsigned short,3 >,double > const
        GetInterpolator(itkResampleImageFilterVIUS3VIUS3 self) -> itk::InterpolateImageFunction< itk::VectorImage< unsigned short,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetInterpolator(self, *args)


    def SetExtrapolator(self, _arg):
        """
        SetExtrapolator(itkResampleImageFilterVIUS3VIUS3 self, itk::ExtrapolateImageFunction< itk::VectorImage< unsigned short,3 >,double > * _arg)

        Get/Set the
        extrapolator function. The default behavior when sampling outside of
        the input image is to use the DefaultPixelValue. Some other options
        include NearestNeighborExtrapolateImageFunction. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetExtrapolator(self, _arg)


    def GetModifiableExtrapolator(self):
        """GetModifiableExtrapolator(itkResampleImageFilterVIUS3VIUS3 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< unsigned short,3 >,double > *"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetModifiableExtrapolator(self)


    def GetExtrapolator(self, *args):
        """
        GetExtrapolator(itkResampleImageFilterVIUS3VIUS3 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< unsigned short,3 >,double > const
        GetExtrapolator(itkResampleImageFilterVIUS3VIUS3 self) -> itk::ExtrapolateImageFunction< itk::VectorImage< unsigned short,3 >,double > *
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetExtrapolator(self, *args)


    def SetSize(self, _arg):
        """
        SetSize(itkResampleImageFilterVIUS3VIUS3 self, itkSize3 _arg)

        Get/Set the size of the
        output image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetSize(self, _arg)


    def GetSize(self):
        """GetSize(itkResampleImageFilterVIUS3VIUS3 self) -> itkSize3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetSize(self)


    def SetDefaultPixelValue(self, _arg):
        """
        SetDefaultPixelValue(itkResampleImageFilterVIUS3VIUS3 self, itkVariableLengthVectorUS _arg)

        Get/Set the
        pixel value when a transformed pixel is outside of the image. The
        default default pixel value is 0. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetDefaultPixelValue(self, _arg)


    def GetDefaultPixelValue(self):
        """GetDefaultPixelValue(itkResampleImageFilterVIUS3VIUS3 self) -> itkVariableLengthVectorUS"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetDefaultPixelValue(self)


    def SetOutputSpacing(self, *args):
        """
        SetOutputSpacing(itkResampleImageFilterVIUS3VIUS3 self, itkVectorD3 _arg)
        SetOutputSpacing(itkResampleImageFilterVIUS3VIUS3 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self):
        """
        GetOutputSpacing(itkResampleImageFilterVIUS3VIUS3 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args):
        """
        SetOutputOrigin(itkResampleImageFilterVIUS3VIUS3 self, itkPointD3 _arg)
        SetOutputOrigin(itkResampleImageFilterVIUS3VIUS3 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self):
        """
        GetOutputOrigin(itkResampleImageFilterVIUS3VIUS3 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg):
        """
        SetOutputDirection(itkResampleImageFilterVIUS3VIUS3 self, itkMatrixD33 _arg)

        Set the output
        direciton cosine matrix. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputDirection(self, _arg)


    def GetOutputDirection(self):
        """GetOutputDirection(itkResampleImageFilterVIUS3VIUS3 self) -> itkMatrixD33"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image):
        """
        SetOutputParametersFromImage(itkResampleImageFilterVIUS3VIUS3 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg):
        """
        SetOutputStartIndex(itkResampleImageFilterVIUS3VIUS3 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self):
        """
        GetOutputStartIndex(itkResampleImageFilterVIUS3VIUS3 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetOutputStartIndex(self)


    def SetReferenceImage(self, _arg):
        """SetReferenceImage(itkResampleImageFilterVIUS3VIUS3 self, itkImageBase3 _arg)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetReferenceImage(self, _arg)


    def GetReferenceImage(self):
        """GetReferenceImage(itkResampleImageFilterVIUS3VIUS3 self) -> itkImageBase3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetReferenceImage(self)


    def SetUseReferenceImage(self, _arg):
        """
        SetUseReferenceImage(itkResampleImageFilterVIUS3VIUS3 self, bool const _arg)

        Turn on/off
        whether a specified reference image should be used to define the
        output information. 
        """
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetUseReferenceImage(self, _arg)


    def UseReferenceImageOn(self):
        """UseReferenceImageOn(itkResampleImageFilterVIUS3VIUS3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_UseReferenceImageOn(self)


    def UseReferenceImageOff(self):
        """UseReferenceImageOff(itkResampleImageFilterVIUS3VIUS3 self)"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_UseReferenceImageOff(self)


    def GetUseReferenceImage(self):
        """GetUseReferenceImage(itkResampleImageFilterVIUS3VIUS3 self) -> bool"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetUseReferenceImage(self)

    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVIUS3VIUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkResampleImageFilterVIUS3VIUS3"""
        return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVIUS3VIUS3

        Create a new object of the class itkResampleImageFilterVIUS3VIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVIUS3VIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVIUS3VIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkResampleImageFilterVIUS3VIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkResampleImageFilterVIUS3VIUS3.Clone = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_Clone, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.SetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetTransformInput, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.SetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetTransform, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.GetTransformInput = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetTransformInput, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.GetTransform = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetTransform, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.SetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetInterpolator, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.GetModifiableInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetModifiableInterpolator, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.GetInterpolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetInterpolator, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.SetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetExtrapolator, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.GetModifiableExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetModifiableExtrapolator, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.GetExtrapolator = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetExtrapolator, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.SetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetSize, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.GetSize = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetSize, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.SetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetDefaultPixelValue, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.GetDefaultPixelValue = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetDefaultPixelValue, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.SetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputSpacing, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.GetOutputSpacing = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetOutputSpacing, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.SetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputOrigin, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.GetOutputOrigin = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetOutputOrigin, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.SetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputDirection, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.GetOutputDirection = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetOutputDirection, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.SetOutputParametersFromImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputParametersFromImage, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.SetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputStartIndex, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.GetOutputStartIndex = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetOutputStartIndex, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.SetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetReferenceImage, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.GetReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetReferenceImage, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.SetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetUseReferenceImage, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.UseReferenceImageOn = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_UseReferenceImageOn, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.UseReferenceImageOff = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_UseReferenceImageOff, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3.GetUseReferenceImage = new_instancemethod(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetUseReferenceImage, None, itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3_swigregister = _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_swigregister
itkResampleImageFilterVIUS3VIUS3_swigregister(itkResampleImageFilterVIUS3VIUS3)

def itkResampleImageFilterVIUS3VIUS3___New_orig__():
    """itkResampleImageFilterVIUS3VIUS3___New_orig__() -> itkResampleImageFilterVIUS3VIUS3_Pointer"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3___New_orig__()

def itkResampleImageFilterVIUS3VIUS3_cast(obj):
    """itkResampleImageFilterVIUS3VIUS3_cast(itkLightObject obj) -> itkResampleImageFilterVIUS3VIUS3"""
    return _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_cast(obj)


def resample_image_filter(*args, **kwargs):
    """Procedural interface for ResampleImageFilter"""
    import itk
    instance = itk.ResampleImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def resample_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ResampleImageFilter, itkTemplate.itkTemplate):
        resample_image_filter.__doc__ = itk.ResampleImageFilter.values()[0].__doc__
    else:
        resample_image_filter.__doc__ = itk.ResampleImageFilter.__doc__




