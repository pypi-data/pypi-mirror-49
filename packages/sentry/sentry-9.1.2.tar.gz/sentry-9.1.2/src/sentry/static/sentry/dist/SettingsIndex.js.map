{"version":3,"sources":["webpack:///./app/views/settings/settingsIndex.jsx"],"names":["LINKS","flexCenter","css","SettingsIndex","prevProps","organization","this","props","access","fetchOrganizationDetails","slug","setActive","loadProjects","user","ConfigStore","get","isOnPremise","isSuperuser","organizationSettingsUrl","concat","supportLinkProps","href","to","supportText","t","react__WEBPACK_IMPORTED_MODULE_11___default","a","createElement","react_document_title__WEBPACK_IMPORTED_MODULE_9___default","title","app_views_settings_components_settingsLayout__WEBPACK_IMPORTED_MODULE_24__","grid_emotion__WEBPACK_IMPORTED_MODULE_8__","mx","wrap","w","px","app_components_panels__WEBPACK_IMPORTED_MODULE_21__","HomePanelHeader","HomeLinkIcon","AvatarContainer","app_components_avatar__WEBPACK_IMPORTED_MODULE_14__","size","HomePanelBody","HomeLink","app_components_loadingIndicator__WEBPACK_IMPORTED_MODULE_20__","overlay","hideSpinner","HomeIcon","color","app_components_inlineSvg__WEBPACK_IMPORTED_MODULE_18__","src","OrganizationName","className","Object","emotion__WEBPACK_IMPORTED_MODULE_2__","lineHeight","ExternalHomeLink","SupportLinkComponent","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","React","Component","propTypes","SentryTypes","Organization","withLatestContext","styled","PanelHeader","target","PanelBody","p","theme","gray1","getHomeIconMargin","Link","purple","purpleDark","ExternalLink","_ref","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","PropTypes","bool","string","overflowEllipsis"],"mappings":"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","file":"SettingsIndex.js","sourcesContent":["import {Flex, Box} from 'grid-emotion';\nimport DocumentTitle from 'react-document-title';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled, {css} from 'react-emotion';\n\nimport {t} from 'app/locale';\nimport Avatar from 'app/components/avatar';\nimport ConfigStore from 'app/stores/configStore';\nimport ExternalLink from 'app/components/externalLink';\nimport {fetchOrganizationDetails} from 'app/actionCreators/organizations';\nimport InlineSvg from 'app/components/inlineSvg';\nimport Link from 'app/components/link';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport SentryTypes from 'app/sentryTypes';\nimport SettingsLayout from 'app/views/settings/components/settingsLayout';\nimport withLatestContext from 'app/utils/withLatestContext';\n\nconst LINKS = {\n  DOCUMENTATION: 'https://docs.sentry.io/',\n  DOCUMENTATION_PLATFORMS: 'https://docs.sentry.io/clients/',\n  DOCUMENATATION_QUICKSTART: 'https://docs.sentry.io/quickstart/',\n  DOCUMENTATION_CLI: 'https://docs.sentry.io/learn/cli/',\n  DOCUMENTATION_API: 'https://docs.sentry.io/hosted/api/',\n  API: '/settings/account/api/',\n  API_APPLICATIONS: '/settings/account/api/applications/',\n  MANAGE: '/manage/',\n  FORUM: 'https://forum.sentry.io/',\n  GITHUB_ISSUES: 'https://github.com/getsentry/sentry/issues',\n  SERVICE_STATUS: 'https://status.sentry.io/',\n};\n\nconst HOME_ICON_SIZE = 76;\n\nconst flexCenter = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nclass SettingsIndex extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  componentDidUpdate(prevProps) {\n    const {organization} = this.props;\n    if (prevProps.organization === organization) {\n      return;\n    }\n\n    // if there is no org in context, SidebarDropdown uses an org from `withLatestContext`\n    // (which queries the org index endpoint instead of org details)\n    // and does not have `access` info\n    if (organization && typeof organization.access === 'undefined') {\n      fetchOrganizationDetails(organization.slug, {\n        setActive: true,\n        loadProjects: true,\n      });\n    }\n  }\n\n  render() {\n    const {organization} = this.props;\n    const user = ConfigStore.get('user');\n    const isOnPremise = ConfigStore.get('isOnPremise');\n    const isSuperuser = user.isSuperuser;\n\n    const organizationSettingsUrl =\n      (organization && `/settings/${organization.slug}/`) || '';\n\n    const supportLinkProps = {\n      isOnPremise,\n      href: LINKS.FORUM,\n      to: `${organizationSettingsUrl}support`,\n    };\n    const supportText = isOnPremise ? t('Community Forums') : t('Contact Support');\n\n    return (\n      <DocumentTitle title={organization ? `${organization.slug} Settings` : 'Settings'}>\n        <SettingsLayout {...this.props}>\n          <Flex mx={-2} wrap>\n            <Box w={1 / 3} px={2}>\n              <Panel>\n                <HomePanelHeader>\n                  <HomeLinkIcon to=\"/settings/account/\">\n                    <AvatarContainer>\n                      <Avatar user={user} size={HOME_ICON_SIZE} />\n                    </AvatarContainer>\n                    {t('My Account')}\n                  </HomeLinkIcon>\n                </HomePanelHeader>\n\n                <HomePanelBody>\n                  <h3>{t('Quick links')}:</h3>\n                  <ul>\n                    <li>\n                      <HomeLink to=\"/settings/account/security/\">\n                        {t('Change my password')}\n                      </HomeLink>\n                    </li>\n                    <li>\n                      <HomeLink to=\"/settings/account/notifications/\">\n                        {t('Notification Preferences')}\n                      </HomeLink>\n                    </li>\n                    <li>\n                      <HomeLink to=\"/settings/account/\">{t('Change my avatar')}</HomeLink>\n                    </li>\n                  </ul>\n                </HomePanelBody>\n              </Panel>\n            </Box>\n\n            <Box w={1 / 3} px={2}>\n              {/* if admin */}\n              <Panel>\n                {!organization && <LoadingIndicator overlay hideSpinner />}\n                <HomePanelHeader>\n                  <HomeLinkIcon to={organizationSettingsUrl}>\n                    {organization ? (\n                      <AvatarContainer>\n                        <Avatar organization={organization} size={HOME_ICON_SIZE} />\n                      </AvatarContainer>\n                    ) : (\n                      <HomeIcon color=\"green\">\n                        <InlineSvg src=\"icon-stack\" size=\"44px\" />\n                      </HomeIcon>\n                    )}\n                    <OrganizationName css={{lineHeight: '1.1em'}}>\n                      {organization ? organization.slug : t('No Organization')}\n                    </OrganizationName>\n                  </HomeLinkIcon>\n                </HomePanelHeader>\n                <HomePanelBody>\n                  <h3>{t('Quick links')}:</h3>\n                  <ul>\n                    <li>\n                      <HomeLink to={`${organizationSettingsUrl}projects/`}>\n                        {t('Projects')}\n                      </HomeLink>\n                    </li>\n                    <li>\n                      <HomeLink to={`${organizationSettingsUrl}teams/`}>\n                        {t('Teams')}\n                      </HomeLink>\n                    </li>\n                    <li>\n                      <HomeLink to={`${organizationSettingsUrl}members/`}>\n                        {t('Members')}\n                      </HomeLink>\n                    </li>\n                  </ul>\n                </HomePanelBody>\n              </Panel>\n            </Box>\n\n            <Box w={1 / 3} px={2}>\n              <Panel>\n                <HomePanelHeader>\n                  <ExternalHomeLink css={flexCenter} href={LINKS.DOCUMENTATION}>\n                    <HomeIcon color=\"orange\">\n                      <InlineSvg src=\"icon-docs\" size=\"48px\" />\n                    </HomeIcon>\n                  </ExternalHomeLink>\n                  <ExternalHomeLink href={LINKS.DOCUMENTATION}>\n                    {t('Documentation')}\n                  </ExternalHomeLink>\n                </HomePanelHeader>\n\n                <HomePanelBody>\n                  <h3>{t('Quick links')}:</h3>\n                  <ul>\n                    <li>\n                      <ExternalHomeLink href={LINKS.DOCUMENATATION_QUICKSTART}>\n                        {t('Quickstart Guide')}\n                      </ExternalHomeLink>\n                    </li>\n                    <li>\n                      <ExternalHomeLink href={LINKS.DOCUMENTATION_PLATFORMS}>\n                        {t('Platforms & Frameworks')}\n                      </ExternalHomeLink>\n                    </li>\n                    <li>\n                      <ExternalHomeLink href={LINKS.DOCUMENTATION_CLI}>\n                        {t('Sentry CLI')}\n                      </ExternalHomeLink>\n                    </li>\n                  </ul>\n                </HomePanelBody>\n              </Panel>\n            </Box>\n\n            <Box w={1 / 3} px={2}>\n              <Panel>\n                <HomePanelHeader>\n                  <SupportLinkComponent css={flexCenter} {...supportLinkProps}>\n                    <HomeIcon color=\"purple\">\n                      <InlineSvg src=\"icon-support\" size=\"48px\" />\n                    </HomeIcon>\n                    {t('Support')}\n                  </SupportLinkComponent>\n                </HomePanelHeader>\n\n                <HomePanelBody>\n                  <h3>{t('Quick links')}:</h3>\n                  <ul>\n                    <li>\n                      <SupportLinkComponent {...supportLinkProps}>\n                        {supportText}\n                      </SupportLinkComponent>\n                    </li>\n                    <li>\n                      <ExternalHomeLink href={LINKS.GITHUB_ISSUES}>\n                        {t('Sentry on GitHub')}\n                      </ExternalHomeLink>\n                    </li>\n                    <li>\n                      <ExternalHomeLink href={LINKS.SERVICE_STATUS}>\n                        {t('Service Status')}\n                      </ExternalHomeLink>\n                    </li>\n                  </ul>\n                </HomePanelBody>\n              </Panel>\n            </Box>\n\n            <Box w={1 / 3} px={2}>\n              <Panel>\n                <HomePanelHeader>\n                  <HomeLinkIcon to={LINKS.API}>\n                    <HomeIcon>\n                      <InlineSvg src=\"icon-lock\" size=\"48px\" />\n                    </HomeIcon>\n                    {t('API Keys')}\n                  </HomeLinkIcon>\n                </HomePanelHeader>\n\n                <HomePanelBody>\n                  <h3>{t('Quick links')}:</h3>\n                  <ul>\n                    <li>\n                      <HomeLink to={LINKS.API}>{t('Auth Tokens')}</HomeLink>\n                    </li>\n                    <li>\n                      <HomeLink to={LINKS.API_APPLICATIONS}>{t('Applications')}</HomeLink>\n                    </li>\n                    <li>\n                      <ExternalHomeLink href={LINKS.DOCUMENTATION_API}>\n                        {t('Documentation')}\n                      </ExternalHomeLink>\n                    </li>\n                  </ul>\n                </HomePanelBody>\n              </Panel>\n            </Box>\n\n            {isSuperuser && (\n              <Box w={1 / 3} px={2}>\n                <Panel>\n                  <HomePanelHeader>\n                    <HomeLinkIcon href={LINKS.MANAGE}>\n                      <HomeIcon color=\"red\">\n                        <InlineSvg src=\"icon-laptop\" size=\"48px\" />\n                      </HomeIcon>\n                      {t('Server Admin')}\n                    </HomeLinkIcon>\n                  </HomePanelHeader>\n                  <HomePanelBody>\n                    <h3>{t('Quick links')}:</h3>\n                    <ul>\n                      <li />\n                      <li />\n                      <li />\n                    </ul>\n                  </HomePanelBody>\n                </Panel>\n              </Box>\n            )}\n          </Flex>\n        </SettingsLayout>\n      </DocumentTitle>\n    );\n  }\n}\n\nexport {SettingsIndex};\nexport default withLatestContext(SettingsIndex);\n\nconst HomePanelHeader = styled(PanelHeader)`\n  background: #fff;\n  flex-direction: column;\n  text-align: center;\n  justify-content: center;\n  font-size: 18px;\n  text-transform: unset;\n  padding: 35px 30px;\n`;\n\nconst HomePanelBody = styled(PanelBody)`\n  padding: 30px;\n\n  h3 {\n    font-size: 14px;\n  }\n\n  ul {\n    margin: 0;\n    li {\n      line-height: 1.6;\n      /* Bullet color */\n      color: ${p => p.theme.gray1};\n    }\n  }\n`;\n\nconst getHomeIconMargin = css`\n  margin-bottom: 20px;\n`;\n\nconst HomeIcon = styled.div`\n  background: ${p => p.theme[p.color || 'gray2']};\n  color: #fff;\n  width: ${HOME_ICON_SIZE}px;\n  height: ${HOME_ICON_SIZE}px;\n  border-radius: ${HOME_ICON_SIZE}px;\n  ${getHomeIconMargin} > svg {\n    margin-top: 14px;\n  }\n`;\n\nconst HomeLink = styled(Link)`\n  color: ${p => p.theme.purple};\n\n  &:hover {\n    color: ${p => p.theme.purpleDark};\n  }\n`;\n\nconst HomeLinkIcon = styled(HomeLink)`\n  overflow: hidden;\n  width: 100%;\n  ${flexCenter};\n`;\n\nconst ExternalHomeLink = styled(ExternalLink)`\n  color: ${p => p.theme.purple};\n\n  &:hover {\n    color: ${p => p.theme.purpleDark};\n  }\n`;\n\nconst SupportLinkComponent = ({isOnPremise, href, to, ...props}) => {\n  if (isOnPremise) {\n    return <ExternalHomeLink href={href} {...props} />;\n  }\n  return <HomeLink to={to} {...props} />;\n};\nSupportLinkComponent.propTypes = {\n  isOnPremise: PropTypes.bool,\n  href: PropTypes.string,\n  to: PropTypes.string,\n};\n\nconst AvatarContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst OrganizationName = styled('div')`\n  line-height: 1.1em;\n\n  ${overflowEllipsis};\n`;\n"],"sourceRoot":""}