Metadata-Version: 2.1
Name: gitops
Version: 0.1.0
Summary: UNKNOWN
Home-page: https://gitlab.org/uptick/gitops.git
Author: Uptick
Author-email: UNKNOWN
License: BSD
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Requires-Dist: tabulate
Requires-Dist: boto3
Requires-Dist: boto
Requires-Dist: invoke
Requires-Dist: humanize

# GitOps

Continuous delivery for your cluster.

## Overview

Using CI/CD for applications is a wonderful technique to ease the pain of
DevOps, wouldn't it be nice to apply the same workflow to cluster provisioning?

GitOps integrates a multi-tenanted cluster with a GitHub repository. Changes
made to the repository are sent to GitOps running on the cluster, which then
provisions the calculated changes.

Currently Kubernetes/Helm is the only supported cluster interface. All changes
to the cluster are performed as applications of Helm charts.

## Installation

TODO: Set up the repository.

TODO: Install GitOps. Include details on domain name?

TODO: Kubernetes cluster and Helm.

TODO: Secrets (kubectl, GitHub, etc).

## Repository structure

TODO

## Roadmap

 * Handle failure on initial application deployment.

 * Better error reporting on failures.

 * Forced redeployment interface.

## Contributing

TODO


