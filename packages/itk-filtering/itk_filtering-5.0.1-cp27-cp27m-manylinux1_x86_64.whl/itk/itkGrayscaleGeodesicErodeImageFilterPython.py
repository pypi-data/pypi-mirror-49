# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkGrayscaleGeodesicErodeImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkGrayscaleGeodesicErodeImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkGrayscaleGeodesicErodeImageFilterPython
            return _itkGrayscaleGeodesicErodeImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkGrayscaleGeodesicErodeImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkGrayscaleGeodesicErodeImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkGrayscaleGeodesicErodeImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import pyBasePython
import ITKCommonBasePython
import itkImagePython
import stdcomplexPython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkGrayscaleGeodesicErodeImageFilterIF3IF3_New():
  return itkGrayscaleGeodesicErodeImageFilterIF3IF3.New()


def itkGrayscaleGeodesicErodeImageFilterIF2IF2_New():
  return itkGrayscaleGeodesicErodeImageFilterIF2IF2.New()


def itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_New():
  return itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.New()


def itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_New():
  return itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.New()


def itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_New():
  return itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.New()


def itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_New():
  return itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.New()


def itkGrayscaleGeodesicErodeImageFilterISS3ISS3_New():
  return itkGrayscaleGeodesicErodeImageFilterISS3ISS3.New()


def itkGrayscaleGeodesicErodeImageFilterISS2ISS2_New():
  return itkGrayscaleGeodesicErodeImageFilterISS2ISS2.New()

class itkGrayscaleGeodesicErodeImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """


    geodesic gray scale erosion of an image

    Geodesic erosion operates on a "marker" image and a "mask" image.
    The marker image is eroded using an elementary structuring element
    (neighborhood of radius one using only the face connected neighbors).
    The resulting image is then compared with the mask image. The output
    image is the pixelwise maximum of the eroded marker image and the mask
    image.

    Geodesic erosion is run either one iteration or until convergence. In
    the convergence case, the filter is equivalent to "reconstruction by
    erosion". This filter is implemented to handle both scenarios. The
    one iteration case is multi-threaded. The convergence case is
    delegated to another instance of the same filter (but configured to
    run a single iteration).

    The marker image must be greater than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    A noniterative version of this algorithm can be found in the
    ReconstructionByErosionImageFilter. This noniterative solution is much
    faster than the implementation provided here. All ITK filters that
    previously used GrayscaleGeodesicErodeImageFilter as part of their
    implementation have been converted to use the
    ReconstructionByErosionImageFilter. The
    GrayscaleGeodesicErodeImageFilter is maintained for backward
    compatibility.

    See:  MorphologyImageFilter, GrayscaleErodeImageFilter,
    GrayscaleFunctionErodeImageFilter, BinaryErodeImageFilter,
    ReconstructionByErosionImageFilter

    C++ includes: itkGrayscaleGeodesicErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkGrayscaleGeodesicErodeImageFilterIF2IF2 self) -> itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_Clone(self)


    def SetMarkerImage(self, arg0):
        """
        SetMarkerImage(itkGrayscaleGeodesicErodeImageFilterIF2IF2 self, itkImageF2 arg0)

        Set/Get the marker
        image. The marker image must be pixelwise greater than or equal to the
        mask image. The marker image the image that is eroded by this filter.

        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_SetMarkerImage(self, arg0)


    def GetMarkerImage(self):
        """GetMarkerImage(itkGrayscaleGeodesicErodeImageFilterIF2IF2 self) -> itkImageF2"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_GetMarkerImage(self)


    def SetMaskImage(self, arg0):
        """
        SetMaskImage(itkGrayscaleGeodesicErodeImageFilterIF2IF2 self, itkImageF2 arg0)

        Set/Get the mask
        image. The mask image is used to "mask" the eroded marker image. The
        mask operation is a pixelwise maximum. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_SetMaskImage(self, arg0)


    def GetMaskImage(self):
        """GetMaskImage(itkGrayscaleGeodesicErodeImageFilterIF2IF2 self) -> itkImageF2"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_GetMaskImage(self)


    def SetRunOneIteration(self, _arg):
        """
        SetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterIF2IF2 self, bool const _arg)

        Set/Get whether
        the filter should run one iteration or until convergence. When run to
        convergence, this filter is equivalent to "reconstruction by
        erosion". Default is off. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_SetRunOneIteration(self, _arg)


    def GetRunOneIteration(self):
        """GetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterIF2IF2 self) -> bool"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_GetRunOneIteration(self)


    def RunOneIterationOn(self):
        """RunOneIterationOn(itkGrayscaleGeodesicErodeImageFilterIF2IF2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_RunOneIterationOn(self)


    def RunOneIterationOff(self):
        """RunOneIterationOff(itkGrayscaleGeodesicErodeImageFilterIF2IF2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_RunOneIterationOff(self)


    def GetNumberOfIterationsUsed(self):
        """
        GetNumberOfIterationsUsed(itkGrayscaleGeodesicErodeImageFilterIF2IF2 self) -> unsigned long

        Get the
        number of iterations used to produce the current output. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_GetNumberOfIterationsUsed(self)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkGrayscaleGeodesicErodeImageFilterIF2IF2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkGrayscaleGeodesicErodeImageFilterIF2IF2 self) -> bool const &"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkGrayscaleGeodesicErodeImageFilterIF2IF2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkGrayscaleGeodesicErodeImageFilterIF2IF2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_FullyConnectedOff(self)

    SameDimensionCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_SameDimensionCheck
    InputComparableCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_InputComparableCheck
    InputConvertibleToOutputCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGrayscaleGeodesicErodeImageFilterPython.delete_itkGrayscaleGeodesicErodeImageFilterIF2IF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterIF2IF2"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGeodesicErodeImageFilterIF2IF2

        Create a new object of the class itkGrayscaleGeodesicErodeImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGeodesicErodeImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleGeodesicErodeImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleGeodesicErodeImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleGeodesicErodeImageFilterIF2IF2.Clone = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_Clone, None, itkGrayscaleGeodesicErodeImageFilterIF2IF2)
itkGrayscaleGeodesicErodeImageFilterIF2IF2.SetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_SetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterIF2IF2)
itkGrayscaleGeodesicErodeImageFilterIF2IF2.GetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_GetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterIF2IF2)
itkGrayscaleGeodesicErodeImageFilterIF2IF2.SetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_SetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterIF2IF2)
itkGrayscaleGeodesicErodeImageFilterIF2IF2.GetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_GetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterIF2IF2)
itkGrayscaleGeodesicErodeImageFilterIF2IF2.SetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_SetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterIF2IF2)
itkGrayscaleGeodesicErodeImageFilterIF2IF2.GetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_GetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterIF2IF2)
itkGrayscaleGeodesicErodeImageFilterIF2IF2.RunOneIterationOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_RunOneIterationOn, None, itkGrayscaleGeodesicErodeImageFilterIF2IF2)
itkGrayscaleGeodesicErodeImageFilterIF2IF2.RunOneIterationOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_RunOneIterationOff, None, itkGrayscaleGeodesicErodeImageFilterIF2IF2)
itkGrayscaleGeodesicErodeImageFilterIF2IF2.GetNumberOfIterationsUsed = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_GetNumberOfIterationsUsed, None, itkGrayscaleGeodesicErodeImageFilterIF2IF2)
itkGrayscaleGeodesicErodeImageFilterIF2IF2.SetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_SetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterIF2IF2)
itkGrayscaleGeodesicErodeImageFilterIF2IF2.GetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_GetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterIF2IF2)
itkGrayscaleGeodesicErodeImageFilterIF2IF2.FullyConnectedOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_FullyConnectedOn, None, itkGrayscaleGeodesicErodeImageFilterIF2IF2)
itkGrayscaleGeodesicErodeImageFilterIF2IF2.FullyConnectedOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_FullyConnectedOff, None, itkGrayscaleGeodesicErodeImageFilterIF2IF2)
itkGrayscaleGeodesicErodeImageFilterIF2IF2_swigregister = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_swigregister
itkGrayscaleGeodesicErodeImageFilterIF2IF2_swigregister(itkGrayscaleGeodesicErodeImageFilterIF2IF2)

def itkGrayscaleGeodesicErodeImageFilterIF2IF2___New_orig__():
    """itkGrayscaleGeodesicErodeImageFilterIF2IF2___New_orig__() -> itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2___New_orig__()

def itkGrayscaleGeodesicErodeImageFilterIF2IF2_cast(obj):
    """itkGrayscaleGeodesicErodeImageFilterIF2IF2_cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterIF2IF2"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF2IF2_cast(obj)

class itkGrayscaleGeodesicErodeImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """


    geodesic gray scale erosion of an image

    Geodesic erosion operates on a "marker" image and a "mask" image.
    The marker image is eroded using an elementary structuring element
    (neighborhood of radius one using only the face connected neighbors).
    The resulting image is then compared with the mask image. The output
    image is the pixelwise maximum of the eroded marker image and the mask
    image.

    Geodesic erosion is run either one iteration or until convergence. In
    the convergence case, the filter is equivalent to "reconstruction by
    erosion". This filter is implemented to handle both scenarios. The
    one iteration case is multi-threaded. The convergence case is
    delegated to another instance of the same filter (but configured to
    run a single iteration).

    The marker image must be greater than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    A noniterative version of this algorithm can be found in the
    ReconstructionByErosionImageFilter. This noniterative solution is much
    faster than the implementation provided here. All ITK filters that
    previously used GrayscaleGeodesicErodeImageFilter as part of their
    implementation have been converted to use the
    ReconstructionByErosionImageFilter. The
    GrayscaleGeodesicErodeImageFilter is maintained for backward
    compatibility.

    See:  MorphologyImageFilter, GrayscaleErodeImageFilter,
    GrayscaleFunctionErodeImageFilter, BinaryErodeImageFilter,
    ReconstructionByErosionImageFilter

    C++ includes: itkGrayscaleGeodesicErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkGrayscaleGeodesicErodeImageFilterIF3IF3 self) -> itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_Clone(self)


    def SetMarkerImage(self, arg0):
        """
        SetMarkerImage(itkGrayscaleGeodesicErodeImageFilterIF3IF3 self, itkImageF3 arg0)

        Set/Get the marker
        image. The marker image must be pixelwise greater than or equal to the
        mask image. The marker image the image that is eroded by this filter.

        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_SetMarkerImage(self, arg0)


    def GetMarkerImage(self):
        """GetMarkerImage(itkGrayscaleGeodesicErodeImageFilterIF3IF3 self) -> itkImageF3"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_GetMarkerImage(self)


    def SetMaskImage(self, arg0):
        """
        SetMaskImage(itkGrayscaleGeodesicErodeImageFilterIF3IF3 self, itkImageF3 arg0)

        Set/Get the mask
        image. The mask image is used to "mask" the eroded marker image. The
        mask operation is a pixelwise maximum. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_SetMaskImage(self, arg0)


    def GetMaskImage(self):
        """GetMaskImage(itkGrayscaleGeodesicErodeImageFilterIF3IF3 self) -> itkImageF3"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_GetMaskImage(self)


    def SetRunOneIteration(self, _arg):
        """
        SetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterIF3IF3 self, bool const _arg)

        Set/Get whether
        the filter should run one iteration or until convergence. When run to
        convergence, this filter is equivalent to "reconstruction by
        erosion". Default is off. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_SetRunOneIteration(self, _arg)


    def GetRunOneIteration(self):
        """GetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterIF3IF3 self) -> bool"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_GetRunOneIteration(self)


    def RunOneIterationOn(self):
        """RunOneIterationOn(itkGrayscaleGeodesicErodeImageFilterIF3IF3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_RunOneIterationOn(self)


    def RunOneIterationOff(self):
        """RunOneIterationOff(itkGrayscaleGeodesicErodeImageFilterIF3IF3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_RunOneIterationOff(self)


    def GetNumberOfIterationsUsed(self):
        """
        GetNumberOfIterationsUsed(itkGrayscaleGeodesicErodeImageFilterIF3IF3 self) -> unsigned long

        Get the
        number of iterations used to produce the current output. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_GetNumberOfIterationsUsed(self)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkGrayscaleGeodesicErodeImageFilterIF3IF3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkGrayscaleGeodesicErodeImageFilterIF3IF3 self) -> bool const &"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkGrayscaleGeodesicErodeImageFilterIF3IF3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkGrayscaleGeodesicErodeImageFilterIF3IF3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_FullyConnectedOff(self)

    SameDimensionCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_SameDimensionCheck
    InputComparableCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_InputComparableCheck
    InputConvertibleToOutputCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGrayscaleGeodesicErodeImageFilterPython.delete_itkGrayscaleGeodesicErodeImageFilterIF3IF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterIF3IF3"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGeodesicErodeImageFilterIF3IF3

        Create a new object of the class itkGrayscaleGeodesicErodeImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGeodesicErodeImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleGeodesicErodeImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleGeodesicErodeImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleGeodesicErodeImageFilterIF3IF3.Clone = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_Clone, None, itkGrayscaleGeodesicErodeImageFilterIF3IF3)
itkGrayscaleGeodesicErodeImageFilterIF3IF3.SetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_SetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterIF3IF3)
itkGrayscaleGeodesicErodeImageFilterIF3IF3.GetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_GetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterIF3IF3)
itkGrayscaleGeodesicErodeImageFilterIF3IF3.SetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_SetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterIF3IF3)
itkGrayscaleGeodesicErodeImageFilterIF3IF3.GetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_GetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterIF3IF3)
itkGrayscaleGeodesicErodeImageFilterIF3IF3.SetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_SetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterIF3IF3)
itkGrayscaleGeodesicErodeImageFilterIF3IF3.GetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_GetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterIF3IF3)
itkGrayscaleGeodesicErodeImageFilterIF3IF3.RunOneIterationOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_RunOneIterationOn, None, itkGrayscaleGeodesicErodeImageFilterIF3IF3)
itkGrayscaleGeodesicErodeImageFilterIF3IF3.RunOneIterationOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_RunOneIterationOff, None, itkGrayscaleGeodesicErodeImageFilterIF3IF3)
itkGrayscaleGeodesicErodeImageFilterIF3IF3.GetNumberOfIterationsUsed = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_GetNumberOfIterationsUsed, None, itkGrayscaleGeodesicErodeImageFilterIF3IF3)
itkGrayscaleGeodesicErodeImageFilterIF3IF3.SetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_SetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterIF3IF3)
itkGrayscaleGeodesicErodeImageFilterIF3IF3.GetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_GetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterIF3IF3)
itkGrayscaleGeodesicErodeImageFilterIF3IF3.FullyConnectedOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_FullyConnectedOn, None, itkGrayscaleGeodesicErodeImageFilterIF3IF3)
itkGrayscaleGeodesicErodeImageFilterIF3IF3.FullyConnectedOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_FullyConnectedOff, None, itkGrayscaleGeodesicErodeImageFilterIF3IF3)
itkGrayscaleGeodesicErodeImageFilterIF3IF3_swigregister = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_swigregister
itkGrayscaleGeodesicErodeImageFilterIF3IF3_swigregister(itkGrayscaleGeodesicErodeImageFilterIF3IF3)

def itkGrayscaleGeodesicErodeImageFilterIF3IF3___New_orig__():
    """itkGrayscaleGeodesicErodeImageFilterIF3IF3___New_orig__() -> itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3___New_orig__()

def itkGrayscaleGeodesicErodeImageFilterIF3IF3_cast(obj):
    """itkGrayscaleGeodesicErodeImageFilterIF3IF3_cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterIF3IF3"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIF3IF3_cast(obj)

class itkGrayscaleGeodesicErodeImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    geodesic gray scale erosion of an image

    Geodesic erosion operates on a "marker" image and a "mask" image.
    The marker image is eroded using an elementary structuring element
    (neighborhood of radius one using only the face connected neighbors).
    The resulting image is then compared with the mask image. The output
    image is the pixelwise maximum of the eroded marker image and the mask
    image.

    Geodesic erosion is run either one iteration or until convergence. In
    the convergence case, the filter is equivalent to "reconstruction by
    erosion". This filter is implemented to handle both scenarios. The
    one iteration case is multi-threaded. The convergence case is
    delegated to another instance of the same filter (but configured to
    run a single iteration).

    The marker image must be greater than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    A noniterative version of this algorithm can be found in the
    ReconstructionByErosionImageFilter. This noniterative solution is much
    faster than the implementation provided here. All ITK filters that
    previously used GrayscaleGeodesicErodeImageFilter as part of their
    implementation have been converted to use the
    ReconstructionByErosionImageFilter. The
    GrayscaleGeodesicErodeImageFilter is maintained for backward
    compatibility.

    See:  MorphologyImageFilter, GrayscaleErodeImageFilter,
    GrayscaleFunctionErodeImageFilter, BinaryErodeImageFilter,
    ReconstructionByErosionImageFilter

    C++ includes: itkGrayscaleGeodesicErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkGrayscaleGeodesicErodeImageFilterISS2ISS2_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkGrayscaleGeodesicErodeImageFilterISS2ISS2 self) -> itkGrayscaleGeodesicErodeImageFilterISS2ISS2_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_Clone(self)


    def SetMarkerImage(self, arg0):
        """
        SetMarkerImage(itkGrayscaleGeodesicErodeImageFilterISS2ISS2 self, itkImageSS2 arg0)

        Set/Get the marker
        image. The marker image must be pixelwise greater than or equal to the
        mask image. The marker image the image that is eroded by this filter.

        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_SetMarkerImage(self, arg0)


    def GetMarkerImage(self):
        """GetMarkerImage(itkGrayscaleGeodesicErodeImageFilterISS2ISS2 self) -> itkImageSS2"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_GetMarkerImage(self)


    def SetMaskImage(self, arg0):
        """
        SetMaskImage(itkGrayscaleGeodesicErodeImageFilterISS2ISS2 self, itkImageSS2 arg0)

        Set/Get the mask
        image. The mask image is used to "mask" the eroded marker image. The
        mask operation is a pixelwise maximum. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_SetMaskImage(self, arg0)


    def GetMaskImage(self):
        """GetMaskImage(itkGrayscaleGeodesicErodeImageFilterISS2ISS2 self) -> itkImageSS2"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_GetMaskImage(self)


    def SetRunOneIteration(self, _arg):
        """
        SetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterISS2ISS2 self, bool const _arg)

        Set/Get whether
        the filter should run one iteration or until convergence. When run to
        convergence, this filter is equivalent to "reconstruction by
        erosion". Default is off. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_SetRunOneIteration(self, _arg)


    def GetRunOneIteration(self):
        """GetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterISS2ISS2 self) -> bool"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_GetRunOneIteration(self)


    def RunOneIterationOn(self):
        """RunOneIterationOn(itkGrayscaleGeodesicErodeImageFilterISS2ISS2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_RunOneIterationOn(self)


    def RunOneIterationOff(self):
        """RunOneIterationOff(itkGrayscaleGeodesicErodeImageFilterISS2ISS2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_RunOneIterationOff(self)


    def GetNumberOfIterationsUsed(self):
        """
        GetNumberOfIterationsUsed(itkGrayscaleGeodesicErodeImageFilterISS2ISS2 self) -> unsigned long

        Get the
        number of iterations used to produce the current output. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_GetNumberOfIterationsUsed(self)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkGrayscaleGeodesicErodeImageFilterISS2ISS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkGrayscaleGeodesicErodeImageFilterISS2ISS2 self) -> bool const &"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkGrayscaleGeodesicErodeImageFilterISS2ISS2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkGrayscaleGeodesicErodeImageFilterISS2ISS2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_FullyConnectedOff(self)

    SameDimensionCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_SameDimensionCheck
    InputComparableCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_InputComparableCheck
    InputConvertibleToOutputCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGrayscaleGeodesicErodeImageFilterPython.delete_itkGrayscaleGeodesicErodeImageFilterISS2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterISS2ISS2"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGeodesicErodeImageFilterISS2ISS2

        Create a new object of the class itkGrayscaleGeodesicErodeImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGeodesicErodeImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleGeodesicErodeImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleGeodesicErodeImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleGeodesicErodeImageFilterISS2ISS2.Clone = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_Clone, None, itkGrayscaleGeodesicErodeImageFilterISS2ISS2)
itkGrayscaleGeodesicErodeImageFilterISS2ISS2.SetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_SetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterISS2ISS2)
itkGrayscaleGeodesicErodeImageFilterISS2ISS2.GetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_GetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterISS2ISS2)
itkGrayscaleGeodesicErodeImageFilterISS2ISS2.SetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_SetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterISS2ISS2)
itkGrayscaleGeodesicErodeImageFilterISS2ISS2.GetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_GetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterISS2ISS2)
itkGrayscaleGeodesicErodeImageFilterISS2ISS2.SetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_SetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterISS2ISS2)
itkGrayscaleGeodesicErodeImageFilterISS2ISS2.GetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_GetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterISS2ISS2)
itkGrayscaleGeodesicErodeImageFilterISS2ISS2.RunOneIterationOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_RunOneIterationOn, None, itkGrayscaleGeodesicErodeImageFilterISS2ISS2)
itkGrayscaleGeodesicErodeImageFilterISS2ISS2.RunOneIterationOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_RunOneIterationOff, None, itkGrayscaleGeodesicErodeImageFilterISS2ISS2)
itkGrayscaleGeodesicErodeImageFilterISS2ISS2.GetNumberOfIterationsUsed = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_GetNumberOfIterationsUsed, None, itkGrayscaleGeodesicErodeImageFilterISS2ISS2)
itkGrayscaleGeodesicErodeImageFilterISS2ISS2.SetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_SetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterISS2ISS2)
itkGrayscaleGeodesicErodeImageFilterISS2ISS2.GetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_GetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterISS2ISS2)
itkGrayscaleGeodesicErodeImageFilterISS2ISS2.FullyConnectedOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_FullyConnectedOn, None, itkGrayscaleGeodesicErodeImageFilterISS2ISS2)
itkGrayscaleGeodesicErodeImageFilterISS2ISS2.FullyConnectedOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_FullyConnectedOff, None, itkGrayscaleGeodesicErodeImageFilterISS2ISS2)
itkGrayscaleGeodesicErodeImageFilterISS2ISS2_swigregister = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_swigregister
itkGrayscaleGeodesicErodeImageFilterISS2ISS2_swigregister(itkGrayscaleGeodesicErodeImageFilterISS2ISS2)

def itkGrayscaleGeodesicErodeImageFilterISS2ISS2___New_orig__():
    """itkGrayscaleGeodesicErodeImageFilterISS2ISS2___New_orig__() -> itkGrayscaleGeodesicErodeImageFilterISS2ISS2_Pointer"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2___New_orig__()

def itkGrayscaleGeodesicErodeImageFilterISS2ISS2_cast(obj):
    """itkGrayscaleGeodesicErodeImageFilterISS2ISS2_cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterISS2ISS2"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS2ISS2_cast(obj)

class itkGrayscaleGeodesicErodeImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    geodesic gray scale erosion of an image

    Geodesic erosion operates on a "marker" image and a "mask" image.
    The marker image is eroded using an elementary structuring element
    (neighborhood of radius one using only the face connected neighbors).
    The resulting image is then compared with the mask image. The output
    image is the pixelwise maximum of the eroded marker image and the mask
    image.

    Geodesic erosion is run either one iteration or until convergence. In
    the convergence case, the filter is equivalent to "reconstruction by
    erosion". This filter is implemented to handle both scenarios. The
    one iteration case is multi-threaded. The convergence case is
    delegated to another instance of the same filter (but configured to
    run a single iteration).

    The marker image must be greater than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    A noniterative version of this algorithm can be found in the
    ReconstructionByErosionImageFilter. This noniterative solution is much
    faster than the implementation provided here. All ITK filters that
    previously used GrayscaleGeodesicErodeImageFilter as part of their
    implementation have been converted to use the
    ReconstructionByErosionImageFilter. The
    GrayscaleGeodesicErodeImageFilter is maintained for backward
    compatibility.

    See:  MorphologyImageFilter, GrayscaleErodeImageFilter,
    GrayscaleFunctionErodeImageFilter, BinaryErodeImageFilter,
    ReconstructionByErosionImageFilter

    C++ includes: itkGrayscaleGeodesicErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkGrayscaleGeodesicErodeImageFilterISS3ISS3_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkGrayscaleGeodesicErodeImageFilterISS3ISS3 self) -> itkGrayscaleGeodesicErodeImageFilterISS3ISS3_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_Clone(self)


    def SetMarkerImage(self, arg0):
        """
        SetMarkerImage(itkGrayscaleGeodesicErodeImageFilterISS3ISS3 self, itkImageSS3 arg0)

        Set/Get the marker
        image. The marker image must be pixelwise greater than or equal to the
        mask image. The marker image the image that is eroded by this filter.

        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_SetMarkerImage(self, arg0)


    def GetMarkerImage(self):
        """GetMarkerImage(itkGrayscaleGeodesicErodeImageFilterISS3ISS3 self) -> itkImageSS3"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_GetMarkerImage(self)


    def SetMaskImage(self, arg0):
        """
        SetMaskImage(itkGrayscaleGeodesicErodeImageFilterISS3ISS3 self, itkImageSS3 arg0)

        Set/Get the mask
        image. The mask image is used to "mask" the eroded marker image. The
        mask operation is a pixelwise maximum. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_SetMaskImage(self, arg0)


    def GetMaskImage(self):
        """GetMaskImage(itkGrayscaleGeodesicErodeImageFilterISS3ISS3 self) -> itkImageSS3"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_GetMaskImage(self)


    def SetRunOneIteration(self, _arg):
        """
        SetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterISS3ISS3 self, bool const _arg)

        Set/Get whether
        the filter should run one iteration or until convergence. When run to
        convergence, this filter is equivalent to "reconstruction by
        erosion". Default is off. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_SetRunOneIteration(self, _arg)


    def GetRunOneIteration(self):
        """GetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterISS3ISS3 self) -> bool"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_GetRunOneIteration(self)


    def RunOneIterationOn(self):
        """RunOneIterationOn(itkGrayscaleGeodesicErodeImageFilterISS3ISS3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_RunOneIterationOn(self)


    def RunOneIterationOff(self):
        """RunOneIterationOff(itkGrayscaleGeodesicErodeImageFilterISS3ISS3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_RunOneIterationOff(self)


    def GetNumberOfIterationsUsed(self):
        """
        GetNumberOfIterationsUsed(itkGrayscaleGeodesicErodeImageFilterISS3ISS3 self) -> unsigned long

        Get the
        number of iterations used to produce the current output. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_GetNumberOfIterationsUsed(self)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkGrayscaleGeodesicErodeImageFilterISS3ISS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkGrayscaleGeodesicErodeImageFilterISS3ISS3 self) -> bool const &"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkGrayscaleGeodesicErodeImageFilterISS3ISS3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkGrayscaleGeodesicErodeImageFilterISS3ISS3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_FullyConnectedOff(self)

    SameDimensionCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_SameDimensionCheck
    InputComparableCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_InputComparableCheck
    InputConvertibleToOutputCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGrayscaleGeodesicErodeImageFilterPython.delete_itkGrayscaleGeodesicErodeImageFilterISS3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterISS3ISS3"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGeodesicErodeImageFilterISS3ISS3

        Create a new object of the class itkGrayscaleGeodesicErodeImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGeodesicErodeImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleGeodesicErodeImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleGeodesicErodeImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleGeodesicErodeImageFilterISS3ISS3.Clone = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_Clone, None, itkGrayscaleGeodesicErodeImageFilterISS3ISS3)
itkGrayscaleGeodesicErodeImageFilterISS3ISS3.SetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_SetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterISS3ISS3)
itkGrayscaleGeodesicErodeImageFilterISS3ISS3.GetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_GetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterISS3ISS3)
itkGrayscaleGeodesicErodeImageFilterISS3ISS3.SetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_SetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterISS3ISS3)
itkGrayscaleGeodesicErodeImageFilterISS3ISS3.GetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_GetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterISS3ISS3)
itkGrayscaleGeodesicErodeImageFilterISS3ISS3.SetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_SetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterISS3ISS3)
itkGrayscaleGeodesicErodeImageFilterISS3ISS3.GetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_GetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterISS3ISS3)
itkGrayscaleGeodesicErodeImageFilterISS3ISS3.RunOneIterationOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_RunOneIterationOn, None, itkGrayscaleGeodesicErodeImageFilterISS3ISS3)
itkGrayscaleGeodesicErodeImageFilterISS3ISS3.RunOneIterationOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_RunOneIterationOff, None, itkGrayscaleGeodesicErodeImageFilterISS3ISS3)
itkGrayscaleGeodesicErodeImageFilterISS3ISS3.GetNumberOfIterationsUsed = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_GetNumberOfIterationsUsed, None, itkGrayscaleGeodesicErodeImageFilterISS3ISS3)
itkGrayscaleGeodesicErodeImageFilterISS3ISS3.SetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_SetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterISS3ISS3)
itkGrayscaleGeodesicErodeImageFilterISS3ISS3.GetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_GetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterISS3ISS3)
itkGrayscaleGeodesicErodeImageFilterISS3ISS3.FullyConnectedOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_FullyConnectedOn, None, itkGrayscaleGeodesicErodeImageFilterISS3ISS3)
itkGrayscaleGeodesicErodeImageFilterISS3ISS3.FullyConnectedOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_FullyConnectedOff, None, itkGrayscaleGeodesicErodeImageFilterISS3ISS3)
itkGrayscaleGeodesicErodeImageFilterISS3ISS3_swigregister = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_swigregister
itkGrayscaleGeodesicErodeImageFilterISS3ISS3_swigregister(itkGrayscaleGeodesicErodeImageFilterISS3ISS3)

def itkGrayscaleGeodesicErodeImageFilterISS3ISS3___New_orig__():
    """itkGrayscaleGeodesicErodeImageFilterISS3ISS3___New_orig__() -> itkGrayscaleGeodesicErodeImageFilterISS3ISS3_Pointer"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3___New_orig__()

def itkGrayscaleGeodesicErodeImageFilterISS3ISS3_cast(obj):
    """itkGrayscaleGeodesicErodeImageFilterISS3ISS3_cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterISS3ISS3"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterISS3ISS3_cast(obj)

class itkGrayscaleGeodesicErodeImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """


    geodesic gray scale erosion of an image

    Geodesic erosion operates on a "marker" image and a "mask" image.
    The marker image is eroded using an elementary structuring element
    (neighborhood of radius one using only the face connected neighbors).
    The resulting image is then compared with the mask image. The output
    image is the pixelwise maximum of the eroded marker image and the mask
    image.

    Geodesic erosion is run either one iteration or until convergence. In
    the convergence case, the filter is equivalent to "reconstruction by
    erosion". This filter is implemented to handle both scenarios. The
    one iteration case is multi-threaded. The convergence case is
    delegated to another instance of the same filter (but configured to
    run a single iteration).

    The marker image must be greater than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    A noniterative version of this algorithm can be found in the
    ReconstructionByErosionImageFilter. This noniterative solution is much
    faster than the implementation provided here. All ITK filters that
    previously used GrayscaleGeodesicErodeImageFilter as part of their
    implementation have been converted to use the
    ReconstructionByErosionImageFilter. The
    GrayscaleGeodesicErodeImageFilter is maintained for backward
    compatibility.

    See:  MorphologyImageFilter, GrayscaleErodeImageFilter,
    GrayscaleFunctionErodeImageFilter, BinaryErodeImageFilter,
    ReconstructionByErosionImageFilter

    C++ includes: itkGrayscaleGeodesicErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 self) -> itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Clone(self)


    def SetMarkerImage(self, arg0):
        """
        SetMarkerImage(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 self, itkImageUC2 arg0)

        Set/Get the marker
        image. The marker image must be pixelwise greater than or equal to the
        mask image. The marker image the image that is eroded by this filter.

        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_SetMarkerImage(self, arg0)


    def GetMarkerImage(self):
        """GetMarkerImage(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 self) -> itkImageUC2"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_GetMarkerImage(self)


    def SetMaskImage(self, arg0):
        """
        SetMaskImage(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 self, itkImageUC2 arg0)

        Set/Get the mask
        image. The mask image is used to "mask" the eroded marker image. The
        mask operation is a pixelwise maximum. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_SetMaskImage(self, arg0)


    def GetMaskImage(self):
        """GetMaskImage(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 self) -> itkImageUC2"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_GetMaskImage(self)


    def SetRunOneIteration(self, _arg):
        """
        SetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 self, bool const _arg)

        Set/Get whether
        the filter should run one iteration or until convergence. When run to
        convergence, this filter is equivalent to "reconstruction by
        erosion". Default is off. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_SetRunOneIteration(self, _arg)


    def GetRunOneIteration(self):
        """GetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 self) -> bool"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_GetRunOneIteration(self)


    def RunOneIterationOn(self):
        """RunOneIterationOn(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_RunOneIterationOn(self)


    def RunOneIterationOff(self):
        """RunOneIterationOff(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_RunOneIterationOff(self)


    def GetNumberOfIterationsUsed(self):
        """
        GetNumberOfIterationsUsed(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 self) -> unsigned long

        Get the
        number of iterations used to produce the current output. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_GetNumberOfIterationsUsed(self)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 self) -> bool const &"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_FullyConnectedOff(self)

    SameDimensionCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_SameDimensionCheck
    InputComparableCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_InputComparableCheck
    InputConvertibleToOutputCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGrayscaleGeodesicErodeImageFilterPython.delete_itkGrayscaleGeodesicErodeImageFilterIUC2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterIUC2IUC2"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGeodesicErodeImageFilterIUC2IUC2

        Create a new object of the class itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.Clone = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Clone, None, itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.SetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_SetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.GetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_GetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.SetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_SetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.GetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_GetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.SetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_SetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.GetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_GetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.RunOneIterationOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_RunOneIterationOn, None, itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.RunOneIterationOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_RunOneIterationOff, None, itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.GetNumberOfIterationsUsed = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_GetNumberOfIterationsUsed, None, itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.SetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_SetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.GetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_GetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.FullyConnectedOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_FullyConnectedOn, None, itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2.FullyConnectedOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_FullyConnectedOff, None, itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_swigregister = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_swigregister
itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_swigregister(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2)

def itkGrayscaleGeodesicErodeImageFilterIUC2IUC2___New_orig__():
    """itkGrayscaleGeodesicErodeImageFilterIUC2IUC2___New_orig__() -> itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2___New_orig__()

def itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_cast(obj):
    """itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterIUC2IUC2"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_cast(obj)

class itkGrayscaleGeodesicErodeImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """


    geodesic gray scale erosion of an image

    Geodesic erosion operates on a "marker" image and a "mask" image.
    The marker image is eroded using an elementary structuring element
    (neighborhood of radius one using only the face connected neighbors).
    The resulting image is then compared with the mask image. The output
    image is the pixelwise maximum of the eroded marker image and the mask
    image.

    Geodesic erosion is run either one iteration or until convergence. In
    the convergence case, the filter is equivalent to "reconstruction by
    erosion". This filter is implemented to handle both scenarios. The
    one iteration case is multi-threaded. The convergence case is
    delegated to another instance of the same filter (but configured to
    run a single iteration).

    The marker image must be greater than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    A noniterative version of this algorithm can be found in the
    ReconstructionByErosionImageFilter. This noniterative solution is much
    faster than the implementation provided here. All ITK filters that
    previously used GrayscaleGeodesicErodeImageFilter as part of their
    implementation have been converted to use the
    ReconstructionByErosionImageFilter. The
    GrayscaleGeodesicErodeImageFilter is maintained for backward
    compatibility.

    See:  MorphologyImageFilter, GrayscaleErodeImageFilter,
    GrayscaleFunctionErodeImageFilter, BinaryErodeImageFilter,
    ReconstructionByErosionImageFilter

    C++ includes: itkGrayscaleGeodesicErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 self) -> itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Clone(self)


    def SetMarkerImage(self, arg0):
        """
        SetMarkerImage(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 self, itkImageUC3 arg0)

        Set/Get the marker
        image. The marker image must be pixelwise greater than or equal to the
        mask image. The marker image the image that is eroded by this filter.

        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_SetMarkerImage(self, arg0)


    def GetMarkerImage(self):
        """GetMarkerImage(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 self) -> itkImageUC3"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_GetMarkerImage(self)


    def SetMaskImage(self, arg0):
        """
        SetMaskImage(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 self, itkImageUC3 arg0)

        Set/Get the mask
        image. The mask image is used to "mask" the eroded marker image. The
        mask operation is a pixelwise maximum. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_SetMaskImage(self, arg0)


    def GetMaskImage(self):
        """GetMaskImage(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 self) -> itkImageUC3"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_GetMaskImage(self)


    def SetRunOneIteration(self, _arg):
        """
        SetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 self, bool const _arg)

        Set/Get whether
        the filter should run one iteration or until convergence. When run to
        convergence, this filter is equivalent to "reconstruction by
        erosion". Default is off. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_SetRunOneIteration(self, _arg)


    def GetRunOneIteration(self):
        """GetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 self) -> bool"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_GetRunOneIteration(self)


    def RunOneIterationOn(self):
        """RunOneIterationOn(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_RunOneIterationOn(self)


    def RunOneIterationOff(self):
        """RunOneIterationOff(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_RunOneIterationOff(self)


    def GetNumberOfIterationsUsed(self):
        """
        GetNumberOfIterationsUsed(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 self) -> unsigned long

        Get the
        number of iterations used to produce the current output. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_GetNumberOfIterationsUsed(self)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 self) -> bool const &"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_FullyConnectedOff(self)

    SameDimensionCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_SameDimensionCheck
    InputComparableCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_InputComparableCheck
    InputConvertibleToOutputCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGrayscaleGeodesicErodeImageFilterPython.delete_itkGrayscaleGeodesicErodeImageFilterIUC3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterIUC3IUC3"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGeodesicErodeImageFilterIUC3IUC3

        Create a new object of the class itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.Clone = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Clone, None, itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.SetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_SetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.GetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_GetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.SetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_SetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.GetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_GetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.SetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_SetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.GetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_GetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.RunOneIterationOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_RunOneIterationOn, None, itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.RunOneIterationOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_RunOneIterationOff, None, itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.GetNumberOfIterationsUsed = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_GetNumberOfIterationsUsed, None, itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.SetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_SetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.GetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_GetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.FullyConnectedOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_FullyConnectedOn, None, itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3.FullyConnectedOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_FullyConnectedOff, None, itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_swigregister = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_swigregister
itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_swigregister(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3)

def itkGrayscaleGeodesicErodeImageFilterIUC3IUC3___New_orig__():
    """itkGrayscaleGeodesicErodeImageFilterIUC3IUC3___New_orig__() -> itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3___New_orig__()

def itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_cast(obj):
    """itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterIUC3IUC3"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_cast(obj)

class itkGrayscaleGeodesicErodeImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """


    geodesic gray scale erosion of an image

    Geodesic erosion operates on a "marker" image and a "mask" image.
    The marker image is eroded using an elementary structuring element
    (neighborhood of radius one using only the face connected neighbors).
    The resulting image is then compared with the mask image. The output
    image is the pixelwise maximum of the eroded marker image and the mask
    image.

    Geodesic erosion is run either one iteration or until convergence. In
    the convergence case, the filter is equivalent to "reconstruction by
    erosion". This filter is implemented to handle both scenarios. The
    one iteration case is multi-threaded. The convergence case is
    delegated to another instance of the same filter (but configured to
    run a single iteration).

    The marker image must be greater than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    A noniterative version of this algorithm can be found in the
    ReconstructionByErosionImageFilter. This noniterative solution is much
    faster than the implementation provided here. All ITK filters that
    previously used GrayscaleGeodesicErodeImageFilter as part of their
    implementation have been converted to use the
    ReconstructionByErosionImageFilter. The
    GrayscaleGeodesicErodeImageFilter is maintained for backward
    compatibility.

    See:  MorphologyImageFilter, GrayscaleErodeImageFilter,
    GrayscaleFunctionErodeImageFilter, BinaryErodeImageFilter,
    ReconstructionByErosionImageFilter

    C++ includes: itkGrayscaleGeodesicErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 self) -> itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Clone(self)


    def SetMarkerImage(self, arg0):
        """
        SetMarkerImage(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 self, itkImageUS2 arg0)

        Set/Get the marker
        image. The marker image must be pixelwise greater than or equal to the
        mask image. The marker image the image that is eroded by this filter.

        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_SetMarkerImage(self, arg0)


    def GetMarkerImage(self):
        """GetMarkerImage(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 self) -> itkImageUS2"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_GetMarkerImage(self)


    def SetMaskImage(self, arg0):
        """
        SetMaskImage(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 self, itkImageUS2 arg0)

        Set/Get the mask
        image. The mask image is used to "mask" the eroded marker image. The
        mask operation is a pixelwise maximum. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_SetMaskImage(self, arg0)


    def GetMaskImage(self):
        """GetMaskImage(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 self) -> itkImageUS2"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_GetMaskImage(self)


    def SetRunOneIteration(self, _arg):
        """
        SetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 self, bool const _arg)

        Set/Get whether
        the filter should run one iteration or until convergence. When run to
        convergence, this filter is equivalent to "reconstruction by
        erosion". Default is off. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_SetRunOneIteration(self, _arg)


    def GetRunOneIteration(self):
        """GetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 self) -> bool"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_GetRunOneIteration(self)


    def RunOneIterationOn(self):
        """RunOneIterationOn(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_RunOneIterationOn(self)


    def RunOneIterationOff(self):
        """RunOneIterationOff(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_RunOneIterationOff(self)


    def GetNumberOfIterationsUsed(self):
        """
        GetNumberOfIterationsUsed(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 self) -> unsigned long

        Get the
        number of iterations used to produce the current output. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_GetNumberOfIterationsUsed(self)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 self) -> bool const &"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_FullyConnectedOff(self)

    SameDimensionCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_SameDimensionCheck
    InputComparableCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_InputComparableCheck
    InputConvertibleToOutputCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGrayscaleGeodesicErodeImageFilterPython.delete_itkGrayscaleGeodesicErodeImageFilterIUS2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterIUS2IUS2"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGeodesicErodeImageFilterIUS2IUS2

        Create a new object of the class itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.Clone = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Clone, None, itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.SetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_SetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.GetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_GetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.SetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_SetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.GetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_GetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.SetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_SetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.GetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_GetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.RunOneIterationOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_RunOneIterationOn, None, itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.RunOneIterationOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_RunOneIterationOff, None, itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.GetNumberOfIterationsUsed = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_GetNumberOfIterationsUsed, None, itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.SetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_SetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.GetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_GetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.FullyConnectedOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_FullyConnectedOn, None, itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2.FullyConnectedOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_FullyConnectedOff, None, itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_swigregister = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_swigregister
itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_swigregister(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2)

def itkGrayscaleGeodesicErodeImageFilterIUS2IUS2___New_orig__():
    """itkGrayscaleGeodesicErodeImageFilterIUS2IUS2___New_orig__() -> itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2___New_orig__()

def itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_cast(obj):
    """itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterIUS2IUS2"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_cast(obj)

class itkGrayscaleGeodesicErodeImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """


    geodesic gray scale erosion of an image

    Geodesic erosion operates on a "marker" image and a "mask" image.
    The marker image is eroded using an elementary structuring element
    (neighborhood of radius one using only the face connected neighbors).
    The resulting image is then compared with the mask image. The output
    image is the pixelwise maximum of the eroded marker image and the mask
    image.

    Geodesic erosion is run either one iteration or until convergence. In
    the convergence case, the filter is equivalent to "reconstruction by
    erosion". This filter is implemented to handle both scenarios. The
    one iteration case is multi-threaded. The convergence case is
    delegated to another instance of the same filter (but configured to
    run a single iteration).

    The marker image must be greater than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    A noniterative version of this algorithm can be found in the
    ReconstructionByErosionImageFilter. This noniterative solution is much
    faster than the implementation provided here. All ITK filters that
    previously used GrayscaleGeodesicErodeImageFilter as part of their
    implementation have been converted to use the
    ReconstructionByErosionImageFilter. The
    GrayscaleGeodesicErodeImageFilter is maintained for backward
    compatibility.

    See:  MorphologyImageFilter, GrayscaleErodeImageFilter,
    GrayscaleFunctionErodeImageFilter, BinaryErodeImageFilter,
    ReconstructionByErosionImageFilter

    C++ includes: itkGrayscaleGeodesicErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 self) -> itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Clone(self)


    def SetMarkerImage(self, arg0):
        """
        SetMarkerImage(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 self, itkImageUS3 arg0)

        Set/Get the marker
        image. The marker image must be pixelwise greater than or equal to the
        mask image. The marker image the image that is eroded by this filter.

        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_SetMarkerImage(self, arg0)


    def GetMarkerImage(self):
        """GetMarkerImage(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 self) -> itkImageUS3"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_GetMarkerImage(self)


    def SetMaskImage(self, arg0):
        """
        SetMaskImage(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 self, itkImageUS3 arg0)

        Set/Get the mask
        image. The mask image is used to "mask" the eroded marker image. The
        mask operation is a pixelwise maximum. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_SetMaskImage(self, arg0)


    def GetMaskImage(self):
        """GetMaskImage(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 self) -> itkImageUS3"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_GetMaskImage(self)


    def SetRunOneIteration(self, _arg):
        """
        SetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 self, bool const _arg)

        Set/Get whether
        the filter should run one iteration or until convergence. When run to
        convergence, this filter is equivalent to "reconstruction by
        erosion". Default is off. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_SetRunOneIteration(self, _arg)


    def GetRunOneIteration(self):
        """GetRunOneIteration(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 self) -> bool"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_GetRunOneIteration(self)


    def RunOneIterationOn(self):
        """RunOneIterationOn(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_RunOneIterationOn(self)


    def RunOneIterationOff(self):
        """RunOneIterationOff(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_RunOneIterationOff(self)


    def GetNumberOfIterationsUsed(self):
        """
        GetNumberOfIterationsUsed(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 self) -> unsigned long

        Get the
        number of iterations used to produce the current output. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_GetNumberOfIterationsUsed(self)


    def SetFullyConnected(self, _arg):
        """
        SetFullyConnected(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self):
        """GetFullyConnected(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 self) -> bool const &"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_GetFullyConnected(self)


    def FullyConnectedOn(self):
        """FullyConnectedOn(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_FullyConnectedOn(self)


    def FullyConnectedOff(self):
        """FullyConnectedOff(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 self)"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_FullyConnectedOff(self)

    SameDimensionCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_SameDimensionCheck
    InputComparableCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_InputComparableCheck
    InputConvertibleToOutputCheck = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGrayscaleGeodesicErodeImageFilterPython.delete_itkGrayscaleGeodesicErodeImageFilterIUS3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterIUS3IUS3"""
        return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGeodesicErodeImageFilterIUS3IUS3

        Create a new object of the class itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.Clone = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Clone, None, itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.SetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_SetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.GetMarkerImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_GetMarkerImage, None, itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.SetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_SetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.GetMaskImage = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_GetMaskImage, None, itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.SetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_SetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.GetRunOneIteration = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_GetRunOneIteration, None, itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.RunOneIterationOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_RunOneIterationOn, None, itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.RunOneIterationOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_RunOneIterationOff, None, itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.GetNumberOfIterationsUsed = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_GetNumberOfIterationsUsed, None, itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.SetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_SetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.GetFullyConnected = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_GetFullyConnected, None, itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.FullyConnectedOn = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_FullyConnectedOn, None, itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3.FullyConnectedOff = new_instancemethod(_itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_FullyConnectedOff, None, itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_swigregister = _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_swigregister
itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_swigregister(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3)

def itkGrayscaleGeodesicErodeImageFilterIUS3IUS3___New_orig__():
    """itkGrayscaleGeodesicErodeImageFilterIUS3IUS3___New_orig__() -> itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3___New_orig__()

def itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_cast(obj):
    """itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkGrayscaleGeodesicErodeImageFilterIUS3IUS3"""
    return _itkGrayscaleGeodesicErodeImageFilterPython.itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_cast(obj)


def grayscale_geodesic_erode_image_filter(*args, **kwargs):
    """Procedural interface for GrayscaleGeodesicErodeImageFilter"""
    import itk
    instance = itk.GrayscaleGeodesicErodeImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def grayscale_geodesic_erode_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.GrayscaleGeodesicErodeImageFilter, itkTemplate.itkTemplate):
        grayscale_geodesic_erode_image_filter.__doc__ = itk.GrayscaleGeodesicErodeImageFilter.values()[0].__doc__
    else:
        grayscale_geodesic_erode_image_filter.__doc__ = itk.GrayscaleGeodesicErodeImageFilter.__doc__




