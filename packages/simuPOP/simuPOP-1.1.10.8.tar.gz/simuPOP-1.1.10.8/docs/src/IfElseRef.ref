
class IfElse
------------

.. class:: IfElse

   This operator uses a condition, which can be a fixed condition, an
   expression or a user-defined function, to determine which operators
   to be applied when this operator is applied. A list of if-operators
   will be applied when the condition is ``True``. Otherwise a list of
   else-operators will be applied.


   .. method:: IfElse(cond, ifOps=[], elseOps=[], output=">", begin=0, end=-1, step=1, at=[], reps=ALL_AVAIL, subPops=ALL_AVAIL, infoFields=[])


      Create a conditional operator that will apply operators *ifOps*
      if condition *cond* is met and *elseOps* otherwise. If a Python
      expression (a string) is given to parameter *cond*, the
      expression will be evalulated in each population's local
      namespace when this operator is applied. When a Python function
      is specified, it accepts parameter ``pop`` when it is applied to
      a population, and one or more parameters ``pop``, ``off``,
      ``dad`` or ``mom`` when it is applied during mating. The return
      value of this function should be ``True`` or ``False``.
      Otherwise, parameter *cond* will be treated as a fixed condition
      (converted to ``True`` or ``False``) upon which one set of
      operators is always applied. The applicability of *ifOps* and
      *elseOps* are controlled by parameters *begin*, *end*, *step*,
      *at* and *rep* of both the :class:`IfElse` operator and
      individual operators but *ifOps* and *elseOps* opeartors does
      not support negative indexes for replicate and generation
      numbers.

