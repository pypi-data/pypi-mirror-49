{"version":3,"sources":["webpack:///./app/actions/settingsBreadcrumbActions.jsx","webpack:///./app/views/settings/components/settingsBackButton.jsx","webpack:///./app/views/settings/components/settingsBreadcrumb/crumb.jsx","webpack:///./app/views/settings/components/settingsBreadcrumb/divider.jsx","webpack:///./app/views/settings/components/settingsBreadcrumb/breadcrumbDropdown.jsx","webpack:///./app/views/settings/components/settingsBreadcrumb/menuItem.jsx","webpack:///./app/components/textLink.jsx","webpack:///./app/views/settings/components/settingsBreadcrumb/organizationCrumb.jsx","webpack:///./app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx","webpack:///./app/stores/settingsBreadcrumbStore.jsx","webpack:///./app/views/settings/components/settingsBreadcrumb/teamCrumb.jsx","webpack:///./app/views/settings/components/settingsBreadcrumb/index.jsx","webpack:///./app/views/settings/components/settingsHeader.jsx","webpack:///./app/views/settings/components/settingsLayout.jsx"],"names":["reflux__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","reflux__WEBPACK_IMPORTED_MODULE_0___default","n","Reflux","createActions","SettingsBackButton","pendingInvite","Cookies","get","react_default","a","createElement","BackButtonWrapper","href","Icon","src","size","t","React","Component","styled","Link","target","p","theme","gray3","whiteDark","borderLight","space","fontSizeMedium","gray5","InlineSvg","offWhite2","Crumb","StyledDivider","borderDark","isHover","StyledInlineSvg","Divider","_this$props","this","props","isLast","propTypes","PropTypes","bool","EXIT_DELAY","BreadcrumbDropdown","_getPrototypeOf2","_this","classCallCheck_default","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","open","setState","isOpen","close","handleStateChange","handleMouseEnterActor","actions","e","leaving","clearTimeout","entering","setTimeout","enterDelay","handleMouseEnter","handleMouseLeave","handleClickActor","handleClose","state","_this2","hasMenu","route","name","items","onSelect","dropdownAutoCompleteMenu","blendCorner","alignMenu","onOpen","onClose","menuProps","onMouseEnter","onMouseLeave","isStyled","virtualizedHeight","_ref","getActorProps","crumb","onClick","bind","divider","object","number","node","array","func","defaultProps","MenuItem","children","objectWithoutProperties_default","StyledMenuItem","overflowEllipsis","TextLink","OrganizationCrumb","organizations","organization","params","routes","breadcrumbDropdown","extends_default","textLink","to","recreateRoute","objectSpread_default","orgId","slug","index_es","align","idBadge","avatarSize","item","destination","projectId","browserHistory","push","value","map","org","label","menuItem","SentryTypes","Organization","withLatestContext","ROUTE_PATH_EXCEPTIONS","Set","ProjectCrumb","handleSelect","lastRoute","stepBack","has","path","undefined","_this$props2","latestOrganization","latestProject","project","projects","ProjectName","replaceRouterParams","loadingIndicator","mini","avatarProps","consistentWidth","Project","withProjects","SettingsBreadcrumbStore","createStore","init","reset","listenTo","SettingsBreadcrumbActions","mapTitle","onUpdateRouteMap","trimMappings","onTrimMappings","pathMap","getInitialState","title","getRouteStringFromRoutes","trigger","routePath","fullPath","startsWith","TeamCrumb","teams","team","find","teamId","teamItem","withTeams","MENUS","Team","SettingsBreadcrumb","prevProps","lastRouteIndex","r","lastIndexOf","Breadcrumbs","i","pathTitle","slice","createMenu","Menu","CrumbPicker","key","contextTypes","createReactClass","displayName","mixins","connect","render","settingsBreadcrumb_SettingsBreadcrumb","SettingsHeader","zIndex","header","SettingsLayout","router","renderNavigation","childProps","childRoutes","childRoute","Fragment","SettingsColumn","settingsHeader","width","flex","settingsBreadcrumb","settingsSearch","MaxWidthContainer","SidebarWrapper","settingsBackButton","SidebarWrapperContent","Content","settings","containerWidth","sidebarWidth"],"mappings":"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","file":"AccountSettingsLayout~OrganizationSettingsLayout~ProjectSettingsLayout~SettingsIndex.js","sourcesContent":["import Reflux from 'reflux';\n\nexport default Reflux.createActions(['mapTitle', 'trimMappings']);\n","import {Link} from 'react-router';\nimport React from 'react';\nimport Cookies from 'js-cookie';\nimport styled from 'react-emotion';\n\nimport {t} from 'app/locale';\nimport InlineSvg from 'app/components/inlineSvg';\nimport space from 'app/styles/space';\n\nclass SettingsBackButton extends React.Component {\n  render() {\n    // if the user needs to setup 2fa as part of the org invite flow,\n    // send them back to accept the invite\n    const pendingInvite = Cookies.get('pending-invite');\n\n    if (!pendingInvite) {\n      return null;\n    }\n\n    return (\n      <BackButtonWrapper href={pendingInvite}>\n        <Icon src=\"icon-arrow-left\" size=\"10px\" />\n        {t('Back to Invite')}\n      </BackButtonWrapper>\n    );\n  }\n}\n\nexport default SettingsBackButton;\n\nconst BackButtonWrapper = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: ${p => p.theme.gray3};\n  background: ${p => p.theme.whiteDark};\n  border-bottom: 1px solid ${p => p.theme.borderLight};\n  padding: ${space(1.5)} ${space(2)};\n  font-size: ${p => p.theme.fontSizeMedium};\n  &:hover {\n    color: ${p => p.theme.gray5};\n  }\n`;\n\nconst Icon = styled(InlineSvg)`\n  margin: 0 6px 0 -3px;\n  background: ${p => p.theme.offWhite2};\n  border-radius: 50%;\n  padding: ${space(0.5)};\n  box-sizing: content-box;\n\n  /* To ensure proper vertical centering */\n  svg {\n    display: block;\n  }\n`;\n","import styled from 'react-emotion';\n\nimport space from 'app/styles/space';\n\nconst Crumb = styled('div')`\n  display: flex;\n  align-items: center;\n  position: relative;\n  font-size: 18px;\n  color: ${p => p.theme.gray3};\n  padding-right: ${space(1)};\n  cursor: pointer;\n  > span {\n    transition: 0.1s all ease;\n  }\n\n  &:hover {\n    color: ${p => p.theme.gray5};\n  }\n`;\n\nexport default Crumb;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport InlineSvg from 'app/components/inlineSvg';\n\nconst StyledDivider = styled.span`\n  display: inline-block;\n  margin-left: 6px;\n  color: ${p => p.theme.borderDark};\n  position: relative;\n  top: -1px;\n\n  ${p =>\n    p.isHover\n      ? `\n    transform: rotate(90deg);\n    top: 0;\n    `\n      : ''};\n`;\n\nconst StyledInlineSvg = styled(InlineSvg)`\n  display: block;\n`;\n\nclass Divider extends React.Component {\n  static propTypes = {\n    isHover: PropTypes.bool,\n    isLast: PropTypes.bool,\n  };\n  render() {\n    const {isHover, isLast} = this.props;\n    if (isLast) {\n      return null;\n    }\n\n    return (\n      <StyledDivider isHover={isHover}>\n        <StyledInlineSvg src=\"icon-chevron-right\" size=\"14px\" />\n      </StyledDivider>\n    );\n  }\n}\n\nexport default Divider;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Crumb from 'app/views/settings/components/settingsBreadcrumb/crumb';\nimport DropdownAutoCompleteMenu from 'app/components/dropdownAutoCompleteMenu';\nimport Divider from 'app/views/settings/components/settingsBreadcrumb/divider';\n\nconst EXIT_DELAY = 0;\n\nclass BreadcrumbDropdown extends React.Component {\n  static propTypes = {\n    hasMenu: PropTypes.bool,\n    route: PropTypes.object,\n    isLast: PropTypes.bool,\n    enterDelay: PropTypes.number,\n    name: PropTypes.node,\n    items: PropTypes.array,\n    onSelect: PropTypes.func,\n  };\n\n  static defaultProps = {\n    enterDelay: 0,\n  };\n\n  constructor(...args) {\n    super(...args);\n\n    this.entering = false;\n    this.leaving = false;\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  open = () => {\n    this.setState({isOpen: true});\n  };\n\n  close = () => {\n    this.setState({isOpen: false});\n  };\n\n  handleStateChange = () => {};\n\n  // Adds a delay when mouse hovers on actor (in this case the breadcrumb)\n  handleMouseEnterActor = (actions, e) => {\n    if (this.leaving) {\n      clearTimeout(this.leaving);\n    }\n\n    this.entering = setTimeout(() => this.open(), this.props.enterDelay);\n  };\n\n  // handles mouseEnter event on actor and menu, should clear the leaving timeout and keep menu open\n  handleMouseEnter = (actions, e) => {\n    if (this.leaving) {\n      clearTimeout(this.leaving);\n    }\n\n    this.open();\n  };\n\n  // handles mouseLeave event on actor and menu, adds a timeout before updating state to account for\n  // mouseLeave into\n  handleMouseLeave = (actions, e) => {\n    if (this.entering) {\n      clearTimeout(this.entering);\n    }\n\n    this.leaving = setTimeout(() => this.close(), EXIT_DELAY);\n  };\n\n  // Close immediately when actor is clicked clicked\n  handleClickActor = (actions, e) => {\n    this.close();\n  };\n\n  // Close immediately when clicked outside\n  handleClose = actions => {\n    this.close();\n  };\n\n  render() {\n    const {hasMenu, route, isLast, name, items, onSelect} = this.props;\n    return (\n      <DropdownAutoCompleteMenu\n        blendCorner={false}\n        alignMenu=\"left\"\n        onOpen={this.handleMouseEnter}\n        onClose={this.close}\n        isOpen={this.state.isOpen}\n        menuProps={{\n          onMouseEnter: this.handleMouseEnter,\n          onMouseLeave: this.handleMouseLeave,\n        }}\n        items={items}\n        onSelect={onSelect}\n        isStyled\n        virtualizedHeight={41}\n      >\n        {({getActorProps, actions, isOpen}) => {\n          return (\n            <Crumb\n              {...getActorProps({\n                isStyled: true,\n                hasMenu,\n                onClick: this.handleClickActor.bind(this, actions),\n                onMouseEnter: this.handleMouseEnterActor.bind(this, actions),\n                onMouseLeave: this.handleMouseLeave.bind(this, actions),\n              })}\n            >\n              <span>{name || route.name} </span>\n              <Divider isHover={hasMenu && isOpen} isLast={isLast} />\n            </Crumb>\n          );\n        }}\n      </DropdownAutoCompleteMenu>\n    );\n  }\n}\n\nexport default BreadcrumbDropdown;\n","import React from 'react';\nimport styled from 'react-emotion';\n\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\n\nclass MenuItem extends React.Component {\n  render() {\n    const {children, ...props} = this.props;\n    return <StyledMenuItem {...props}>{children}</StyledMenuItem>;\n  }\n}\n\nconst StyledMenuItem = styled('div')`\n  font-size: 14px;\n  ${overflowEllipsis};\n`;\n\nexport default MenuItem;\n","import {Link} from 'react-router';\nimport styled from 'react-emotion';\n\n/**\n * Link colored as normal text\n */\nconst TextLink = styled(Link)`\n  color: ${p => p.theme.gray3};\n  &:hover {\n    color: ${p => p.theme.gray5};\n  }\n`;\n\nexport default TextLink;\n","import {Flex} from 'grid-emotion';\nimport {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport BreadcrumbDropdown from 'app/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';\nimport IdBadge from 'app/components/idBadge';\nimport MenuItem from 'app/views/settings/components/settingsBreadcrumb/menuItem';\nimport SentryTypes from 'app/sentryTypes';\nimport TextLink from 'app/components/textLink';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport withLatestContext from 'app/utils/withLatestContext';\n\nclass OrganizationCrumb extends React.Component {\n  static propTypes = {\n    organizations: PropTypes.array,\n    organization: SentryTypes.Organization,\n    routes: PropTypes.array,\n    route: PropTypes.object,\n  };\n\n  render() {\n    const {organizations, organization, params, routes, route, ...props} = this.props;\n\n    if (!organization) {\n      return null;\n    }\n\n    const hasMenu = organizations.length > 1;\n\n    return (\n      <BreadcrumbDropdown\n        name={\n          <TextLink\n            to={recreateRoute(route, {\n              routes,\n              params: {...params, orgId: organization.slug},\n            })}\n          >\n            <Flex align=\"center\">\n              <IdBadge avatarSize={18} organization={organization} />\n            </Flex>\n          </TextLink>\n        }\n        onSelect={item => {\n          // If we are currently in a project context, and we're attempting to switch organizations,\n          // then we need to default to index route (e.g. `route`)\n          //\n          // Otherwise, using empty string ('') will keep the current route path but with target org\n          const hasProjectParam = !!params.projectId;\n          const destination = hasProjectParam ? route : '';\n          browserHistory.push(\n            recreateRoute(destination, {\n              routes,\n              params: {...params, orgId: item.value},\n            })\n          );\n        }}\n        hasMenu={hasMenu}\n        route={route}\n        items={organizations.map(org => ({\n          value: org.slug,\n          label: (\n            <MenuItem>\n              <IdBadge organization={org} />\n            </MenuItem>\n          ),\n        }))}\n        {...props}\n      />\n    );\n  }\n}\n\nexport {OrganizationCrumb};\nexport default withLatestContext(OrganizationCrumb);\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport BreadcrumbDropdown from 'app/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';\nimport IdBadge from 'app/components/idBadge';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport MenuItem from 'app/views/settings/components/settingsBreadcrumb/menuItem';\nimport SentryTypes from 'app/sentryTypes';\nimport TextLink from 'app/components/textLink';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport withLatestContext from 'app/utils/withLatestContext';\nimport withProjects from 'app/utils/withProjects';\nimport space from 'app/styles/space';\n\nconst ROUTE_PATH_EXCEPTIONS = new Set([':ruleId/', ':keyId/', ':hookId/', ':pluginId/']);\n\nclass ProjectCrumb extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n    project: SentryTypes.Project,\n    projects: PropTypes.array,\n    routes: PropTypes.array,\n    route: PropTypes.object,\n  };\n\n  handleSelect = item => {\n    const {routes, params} = this.props;\n\n    const lastRoute = routes[routes.length - 1];\n    // We have to make exceptions for routes like \"Project Alerts Rule Edit\" or \"Client Key Details\"\n    // Since these models are project specific, we need to traverse up a route when switching projects\n    const stepBack = ROUTE_PATH_EXCEPTIONS.has(lastRoute.path) ? -1 : undefined;\n    browserHistory.push(\n      recreateRoute('', {\n        routes,\n        params: {...params, projectId: item.value},\n        stepBack,\n      })\n    );\n  };\n\n  render() {\n    const {\n      organization: latestOrganization,\n      project: latestProject,\n      projects,\n      route,\n      ...props\n    } = this.props;\n\n    if (!latestOrganization) {\n      return null;\n    }\n    if (!projects) {\n      return null;\n    }\n\n    const hasMenu = projects && projects.length > 1;\n\n    return (\n      <BreadcrumbDropdown\n        hasMenu={hasMenu}\n        route={route}\n        name={\n          <ProjectName>\n            {!latestProject ? (\n              <LoadingIndicator mini />\n            ) : (\n              <TextLink\n                to={replaceRouterParams('/settings/:orgId/projects/:projectId/', {\n                  orgId: latestOrganization.slug,\n                  projectId: latestProject.slug,\n                })}\n              >\n                <IdBadge project={latestProject} avatarSize={18} />\n              </TextLink>\n            )}\n          </ProjectName>\n        }\n        onSelect={this.handleSelect}\n        items={projects.map(project => ({\n          value: project.slug,\n          label: (\n            <MenuItem>\n              <IdBadge\n                project={project}\n                avatarProps={{consistentWidth: true}}\n                avatarSize={18}\n              />\n            </MenuItem>\n          ),\n        }))}\n        {...props}\n      />\n    );\n  }\n}\n\nexport {ProjectCrumb};\nexport default withProjects(withLatestContext(ProjectCrumb));\n\n// Set height of crumb because of spinner\nconst SPINNER_SIZE = '24px';\n\nconst ProjectName = styled.div`\n  display: flex;\n\n  .loading {\n    width: ${SPINNER_SIZE};\n    height: ${SPINNER_SIZE};\n    margin: 0 ${space(0.25)} 0 0;\n  }\n`;\n","import Reflux from 'reflux';\n\nimport SettingsBreadcrumbActions from 'app/actions/settingsBreadcrumbActions';\nimport getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';\n\nconst SettingsBreadcrumbStore = Reflux.createStore({\n  init() {\n    this.reset();\n    this.listenTo(SettingsBreadcrumbActions.mapTitle, this.onUpdateRouteMap);\n    this.listenTo(SettingsBreadcrumbActions.trimMappings, this.onTrimMappings);\n  },\n\n  reset() {\n    this.pathMap = {};\n  },\n\n  getInitialState() {\n    return this.pathMap;\n  },\n\n  onUpdateRouteMap({routes, title}) {\n    this.pathMap[getRouteStringFromRoutes(routes)] = title;\n    this.trigger(this.pathMap);\n  },\n\n  onTrimMappings(routes) {\n    const routePath = getRouteStringFromRoutes(routes);\n    for (const fullPath in this.pathMap) {\n      if (!routePath.startsWith(fullPath)) {\n        delete this.pathMap[fullPath];\n      }\n    }\n    this.trigger(this.pathMap);\n  },\n});\n\nexport default SettingsBreadcrumbStore;\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport BreadcrumbDropdown from 'app/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';\nimport IdBadge from 'app/components/idBadge';\nimport MenuItem from 'app/views/settings/components/settingsBreadcrumb/menuItem';\nimport TextLink from 'app/components/textLink';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport withTeams from 'app/utils/withTeams';\n\nclass TeamCrumb extends React.Component {\n  static propTypes = {\n    teams: PropTypes.array,\n    routes: PropTypes.array,\n    route: PropTypes.object,\n  };\n\n  render() {\n    const {teams, params, routes, route, ...props} = this.props;\n\n    const team = teams.find(({slug}) => slug === params.teamId);\n    const hasMenu = teams.length > 1;\n\n    if (!team) {\n      return null;\n    }\n\n    return (\n      <BreadcrumbDropdown\n        name={\n          <TextLink\n            to={recreateRoute(route, {\n              routes,\n              params: {...params, teamId: team.slug},\n            })}\n          >\n            <IdBadge avatarSize={18} team={team} />\n          </TextLink>\n        }\n        onSelect={item => {\n          browserHistory.push(\n            recreateRoute('', {\n              routes,\n              params: {...params, teamId: item.value},\n            })\n          );\n        }}\n        hasMenu={hasMenu}\n        route={route}\n        items={teams.map(teamItem => ({\n          value: teamItem.slug,\n          label: (\n            <MenuItem>\n              <IdBadge team={teamItem} />\n            </MenuItem>\n          ),\n        }))}\n        {...props}\n      />\n    );\n  }\n}\n\nexport {TeamCrumb};\nexport default withTeams(TeamCrumb);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\nimport styled from 'react-emotion';\n\nimport Crumb from 'app/views/settings/components/settingsBreadcrumb/crumb';\nimport Divider from 'app/views/settings/components/settingsBreadcrumb/divider';\nimport OrganizationCrumb from 'app/views/settings/components/settingsBreadcrumb/organizationCrumb';\nimport ProjectCrumb from 'app/views/settings/components/settingsBreadcrumb/projectCrumb';\nimport SentryTypes from 'app/sentryTypes';\nimport SettingsBreadcrumbActions from 'app/actions/settingsBreadcrumbActions';\nimport SettingsBreadcrumbStore from 'app/stores/settingsBreadcrumbStore';\nimport TeamCrumb from 'app/views/settings/components/settingsBreadcrumb/teamCrumb';\nimport TextLink from 'app/components/textLink';\nimport getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';\nimport recreateRoute from 'app/utils/recreateRoute';\n\nconst MENUS = {\n  Organization: OrganizationCrumb,\n  Project: ProjectCrumb,\n  Team: TeamCrumb,\n};\n\nclass SettingsBreadcrumb extends React.Component {\n  static propTypes = {\n    routes: PropTypes.array,\n    // pathMap maps stringifed routes to a breadcrumb title. This property is\n    // provided by the SettingsBreadcrumbStore.\n    pathMap: PropTypes.object,\n  };\n\n  static contextTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  static defaultProps = {\n    pathMap: {},\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.routes === prevProps.routes) {\n      return;\n    }\n    SettingsBreadcrumbActions.trimMappings(this.props.routes);\n  }\n\n  render() {\n    const {routes, params, pathMap} = this.props;\n    const lastRouteIndex = routes.map(r => !!r.name).lastIndexOf(true);\n    return (\n      <Breadcrumbs>\n        {routes.map((route, i) => {\n          if (!route.name) {\n            return null;\n          }\n          const pathTitle = pathMap[getRouteStringFromRoutes(routes.slice(0, i + 1))];\n          const isLast = i === lastRouteIndex;\n          const createMenu = MENUS[route.name];\n          const Menu = typeof createMenu === 'function' && createMenu;\n          const hasMenu = !!Menu;\n          const CrumbPicker = hasMenu\n            ? Menu\n            : () => (\n                <Crumb route={route} isLast={isLast}>\n                  <TextLink to={recreateRoute(route, {routes, params, stepBack: -1})}>\n                    {pathTitle || route.name}{' '}\n                  </TextLink>\n                  <Divider isLast={isLast} />\n                </Crumb>\n              );\n\n          return (\n            <CrumbPicker\n              key={`${route.name}:${route.path}`}\n              routes={routes}\n              params={params}\n              route={route}\n              isLast={isLast}\n            />\n          );\n        })}\n      </Breadcrumbs>\n    );\n  }\n}\n\nexport default createReactClass({\n  displayName: 'ConnectedSettingsBreadcrumb',\n  mixins: [Reflux.connect(SettingsBreadcrumbStore, 'pathMap')],\n  render() {\n    return <SettingsBreadcrumb {...this.props} {...this.state} />;\n  },\n});\n\nconst Breadcrumbs = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import styled from 'react-emotion';\nimport space from 'app/styles/space';\n\nconst SettingsHeader = styled.div`\n  position: sticky;\n  top: 0;\n  z-index: ${p => p.theme.zIndex.header};\n  padding: ${space(3)} ${space(4)};\n  border-bottom: 1px solid ${p => p.theme.borderLight};\n  background: #fff;\n`;\n\nexport default SettingsHeader;\n","import {Box, Flex} from 'grid-emotion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport space from 'app/styles/space';\n\nimport SettingsBackButton from './settingsBackButton';\nimport SettingsBreadcrumb from './settingsBreadcrumb';\nimport SettingsHeader from './settingsHeader';\nimport SettingsSearch from './settingsSearch';\n\nclass SettingsLayout extends React.Component {\n  static propTypes = {\n    renderNavigation: PropTypes.func,\n    route: PropTypes.object,\n    router: PropTypes.object,\n    routes: PropTypes.array,\n  };\n\n  render() {\n    const {params, routes, route, router, renderNavigation, children} = this.props;\n    // We want child's view's props\n    const childProps = (children && children.props) || this.props;\n    const childRoutes = childProps.routes || routes || [];\n    const childRoute = childProps.route || route || {};\n    return (\n      <React.Fragment>\n        <SettingsColumn>\n          <SettingsHeader>\n            <Flex align=\"center\" width={1}>\n              <Box flex=\"1\">\n                <SettingsBreadcrumb\n                  params={params}\n                  routes={childRoutes}\n                  route={childRoute}\n                />\n              </Box>\n              <SettingsSearch routes={routes} router={router} params={params} />\n            </Flex>\n          </SettingsHeader>\n\n          <MaxWidthContainer>\n            {typeof renderNavigation === 'function' && (\n              <SidebarWrapper>\n                <SettingsBackButton />\n                <SidebarWrapperContent>{renderNavigation()}</SidebarWrapperContent>\n              </SidebarWrapper>\n            )}\n            <Content>{children}</Content>\n          </MaxWidthContainer>\n        </SettingsColumn>\n      </React.Fragment>\n    );\n  }\n}\n\nconst MaxWidthContainer = styled('div')`\n  display: flex;\n  max-width: ${p => p.theme.settings.containerWidth};\n  flex: 1;\n`;\n\nconst SidebarWrapper = styled('div')`\n  flex-shrink: 0;\n  width: ${p => p.theme.settings.sidebarWidth};\n  background: #fff;\n  border-right: 1px solid ${p => p.theme.borderLight};\n`;\n\nconst SidebarWrapperContent = styled('div')`\n  padding: ${space(4)};\n`;\n\nconst SettingsColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  flex: 1; /* so this stretches vertically so that footer is fixed at bottom */\n  footer {\n    margin-top: 0;\n  }\n`;\n\n/**\n * Note: `overflow: hidden` will cause some buttons in `SettingsPageHeader` to be cut off because it has negative margin.\n * Will also cut off tooltips.\n */\nconst Content = styled('div')`\n  flex: 1;\n  padding: ${space(4)};\n  min-width: 0; /* keep children from stretching container */\n`;\n\nexport default SettingsLayout;\n"],"sourceRoot":""}