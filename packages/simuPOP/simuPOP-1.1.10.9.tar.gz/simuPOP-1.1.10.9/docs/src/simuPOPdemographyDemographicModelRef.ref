
class DemographicModel
----------------------

.. class:: DemographicModel

   This class is the base class for all demographic models and 
   provides common interface and utility functions for derived classes. A
   demographic model is essentially a callable Python object that encapsulates
   required functions of a demographic model, to determine initial population
   size (``Population(size=model.init_size, infoFields=model.info_fields)``, 
   to determine size of offspring population during evolution (``subPopSize=model``
   of a mating scheme), and number of generations to evolve (``gen=model.num_gens``),
   although the first and last utility could be relaxed to for models that
   could be applied to populations with different sizes, and models that evolve
   indefinitely.

   .. method:: DemographicModel.DemographicModel(numGens=-1, initSize=[], ops=[], infoFields=[])

      Set attributes ``init_size``, ``info_fields``, and ``num_gens``
      to a demographic model. The initial population will be merged or
      split to match ``initSize``. For example, ``N0=[A, [B,C]]`` is a 3-subpop
      model where the last two subpopulation will be split (and resize if needed)
      from the second subpopulation of the initial subpopulation (which should
      have two subpopulations). The population size can be an integer for fixed
      population size, None for the size of the population or subpopulation when
      the demographic model is first applied to, or a float number representing
      the proportion (can be larger than 1) of individuals for the whole or
      corresponding subpopulation. A ``None`` value will be assigned to
      attribute ``init_size`` in such a case because the initial population 
      size is determined dynamically. In addition, whenever a population size
      is allowed, a tuple of ``(size, name)`` is acceptable, which assigns 
      ``name`` to the corresponding subpopulation. ``numGens`` can be a
      non-negative number or ``-1``, which allows the demographic model to 
      be determinated by a terminator. One or more operators (e.g. a migration
      operator or a terminator) could be passed (parameter ``ops``) and will
      be applied to the population. The demographic model will return ``[]``
      (which will effectively terminate the evolutioonary process) if any of the
      operator returns ``False``. Information fields required by these operators
      should be passed to ``infoFields``.

   .. method:: DemographicModel.plot(filename='', title='', initSize=[])

      Evolve a haploid population using a :class:`RandomSelection` mating scheme
      using the demographic model. Print population size changes duringe evolution.
      An initial population size could be specified using parameter ``initSize``
      for a demographic model with dynamic initial population size. If a filename
      is specified and if matplotlib is available, this function draws a figure
      to depict the demographic model and save it to ``filename``. An optional
      ``title`` could be specified to the figure. Note that this function can
      not be plot demographic models that works for particular mating schemes
      (e.g. genotype dependent).

