{"version":3,"sources":["webpack:///./app/views/settings/components/forms/textCopyInput.jsx","webpack:///./app/views/settings/projectSecurityHeaders/reportUri.jsx","webpack:///./app/components/previewFeature.jsx","webpack:///./app/views/settings/projectSecurityHeaders/index.jsx"],"names":["StyledInput","styled","props","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","target","inputStyles","p","theme","offWhite","OverflowContainer","StyledCopyButton","Button","TextCopyInput","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","handleCopyClick","e","textRef","current","onCopy","handleSelectText","children","stopPropagation","selectText","ReactDOM","findDOMNode","React","createRef","_this$props","style","grid_emotion__WEBPACK_IMPORTED_MODULE_5__","readOnly","ref","value","onClick","app_components_clipboard__WEBPACK_IMPORTED_MODULE_13__","hideUnsupported","type","size","app_components_inlineSvg__WEBPACK_IMPORTED_MODULE_14__","src","Component","propTypes","PropTypes","string","isRequired","object","func","defaultProps","getSecurityDsn","keyList","endpoint","length","dsn","security","getDynamicText","fixed","ReportUri","_this$props$params","params","orgId","projectId","react__WEBPACK_IMPORTED_MODULE_5___default","app_components_panels__WEBPACK_IMPORTED_MODULE_11__","tct","link","react_router__WEBPACK_IMPORTED_MODULE_7__","to","concat","app_views_settings_components_forms_field__WEBPACK_IMPORTED_MODULE_9__","inline","flexibleControlStateSize","app_views_settings_components_forms_textCopyInput__WEBPACK_IMPORTED_MODULE_12__","array","PreviewFeature","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","_alert__WEBPACK_IMPORTED_MODULE_10__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","icon","t","oneOf","HeaderName","ProjectSecurityHeaders","_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4___default","prototype","setProjectNavSection","name","url","recreateRoute","react__WEBPACK_IMPORTED_MODULE_8___default","app_views_settings_components_settingsPageHeader__WEBPACK_IMPORTED_MODULE_17__","title","app_components_previewFeature__WEBPACK_IMPORTED_MODULE_16__","app_views_settings_projectSecurityHeaders_reportUri__WEBPACK_IMPORTED_MODULE_15__","state","app_components_panels__WEBPACK_IMPORTED_MODULE_13__","disablePadding","app_views_settings_components_text_textBlock__WEBPACK_IMPORTED_MODULE_18__","marginBottom","key_param","className","padding","getReports","map","_ref","description","key","direction","grid_emotion__WEBPACK_IMPORTED_MODULE_6__","flex","align","app_components_button__WEBPACK_IMPORTED_MODULE_12__","priority","AsyncView"],"mappings":"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","file":"ProjectSecurityHeaders.js","sourcesContent":["import {Flex} from 'grid-emotion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'react-emotion';\n\nimport {inputStyles} from 'app/styles/input';\nimport {selectText} from 'app/utils/selectText';\nimport Button from 'app/components/button';\nimport Clipboard from 'app/components/clipboard';\nimport InlineSvg from 'app/components/inlineSvg';\n\nconst StyledInput = styled(props => {\n  return <input {...props} />;\n})`\n  ${inputStyles};\n  background-color: ${p => p.theme.offWhite};\n  border-right-width: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.offWhite};\n    border-right-width: 0;\n  }\n`;\n\nconst OverflowContainer = styled('div')`\n  flex-grow: 1;\n  border: none;\n`;\n\nconst StyledCopyButton = styled(Button)`\n  flex-shrink: 1;\n  border-radius: 0 0.25em 0.25em 0;\n  box-shadow: none;\n`;\n\nclass TextCopyInput extends React.Component {\n  static propTypes = {\n    /**\n     * Text to copy\n     */\n    children: PropTypes.string.isRequired,\n    /**\n     * CSS style object\n     */\n    style: PropTypes.object,\n    onCopy: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onCopy: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.textRef = React.createRef();\n  }\n\n  // Select text when copy button is clicked\n  handleCopyClick = e => {\n    if (!this.textRef.current) {\n      return;\n    }\n\n    const {onCopy} = this.props;\n\n    this.handleSelectText();\n\n    onCopy(this.props.children, e);\n\n    e.stopPropagation();\n  };\n\n  handleSelectText = () => {\n    if (!this.textRef.current) {\n      return;\n    }\n\n    // We use findDOMNode here because `this.textRef` is not a dom node,\n    // it's a ref to AutoSelectText\n    selectText(ReactDOM.findDOMNode(this.textRef.current));\n  };\n\n  render() {\n    const {style, children} = this.props;\n\n    return (\n      <Flex>\n        <OverflowContainer>\n          <StyledInput\n            readOnly\n            ref={this.textRef}\n            style={style}\n            value={children}\n            onClick={this.handleSelectText}\n          />\n        </OverflowContainer>\n        <Clipboard hideUnsupported onClick={this.handleCopyClick} value={children}>\n          <StyledCopyButton type=\"button\" size=\"xsmall\" onClick={this.handleCopyClick}>\n            <InlineSvg src=\"icon-clipboard\" size=\"1.25em\" />\n          </StyledCopyButton>\n        </Clipboard>\n      </Flex>\n    );\n  }\n}\n\nexport default TextCopyInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router';\n\nimport {tct} from 'app/locale';\nimport Field from 'app/views/settings/components/forms/field';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\n\nconst DEFAULT_ENDPOINT = 'https://sentry.example.com/api/security-report/';\n\nexport const getSecurityDsn = keyList => {\n  const endpoint = keyList.length ? keyList[0].dsn.security : DEFAULT_ENDPOINT;\n  return getDynamicText({\n    value: endpoint,\n    fixed: DEFAULT_ENDPOINT,\n  });\n};\n\nexport default class ReportUri extends React.Component {\n  static propTypes = {\n    keyList: PropTypes.array.isRequired,\n  };\n\n  render() {\n    const {orgId, projectId} = this.props.params;\n    return (\n      <Panel>\n        <PanelHeader>{'Report URI'}</PanelHeader>\n        <PanelBody>\n          <PanelAlert type=\"info\">\n            {tct(\n              \"We've automatically pulled these credentials from your available [link:Client Keys]\",\n              {\n                link: <Link to={`/settings/${orgId}/projects/${projectId}/keys/`} />,\n              }\n            )}\n          </PanelAlert>\n          <Field inline={false} flexibleControlStateSize>\n            <TextCopyInput>{getSecurityDsn(this.props.keyList)}</TextCopyInput>\n          </Field>\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {t} from 'app/locale';\nimport PropTypes from 'prop-types';\nimport Alert from './alert';\n\nexport default class PreviewFeature extends Component {\n  static propTypes = {\n    type: PropTypes.oneOf(['success', 'error', 'warning', 'info']),\n  };\n\n  static defaultProps = {\n    type: 'info',\n  };\n\n  render() {\n    const {type, ...props} = this.props;\n\n    return (\n      <Alert type={type} icon=\"icon-labs\" {...props}>\n        {t(\n          'This feature is a preview and may change in the future. Thanks for being an early adopter!'\n        )}\n      </Alert>\n    );\n  }\n}\n","import {Box, Flex} from 'grid-emotion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {t, tct} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport ReportUri from 'app/views/settings/projectSecurityHeaders/reportUri';\nimport PreviewFeature from 'app/components/previewFeature';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nconst HeaderName = styled.span`\n  font-size: 1.2em;\n`;\n\nexport default class ProjectSecurityHeaders extends AsyncView {\n  static propTypes = {\n    setProjectNavSection: PropTypes.func,\n  };\n\n  componentWillMount() {\n    super.componentWillMount();\n    this.props.setProjectNavSection('settings');\n  }\n\n  getEndpoints() {\n    const {orgId, projectId} = this.props.params;\n    return [['keyList', `/projects/${orgId}/${projectId}/keys/`]];\n  }\n\n  getReports() {\n    return [\n      {\n        name: 'Content Security Policy (CSP)',\n        url: recreateRoute('csp/', this.props),\n      },\n      {\n        name: 'Certificate Transparency (Expect-CT)',\n        url: recreateRoute('expect-ct/', this.props),\n      },\n      {\n        name: 'HTTP Public Key Pinning (HPKP)',\n        url: recreateRoute('hpkp/', this.props),\n      },\n    ];\n  }\n\n  renderBody() {\n    return (\n      <div>\n        <SettingsPageHeader title={t('Security Header Reports')} />\n\n        <PreviewFeature />\n\n        <ReportUri keyList={this.state.keyList} params={this.props.params} />\n\n        <Panel>\n          <PanelHeader>{t('Additional Configuration')}</PanelHeader>\n          <PanelBody disablePadding={false}>\n            <TextBlock style={{marginBottom: 20}}>\n              {tct(\n                'In addition to the [key_param] parameter, you may also pass the following within the querystring for the report URI:',\n                {\n                  key_param: <code>sentry_key</code>,\n                }\n              )}\n            </TextBlock>\n            <table className=\"table\" style={{marginBottom: 0}}>\n              <tbody>\n                <tr>\n                  <th style={{padding: '8px 5px'}}>sentry_environment</th>\n                  <td style={{padding: '8px 5px'}}>\n                    {t('The environment name (e.g. production)')}.\n                  </td>\n                </tr>\n                <tr>\n                  <th style={{padding: '8px 5px'}}>sentry_release</th>\n                  <td style={{padding: '8px 5px'}}>\n                    {t('The version of the application.')}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </PanelBody>\n        </Panel>\n\n        <Panel>\n          <PanelHeader>{t('Supported Formats')}</PanelHeader>\n          <PanelBody>\n            {this.getReports().map(({name, description, url}) => (\n              <PanelItem key={url} p={0} direction=\"column\">\n                <Flex flex=\"1\" p={2} align=\"center\">\n                  <Box flex=\"1\">\n                    <HeaderName>{name}</HeaderName>\n                  </Box>\n                  <Button to={url} priority=\"primary\">\n                    {t('Instructions')}\n                  </Button>\n                </Flex>\n              </PanelItem>\n            ))}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}