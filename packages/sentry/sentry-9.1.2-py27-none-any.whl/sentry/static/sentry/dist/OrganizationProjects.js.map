{"version":3,"sources":["webpack:///./app/views/settings/components/settingsProjectItem.jsx","webpack:///./app/views/settings/organizationProjects/projectStatsGraph.jsx","webpack:///./app/views/settings/organizationProjects/index.jsx"],"names":["react_emotion__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","create_react_class__WEBPACK_IMPORTED_MODULE_2__","create_react_class__WEBPACK_IMPORTED_MODULE_2___default","app_mixins_apiMixin__WEBPACK_IMPORTED_MODULE_3__","app_components_bookmarkStar__WEBPACK_IMPORTED_MODULE_4__","app_components_link__WEBPACK_IMPORTED_MODULE_5__","app_components_projectLabel__WEBPACK_IMPORTED_MODULE_6__","app_sentryTypes__WEBPACK_IMPORTED_MODULE_7__","app_styles_space__WEBPACK_IMPORTED_MODULE_8__","ProjectItem","createReactClass","displayName","propTypes","project","SentryTypes","Project","organization","Organization","mixins","ApiMixin","getInitialState","isBookmarked","this","props","handleToggleBookmark","setState","render","_this$props","hasNewRoutes","Set","features","has","a","createElement","Container","key","id","BookmarkLink","state","onToggle","to","concat","slug","styled","target","BookmarkStar","space","ProjectStatsGraph","stats","PropTypes","array","chartData","map","point","x","y","react_default","lib_default","height","debounce","barChart","minHeights","gap","points","label","OrganizationProjects","nextProps","nextContext","_nextProps$location","_nextProps$location$q","_this$props$location","_this$props$location$","get_default","getPrototypeOf_default","prototype","call","searchQuery","location","query","_this$props2","_this$props2$location","_this$props2$location2","orgId","params","since","Date","getTime","stat","group","_this$props3","_this$props3$location","_this$props3$location2","objectSpread_default","org","context","name","_this","_this$state","projectList","projectListPageLinks","projectStats","canCreateProjects","getOrganizationState","getAccess","action","components_button","priority","size","disabled","title","undefined","t","icon","settingsPageHeader","panels","hasButtons","renderSearchInput","updateRoute","placeholder","className","Object","index_es","width","sortProjects","i","p","align","dist_index_es","flex","settingsProjectItem","w","projectStatsGraph","length","emptyMessage","pagination","extends_default","pageLinks","AsyncView","contextTypes","router","object","isRequired"],"mappings":"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","file":"OrganizationProjects.js","sourcesContent":["import styled from 'react-emotion';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\n\nimport ApiMixin from 'app/mixins/apiMixin';\n\nimport BookmarkStar from 'app/components/bookmarkStar';\nimport Link from 'app/components/link';\nimport ProjectLabel from 'app/components/projectLabel';\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\n\nconst ProjectItem = createReactClass({\n  displayName: 'ProjectItem',\n\n  propTypes: {\n    project: SentryTypes.Project,\n    organization: SentryTypes.Organization,\n  },\n\n  mixins: [ApiMixin],\n\n  getInitialState() {\n    return {\n      isBookmarked: this.props.project.isBookmarked,\n    };\n  },\n\n  handleToggleBookmark(isBookmarked) {\n    this.setState({isBookmarked});\n  },\n\n  render() {\n    const {project, organization} = this.props;\n\n    const hasNewRoutes = new Set(organization.features).has('sentry10');\n\n    return (\n      <Container key={project.id}>\n        <BookmarkLink\n          organization={organization}\n          project={project}\n          isBookmarked={this.state.isBookmarked}\n          onToggle={this.handleToggleBookmark}\n        />\n        <Link\n          to={\n            hasNewRoutes\n              ? `/settings/${organization.slug}/projects/${project.slug}/`\n              : `/${organization.slug}/${project.slug}/`\n          }\n        >\n          <ProjectLabel project={project} />\n        </Link>\n      </Container>\n    );\n  },\n});\n\nconst Container = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst BookmarkLink = styled(BookmarkStar)`\n  margin-right: ${space(1)};\n  margin-top: -${space(0.25)};\n`;\n\nexport default ProjectItem;\n","import LazyLoad from 'react-lazyload';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport createReactClass from 'create-react-class';\n\nimport BarChart from 'app/components/barChart';\nimport SentryTypes from 'app/sentryTypes';\n\nconst ProjectStatsGraph = createReactClass({\n  displayName: 'ProjectListItem',\n\n  propTypes: {\n    project: SentryTypes.Project,\n    stats: PropTypes.array,\n  },\n\n  render() {\n    const {project} = this.props;\n    const stats = this.props.stats || project.stats;\n    const chartData =\n      stats &&\n      stats.map(point => {\n        return {x: point[0], y: point[1]};\n      });\n\n    return (\n      <div>\n        {chartData && (\n          <LazyLoad height={25} debounce={50}>\n            <BarChart\n              height={25}\n              minHeights={[3]}\n              gap={1}\n              points={chartData}\n              label=\"events\"\n            />\n          </LazyLoad>\n        )}\n      </div>\n    );\n  },\n});\n\nexport default ProjectStatsGraph;\n","import {Box} from 'grid-emotion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {getOrganizationState} from 'app/mixins/organizationState';\nimport {sortProjects} from 'app/utils';\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport AsyncView from 'app/views/asyncView';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport ProjectListItem from 'app/views/settings/components/settingsProjectItem';\nimport SentryTypes from 'app/sentryTypes';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nimport ProjectStatsGraph from './projectStatsGraph';\n\nexport default class OrganizationProjects extends AsyncView {\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n    organization: SentryTypes.Organization,\n  };\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    super.componentWillReceiveProps(nextProps, nextContext);\n    const searchQuery = nextProps?.location?.query?.query;\n    if (searchQuery !== this.props?.location?.query?.query) {\n      this.setState({searchQuery});\n    }\n  }\n\n  getEndpoints() {\n    const {orgId} = this.props.params;\n    return [\n      [\n        'projectList',\n        `/organizations/${orgId}/projects/`,\n        {\n          query: {\n            query: this.props?.location?.query?.query,\n          },\n        },\n      ],\n      [\n        'projectStats',\n        `/organizations/${orgId}/stats/`,\n        {\n          query: {\n            since: new Date().getTime() / 1000 - 3600 * 24,\n            stat: 'generated',\n            group: 'project',\n          },\n        },\n      ],\n    ];\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      searchQuery: this.props?.location?.query?.query || '',\n    };\n  }\n\n  getTitle() {\n    const org = this.context.organization;\n    return `${org.name} Projects`;\n  }\n\n  renderBody() {\n    const {projectList, projectListPageLinks, projectStats} = this.state;\n    const {organization} = this.context;\n    const canCreateProjects = getOrganizationState(this.context.organization)\n      .getAccess()\n      .has('project:admin');\n\n    const hasNewRoutes = new Set(organization.features).has('sentry10');\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        disabled={!canCreateProjects}\n        title={\n          !canCreateProjects\n            ? t('You do not have permission to create projects')\n            : undefined\n        }\n        to={`/organizations/${organization.slug}/projects/new/`}\n        icon=\"icon-circle-add\"\n      >\n        {t('Create Project')}\n      </Button>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title=\"Projects\" action={action} />\n        <Panel>\n          <PanelHeader hasButtons>\n            {t('Projects')}\n\n            {this.renderSearchInput({\n              updateRoute: true,\n              placeholder: t('Search Projects'),\n              className: 'search',\n            })}\n          </PanelHeader>\n          <PanelBody css={{width: '100%'}}>\n            {sortProjects(projectList).map((project, i) => (\n              <PanelItem p={0} key={project.id} align=\"center\">\n                <Box p={2} flex=\"1\">\n                  <ProjectListItem\n                    project={project}\n                    organization={this.context.organization}\n                  />\n                </Box>\n                <Box w={3 / 12} p={2}>\n                  <ProjectStatsGraph\n                    key={project.id}\n                    project={project}\n                    stats={projectStats[project.id]}\n                  />\n                </Box>\n                {!hasNewRoutes && (\n                  <Box p={2} align=\"right\">\n                    <Button\n                      icon=\"icon-settings\"\n                      size=\"small\"\n                      to={`/settings/${organization.slug}/projects/${project.slug}/`}\n                    >\n                      {t('Settings')}\n                    </Button>\n                  </Box>\n                )}\n              </PanelItem>\n            ))}\n            {projectList.length === 0 && (\n              <EmptyMessage>{t('No projects found.')}</EmptyMessage>\n            )}\n          </PanelBody>\n        </Panel>\n        {projectListPageLinks && (\n          <Pagination pageLinks={projectListPageLinks} {...this.props} />\n        )}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}