{"version":3,"sources":["webpack:////Users/captainsafia/github.com/nteract/nteract/packages/monaco-editor/src/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","MonacoEditor","lodash__WEBPACK_IMPORTED_MODULE_0__","monaco_editor__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","[object Object]","this","monacoContainerRef","componentWillReceiveProps","Object","monaco","props","onChange","getValue","create","current","value","language","mode","theme","minimap","enabled","autoIndent","editorFocused","focus","onDidChangeModelContent","bind","setValue","model","getModel","getModeId","setModelLanguage","setTheme","nextProps","dispose","className","ref","defaultProps"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAA,MAAAO,EAAAP,EAAA,GAYe,MAAMI,UAAqBG,EAAA,UAA1CC,kCAQEC,KAAAC,mBAAqBH,EAAA,YAErBC,qBACEC,KAAKE,0BAA4BC,OAAAP,EAAA,SAAAO,CAC/BH,KAAKE,0BACL,GAIJH,0BACMC,KAAKI,QAAUJ,KAAKK,MAAMC,UAC5BN,KAAKK,MAAMC,SAASN,KAAKI,OAAOG,YAIpCR,oBACEC,KAAKI,OAASP,EAAA,OAAOW,OAAOR,KAAKC,mBAAmBQ,QAAU,CAC5DC,MAAOV,KAAKK,MAAMK,MAClBC,SAAUX,KAAKK,MAAMO,KACrBC,MAAOb,KAAKK,MAAMQ,MAClBC,QAAS,CACPC,SAAS,GAEXC,YAAY,IAGVhB,KAAKK,MAAMY,eACbjB,KAAKI,OAAOc,QAGdlB,KAAKI,OAAOe,wBACVnB,KAAKmB,wBAAwBC,KAAKpB,OAItCD,qBACE,IAAKC,KAAKI,OACR,OAGEJ,KAAKI,OAAOG,aAAeP,KAAKK,MAAMK,OAExCV,KAAKI,OAAOiB,SAASrB,KAAKK,MAAMK,OAGlC,MAAMY,EAAQtB,KAAKI,OAAOmB,WACtBD,GAAStB,KAAKK,MAAMO,MAAQU,EAAME,cAAgBxB,KAAKK,MAAMO,MAC/Df,EAAA,OAAO4B,iBAAiBH,EAAOtB,KAAKK,MAAMO,MAGxCZ,KAAKK,MAAMQ,OACbhB,EAAA,OAAO6B,SAAS1B,KAAKK,MAAMQ,OAI/Bd,0BAA0B4B,GACpB3B,KAAKI,QAAUJ,KAAKI,OAAOG,aAAeoB,EAAUjB,OAEtDV,KAAKI,OAAOiB,SAASM,EAAUjB,OAInCX,uBACMC,KAAKI,QACPJ,KAAKI,OAAOwB,UAIhB7B,SACE,OACED,EAAA,qBAAK+B,UAAU,0BAA0BC,IAAK9B,KAAKC,sBA7EhDN,EAAAoC,aAAe,CACpBzB,SAAU,OACVW,eAAe,EACfL,KAAM","file":"monaco-editor-30e3f088795e14b02204.bundle.js","sourcesContent":["import { debounce } from \"lodash\";\nimport { editor } from \"monaco-editor\";\nimport * as React from \"react\";\n\nexport interface MonacoEditorProps {\n  theme: string;\n  mode?: string;\n  onChange: (value: string) => void;\n  value: string;\n  editorFocused: boolean;\n}\n\nexport default class MonacoEditor extends React.Component<MonacoEditorProps> {\n  static defaultProps = {\n    onChange: () => {},\n    editorFocused: false,\n    mode: \"text/plain\"\n  };\n\n  monaco?: editor.IStandaloneCodeEditor;\n  monacoContainerRef = React.createRef<HTMLDivElement>();\n\n  componentWillMount() {\n    this.componentWillReceiveProps = debounce(\n      this.componentWillReceiveProps,\n      0\n    );\n  }\n\n  onDidChangeModelContent() {\n    if (this.monaco && this.props.onChange) {\n      this.props.onChange(this.monaco.getValue());\n    }\n  }\n\n  componentDidMount() {\n    this.monaco = editor.create(this.monacoContainerRef.current!, {\n      value: this.props.value,\n      language: this.props.mode,\n      theme: this.props.theme,\n      minimap: {\n        enabled: false\n      },\n      autoIndent: true\n    });\n\n    if (this.props.editorFocused) {\n      this.monaco.focus();\n    }\n\n    this.monaco.onDidChangeModelContent(\n      this.onDidChangeModelContent.bind(this)\n    );\n  }\n\n  componentDidUpdate() {\n    if (!this.monaco) {\n      return;\n    }\n\n    if (this.monaco.getValue() !== this.props.value) {\n      // FIXME: calling setValue resets cursor position in monaco. It shouldn't!\n      this.monaco.setValue(this.props.value);\n    }\n\n    const model = this.monaco.getModel();\n    if (model && this.props.mode && model.getModeId() !== this.props.mode) {\n      editor.setModelLanguage(model, this.props.mode);\n    }\n\n    if (this.props.theme) {\n      editor.setTheme(this.props.theme);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: MonacoEditorProps) {\n    if (this.monaco && this.monaco.getValue() !== nextProps.value) {\n      // FIXME: calling setValue resets cursor position in monaco. It shouldn't!\n      this.monaco.setValue(nextProps.value);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.monaco) {\n      this.monaco.dispose();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"monaco cm-s-composition\" ref={this.monacoContainerRef} />\n    );\n  }\n}\n"],"sourceRoot":""}