Metadata-Version: 2.1
Name: ludoSim-jaib1
Version: 0.0.1
Summary: A small ludo simulator
Home-page: https://github.com/jaib1/ludoSim
Author: Jai Bhagat
Author-email: dudecmonitsme@gmail.com
License: GNU General Public License v3
Description: This repository contains code to create a simple ludo simulator in Python to settle a bet between Pip and Anna.
        
        The root folder contains this `README.md`, a `LICENSE.MD` file containing an open-source license, a `TermsOfBet.md` file outlining the terms of the bet, an image (`StandardLudoBoard.png`) containing the standard ludo board used and the positions favored by Anna and Pip for the bet, a `__init__.py` file for marking this repository as a package and initializing the package when importing, a `ludoSim_env.yml` file for setting a virtual environment in which to use this package, a `setup.py` file for configuring this repository as a distributable package, a `ClassOrganization.txt` file containing early-stage notes on source code organization, and the source code (`Board.py`, `Player.py`, `Piece.py`) that executes when running the ludo simulator. 
        
        The `analysis` folder contains code (in `analysis/gameAnalysis.py`) that is used to run 10000 games of ludo in order to determine the outcome of the bet. Running the `analysis/gameAnalysis.py` script to run 10000 games and display results took less than a minute on a Windows10 PC with an Intel core i5-6500 CPU with 16 GB DDR4-2133 RAM. Saved data from running that script exists in the `analysis/gamesResults.out` file. The data from that file can be loaded by following the instructions at the bottom of the `analysis/gameAnalysis.py` file. The `analysis` folder also contains saved figures showing results from that data.
        
        The `tests` folder contains the `tests/test_ludo.py` file which contains unit and integration tests for confirming the source code is functioning as expected. (These tests are to be run in the pytest package testing framework: to run these tests, follow the instructions in the `runTest.py` file.) 
        
        The `dist` folder contains wheel distributions for this package generated from the `setup.py` file.
        
        To run a game of ludo, navigate to the local folder where you have cloned or installed this repository, launch python, and run:
        ```
        from ludoSim import *
        b = Board() # look at the optional input args to set the board however you'd like
        b.playGame()
        ```
        
        *Note, this package was created using the Anaconda (5.3) package manager distribution (running Python 3.7), and imports some packages native to Anaconda. For best results, download and install [Anaconda](https://www.anaconda.com/distribution), navigate to the local folder where you have cloned or installed this ludoSim repository, and in your conda terminal run:*
        
        *`conda activate ludoSim_env`*
        
        *to activate the environment with the appropriate package dependencies which were used at the time this package was created*
        
        
Keywords: ludo simulator bet
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Requires-Python: >=3
Description-Content-Type: text/markdown
