{"version":3,"sources":["webpack:///./app/views/releases/detail/shared/releaseCommits.jsx"],"names":["ReleaseCommits","createReactClass","displayName","mixins","ApiMixin","getInitialState","loading","error","commitList","activeRepo","componentDidMount","_this","this","api","request","getPath","method","data","lodash_omit__WEBPACK_IMPORTED_MODULE_0___default","props","location","query","Object","values","URL_PARAM","success","_","jqXHR","setState","pageLinks","getResponseHeader","_this$props$params","params","orgId","projectId","version","encodedVersion","encodeURIComponent","concat","emptyState","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","app_components_panels__WEBPACK_IMPORTED_MODULE_3__","app_components_emptyStateWarning__WEBPACK_IMPORTED_MODULE_9__","t","setActiveRepo","repo","getCommitsByRepository","state","reduce","cbr","commit","repository","hasOwnProperty","name","push","renderCommitsForRepo","activeCommits","key","map","app_components_commitRow__WEBPACK_IMPORTED_MODULE_7__","id","render","_this2","app_components_loadingIndicator__WEBPACK_IMPORTED_MODULE_11__","app_components_loadingError__WEBPACK_IMPORTED_MODULE_10__","_this$state","length","commitsByRepository","className","keys","app_components_dropdownLink__WEBPACK_IMPORTED_MODULE_8__","caret","title","app_components_menuItem__WEBPACK_IMPORTED_MODULE_12__","noAnchor","onClick","isActive"],"mappings":"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","file":"ReleaseCommits.js","sourcesContent":["import {omit} from 'lodash';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\n\nimport {Panel, PanelHeader, PanelBody} from 'app/components/panels';\nimport {URL_PARAM} from 'app/components/organizations/globalSelectionHeader/constants';\nimport {t} from 'app/locale';\nimport ApiMixin from 'app/mixins/apiMixin';\nimport CommitRow from 'app/components/commitRow';\nimport DropdownLink from 'app/components/dropdownLink';\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport MenuItem from 'app/components/menuItem';\n\nconst ReleaseCommits = createReactClass({\n  displayName: 'ReleaseCommits',\n  mixins: [ApiMixin],\n\n  getInitialState() {\n    return {\n      loading: true,\n      error: false,\n      commitList: [],\n      activeRepo: null,\n    };\n  },\n\n  componentDidMount() {\n    this.api.request(this.getPath(), {\n      method: 'GET',\n      // We need to omit global selection header url params because they are not supported\n      data: omit(this.props.location.query, Object.values(URL_PARAM)),\n      success: (data, _, jqXHR) => {\n        this.setState({\n          error: false,\n          loading: false,\n          commitList: data,\n          pageLinks: jqXHR.getResponseHeader('Link'),\n        });\n      },\n      error: () => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      },\n    });\n  },\n\n  getPath() {\n    const {orgId, projectId, version} = this.props.params;\n\n    const encodedVersion = encodeURIComponent(version);\n\n    return projectId\n      ? `/projects/${orgId}/${projectId}/releases/${encodedVersion}/commits/`\n      : `/organizations/${orgId}/releases/${encodedVersion}/commits/`;\n  },\n\n  emptyState() {\n    return (\n      <Panel>\n        <EmptyStateWarning>\n          <p>{t('There are no commits associated with this release.')}</p>\n          {/* Todo: Should we link to repo settings from here?  */}\n        </EmptyStateWarning>\n      </Panel>\n    );\n  },\n\n  setActiveRepo(repo) {\n    this.setState({\n      activeRepo: repo,\n    });\n  },\n\n  getCommitsByRepository() {\n    const {commitList} = this.state;\n    const commitsByRepository = commitList.reduce(function(cbr, commit) {\n      const {repository} = commit;\n      if (!cbr.hasOwnProperty(repository.name)) {\n        cbr[repository.name] = [];\n      }\n\n      cbr[repository.name].push(commit);\n      return cbr;\n    }, {});\n    return commitsByRepository;\n  },\n\n  renderCommitsForRepo(repo) {\n    const commitsByRepository = this.getCommitsByRepository();\n    const activeCommits = commitsByRepository[repo];\n\n    return (\n      <Panel key={repo}>\n        <PanelHeader>{repo}</PanelHeader>\n        <PanelBody>\n          {activeCommits.map(commit => {\n            return <CommitRow key={commit.id} commit={commit} />;\n          })}\n        </PanelBody>\n      </Panel>\n    );\n  },\n\n  render() {\n    if (this.state.loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (this.state.error) {\n      return <LoadingError />;\n    }\n\n    const {commitList, activeRepo} = this.state;\n\n    if (!commitList.length) {\n      return <this.emptyState />;\n    }\n    const commitsByRepository = this.getCommitsByRepository();\n    return (\n      <div>\n        <div className=\"heading\">\n          {Object.keys(commitsByRepository).length > 1 ? (\n            <div className=\"commits-dropdown align-left\">\n              <div className=\"commits-dropdowng\">\n                <DropdownLink\n                  caret={true}\n                  title={this.state.activeRepo || 'All Repositories'}\n                >\n                  <MenuItem\n                    key=\"all\"\n                    noAnchor={true}\n                    onClick={() => {\n                      this.setActiveRepo(null);\n                    }}\n                    isActive={this.state.activeRepo === null}\n                  >\n                    <a>{t('All Repositories')}</a>\n                  </MenuItem>\n                  {Object.keys(commitsByRepository).map(repository => {\n                    return (\n                      <MenuItem\n                        key={commitsByRepository[repository].id}\n                        noAnchor={true}\n                        onClick={() => {\n                          this.setActiveRepo(repository);\n                        }}\n                        isActive={this.state.activeRepo === repository}\n                      >\n                        <a>{repository}</a>\n                      </MenuItem>\n                    );\n                  })}\n                </DropdownLink>\n              </div>\n            </div>\n          ) : null}\n        </div>\n        {activeRepo\n          ? this.renderCommitsForRepo(activeRepo)\n          : Object.keys(commitsByRepository).map(repository => {\n              return this.renderCommitsForRepo(repository);\n            })}\n      </div>\n    );\n  },\n});\n\nexport default ReleaseCommits;\n"],"sourceRoot":""}