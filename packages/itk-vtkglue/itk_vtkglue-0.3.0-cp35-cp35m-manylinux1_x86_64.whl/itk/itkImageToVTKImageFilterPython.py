# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkImageToVTKImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageToVTKImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkImageToVTKImageFilterPython
            return _itkImageToVTKImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageToVTKImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageToVTKImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageToVTKImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkVTKImageExportPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrixPython
import stdcomplexPython
import vnl_vectorPython
import itkCovariantVectorPython
import vnl_vector_refPython
import itkVectorPython
import itkPointPython
import vnl_matrix_fixedPython
import itkOffsetPython
import itkSizePython
import itkRGBAPixelPython
import itkIndexPython
import itkImageRegionPython
import itkRGBPixelPython

def itkImageToVTKImageFilterICVF43_New():
  return itkImageToVTKImageFilterICVF43.New()


def itkImageToVTKImageFilterICVF42_New():
  return itkImageToVTKImageFilterICVF42.New()


def itkImageToVTKImageFilterICVF33_New():
  return itkImageToVTKImageFilterICVF33.New()


def itkImageToVTKImageFilterICVF32_New():
  return itkImageToVTKImageFilterICVF32.New()


def itkImageToVTKImageFilterICVF23_New():
  return itkImageToVTKImageFilterICVF23.New()


def itkImageToVTKImageFilterICVF22_New():
  return itkImageToVTKImageFilterICVF22.New()


def itkImageToVTKImageFilterIVF43_New():
  return itkImageToVTKImageFilterIVF43.New()


def itkImageToVTKImageFilterIVF42_New():
  return itkImageToVTKImageFilterIVF42.New()


def itkImageToVTKImageFilterIVF33_New():
  return itkImageToVTKImageFilterIVF33.New()


def itkImageToVTKImageFilterIVF32_New():
  return itkImageToVTKImageFilterIVF32.New()


def itkImageToVTKImageFilterIVF23_New():
  return itkImageToVTKImageFilterIVF23.New()


def itkImageToVTKImageFilterIVF22_New():
  return itkImageToVTKImageFilterIVF22.New()


def itkImageToVTKImageFilterIRGBAUC3_New():
  return itkImageToVTKImageFilterIRGBAUC3.New()


def itkImageToVTKImageFilterIRGBAUC2_New():
  return itkImageToVTKImageFilterIRGBAUC2.New()


def itkImageToVTKImageFilterIRGBUC3_New():
  return itkImageToVTKImageFilterIRGBUC3.New()


def itkImageToVTKImageFilterIRGBUC2_New():
  return itkImageToVTKImageFilterIRGBUC2.New()


def itkImageToVTKImageFilterIF3_New():
  return itkImageToVTKImageFilterIF3.New()


def itkImageToVTKImageFilterIF2_New():
  return itkImageToVTKImageFilterIF2.New()


def itkImageToVTKImageFilterIUS3_New():
  return itkImageToVTKImageFilterIUS3.New()


def itkImageToVTKImageFilterIUS2_New():
  return itkImageToVTKImageFilterIUS2.New()


def itkImageToVTKImageFilterISS3_New():
  return itkImageToVTKImageFilterISS3.New()


def itkImageToVTKImageFilterISS2_New():
  return itkImageToVTKImageFilterISS2.New()


def itkImageToVTKImageFilterIUL3_New():
  return itkImageToVTKImageFilterIUL3.New()


def itkImageToVTKImageFilterIUL2_New():
  return itkImageToVTKImageFilterIUL2.New()


def itkImageToVTKImageFilterIUC3_New():
  return itkImageToVTKImageFilterIUC3.New()


def itkImageToVTKImageFilterIUC2_New():
  return itkImageToVTKImageFilterIUC2.New()

class itkImageToVTKImageFilterICVF22(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterICVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterICVF22_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterICVF22_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterICVF22_Pointer":
        """Clone(itkImageToVTKImageFilterICVF22 self) -> itkImageToVTKImageFilterICVF22_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterICVF22 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_GetOutput(self)


    def SetInput(self, arg0: 'itkImageCVF22') -> "void":
        """SetInput(itkImageToVTKImageFilterICVF22 self, itkImageCVF22 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_SetInput(self, arg0)


    def GetInput(self) -> "itkImageCVF22 *":
        """GetInput(itkImageToVTKImageFilterICVF22 self) -> itkImageCVF22"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterICVF22 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportICVF22 *":
        """GetExporter(itkImageToVTKImageFilterICVF22 self) -> itkVTKImageExportICVF22"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterICVF22

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterICVF22 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterICVF22"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterICVF22

        Create a new object of the class itkImageToVTKImageFilterICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterICVF22.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_Clone, None, itkImageToVTKImageFilterICVF22)
itkImageToVTKImageFilterICVF22.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_GetOutput, None, itkImageToVTKImageFilterICVF22)
itkImageToVTKImageFilterICVF22.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_SetInput, None, itkImageToVTKImageFilterICVF22)
itkImageToVTKImageFilterICVF22.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_GetInput, None, itkImageToVTKImageFilterICVF22)
itkImageToVTKImageFilterICVF22.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_GetImporter, None, itkImageToVTKImageFilterICVF22)
itkImageToVTKImageFilterICVF22.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_GetExporter, None, itkImageToVTKImageFilterICVF22)
itkImageToVTKImageFilterICVF22_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_swigregister
itkImageToVTKImageFilterICVF22_swigregister(itkImageToVTKImageFilterICVF22)

def itkImageToVTKImageFilterICVF22___New_orig__() -> "itkImageToVTKImageFilterICVF22_Pointer":
    """itkImageToVTKImageFilterICVF22___New_orig__() -> itkImageToVTKImageFilterICVF22_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22___New_orig__()

def itkImageToVTKImageFilterICVF22_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterICVF22 *":
    """itkImageToVTKImageFilterICVF22_cast(itkLightObject obj) -> itkImageToVTKImageFilterICVF22"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF22_cast(obj)

class itkImageToVTKImageFilterICVF23(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterICVF23 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterICVF23_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterICVF23_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterICVF23_Pointer":
        """Clone(itkImageToVTKImageFilterICVF23 self) -> itkImageToVTKImageFilterICVF23_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterICVF23 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_GetOutput(self)


    def SetInput(self, arg0: 'itkImageCVF23') -> "void":
        """SetInput(itkImageToVTKImageFilterICVF23 self, itkImageCVF23 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_SetInput(self, arg0)


    def GetInput(self) -> "itkImageCVF23 *":
        """GetInput(itkImageToVTKImageFilterICVF23 self) -> itkImageCVF23"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterICVF23 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportICVF23 *":
        """GetExporter(itkImageToVTKImageFilterICVF23 self) -> itkVTKImageExportICVF23"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterICVF23

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterICVF23 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterICVF23"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterICVF23

        Create a new object of the class itkImageToVTKImageFilterICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterICVF23.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_Clone, None, itkImageToVTKImageFilterICVF23)
itkImageToVTKImageFilterICVF23.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_GetOutput, None, itkImageToVTKImageFilterICVF23)
itkImageToVTKImageFilterICVF23.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_SetInput, None, itkImageToVTKImageFilterICVF23)
itkImageToVTKImageFilterICVF23.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_GetInput, None, itkImageToVTKImageFilterICVF23)
itkImageToVTKImageFilterICVF23.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_GetImporter, None, itkImageToVTKImageFilterICVF23)
itkImageToVTKImageFilterICVF23.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_GetExporter, None, itkImageToVTKImageFilterICVF23)
itkImageToVTKImageFilterICVF23_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_swigregister
itkImageToVTKImageFilterICVF23_swigregister(itkImageToVTKImageFilterICVF23)

def itkImageToVTKImageFilterICVF23___New_orig__() -> "itkImageToVTKImageFilterICVF23_Pointer":
    """itkImageToVTKImageFilterICVF23___New_orig__() -> itkImageToVTKImageFilterICVF23_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23___New_orig__()

def itkImageToVTKImageFilterICVF23_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterICVF23 *":
    """itkImageToVTKImageFilterICVF23_cast(itkLightObject obj) -> itkImageToVTKImageFilterICVF23"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF23_cast(obj)

class itkImageToVTKImageFilterICVF32(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterICVF32 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterICVF32_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterICVF32_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterICVF32_Pointer":
        """Clone(itkImageToVTKImageFilterICVF32 self) -> itkImageToVTKImageFilterICVF32_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterICVF32 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_GetOutput(self)


    def SetInput(self, arg0: 'itkImageCVF32') -> "void":
        """SetInput(itkImageToVTKImageFilterICVF32 self, itkImageCVF32 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_SetInput(self, arg0)


    def GetInput(self) -> "itkImageCVF32 *":
        """GetInput(itkImageToVTKImageFilterICVF32 self) -> itkImageCVF32"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterICVF32 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportICVF32 *":
        """GetExporter(itkImageToVTKImageFilterICVF32 self) -> itkVTKImageExportICVF32"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterICVF32

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterICVF32 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterICVF32"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterICVF32

        Create a new object of the class itkImageToVTKImageFilterICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterICVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterICVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterICVF32.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_Clone, None, itkImageToVTKImageFilterICVF32)
itkImageToVTKImageFilterICVF32.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_GetOutput, None, itkImageToVTKImageFilterICVF32)
itkImageToVTKImageFilterICVF32.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_SetInput, None, itkImageToVTKImageFilterICVF32)
itkImageToVTKImageFilterICVF32.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_GetInput, None, itkImageToVTKImageFilterICVF32)
itkImageToVTKImageFilterICVF32.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_GetImporter, None, itkImageToVTKImageFilterICVF32)
itkImageToVTKImageFilterICVF32.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_GetExporter, None, itkImageToVTKImageFilterICVF32)
itkImageToVTKImageFilterICVF32_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_swigregister
itkImageToVTKImageFilterICVF32_swigregister(itkImageToVTKImageFilterICVF32)

def itkImageToVTKImageFilterICVF32___New_orig__() -> "itkImageToVTKImageFilterICVF32_Pointer":
    """itkImageToVTKImageFilterICVF32___New_orig__() -> itkImageToVTKImageFilterICVF32_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32___New_orig__()

def itkImageToVTKImageFilterICVF32_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterICVF32 *":
    """itkImageToVTKImageFilterICVF32_cast(itkLightObject obj) -> itkImageToVTKImageFilterICVF32"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF32_cast(obj)

class itkImageToVTKImageFilterICVF33(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterICVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterICVF33_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterICVF33_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterICVF33_Pointer":
        """Clone(itkImageToVTKImageFilterICVF33 self) -> itkImageToVTKImageFilterICVF33_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterICVF33 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_GetOutput(self)


    def SetInput(self, arg0: 'itkImageCVF33') -> "void":
        """SetInput(itkImageToVTKImageFilterICVF33 self, itkImageCVF33 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_SetInput(self, arg0)


    def GetInput(self) -> "itkImageCVF33 *":
        """GetInput(itkImageToVTKImageFilterICVF33 self) -> itkImageCVF33"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterICVF33 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportICVF33 *":
        """GetExporter(itkImageToVTKImageFilterICVF33 self) -> itkVTKImageExportICVF33"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterICVF33

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterICVF33 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterICVF33"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterICVF33

        Create a new object of the class itkImageToVTKImageFilterICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterICVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterICVF33.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_Clone, None, itkImageToVTKImageFilterICVF33)
itkImageToVTKImageFilterICVF33.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_GetOutput, None, itkImageToVTKImageFilterICVF33)
itkImageToVTKImageFilterICVF33.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_SetInput, None, itkImageToVTKImageFilterICVF33)
itkImageToVTKImageFilterICVF33.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_GetInput, None, itkImageToVTKImageFilterICVF33)
itkImageToVTKImageFilterICVF33.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_GetImporter, None, itkImageToVTKImageFilterICVF33)
itkImageToVTKImageFilterICVF33.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_GetExporter, None, itkImageToVTKImageFilterICVF33)
itkImageToVTKImageFilterICVF33_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_swigregister
itkImageToVTKImageFilterICVF33_swigregister(itkImageToVTKImageFilterICVF33)

def itkImageToVTKImageFilterICVF33___New_orig__() -> "itkImageToVTKImageFilterICVF33_Pointer":
    """itkImageToVTKImageFilterICVF33___New_orig__() -> itkImageToVTKImageFilterICVF33_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33___New_orig__()

def itkImageToVTKImageFilterICVF33_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterICVF33 *":
    """itkImageToVTKImageFilterICVF33_cast(itkLightObject obj) -> itkImageToVTKImageFilterICVF33"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF33_cast(obj)

class itkImageToVTKImageFilterICVF42(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterICVF42 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterICVF42_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterICVF42_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterICVF42_Pointer":
        """Clone(itkImageToVTKImageFilterICVF42 self) -> itkImageToVTKImageFilterICVF42_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterICVF42 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_GetOutput(self)


    def SetInput(self, arg0: 'itkImageCVF42') -> "void":
        """SetInput(itkImageToVTKImageFilterICVF42 self, itkImageCVF42 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_SetInput(self, arg0)


    def GetInput(self) -> "itkImageCVF42 *":
        """GetInput(itkImageToVTKImageFilterICVF42 self) -> itkImageCVF42"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterICVF42 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportICVF42 *":
        """GetExporter(itkImageToVTKImageFilterICVF42 self) -> itkVTKImageExportICVF42"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterICVF42

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterICVF42 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterICVF42"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterICVF42

        Create a new object of the class itkImageToVTKImageFilterICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterICVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterICVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterICVF42.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_Clone, None, itkImageToVTKImageFilterICVF42)
itkImageToVTKImageFilterICVF42.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_GetOutput, None, itkImageToVTKImageFilterICVF42)
itkImageToVTKImageFilterICVF42.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_SetInput, None, itkImageToVTKImageFilterICVF42)
itkImageToVTKImageFilterICVF42.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_GetInput, None, itkImageToVTKImageFilterICVF42)
itkImageToVTKImageFilterICVF42.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_GetImporter, None, itkImageToVTKImageFilterICVF42)
itkImageToVTKImageFilterICVF42.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_GetExporter, None, itkImageToVTKImageFilterICVF42)
itkImageToVTKImageFilterICVF42_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_swigregister
itkImageToVTKImageFilterICVF42_swigregister(itkImageToVTKImageFilterICVF42)

def itkImageToVTKImageFilterICVF42___New_orig__() -> "itkImageToVTKImageFilterICVF42_Pointer":
    """itkImageToVTKImageFilterICVF42___New_orig__() -> itkImageToVTKImageFilterICVF42_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42___New_orig__()

def itkImageToVTKImageFilterICVF42_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterICVF42 *":
    """itkImageToVTKImageFilterICVF42_cast(itkLightObject obj) -> itkImageToVTKImageFilterICVF42"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF42_cast(obj)

class itkImageToVTKImageFilterICVF43(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterICVF43 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterICVF43_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterICVF43_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterICVF43_Pointer":
        """Clone(itkImageToVTKImageFilterICVF43 self) -> itkImageToVTKImageFilterICVF43_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterICVF43 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_GetOutput(self)


    def SetInput(self, arg0: 'itkImageCVF43') -> "void":
        """SetInput(itkImageToVTKImageFilterICVF43 self, itkImageCVF43 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_SetInput(self, arg0)


    def GetInput(self) -> "itkImageCVF43 *":
        """GetInput(itkImageToVTKImageFilterICVF43 self) -> itkImageCVF43"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterICVF43 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportICVF43 *":
        """GetExporter(itkImageToVTKImageFilterICVF43 self) -> itkVTKImageExportICVF43"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterICVF43

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterICVF43 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterICVF43"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterICVF43

        Create a new object of the class itkImageToVTKImageFilterICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterICVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterICVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterICVF43.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_Clone, None, itkImageToVTKImageFilterICVF43)
itkImageToVTKImageFilterICVF43.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_GetOutput, None, itkImageToVTKImageFilterICVF43)
itkImageToVTKImageFilterICVF43.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_SetInput, None, itkImageToVTKImageFilterICVF43)
itkImageToVTKImageFilterICVF43.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_GetInput, None, itkImageToVTKImageFilterICVF43)
itkImageToVTKImageFilterICVF43.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_GetImporter, None, itkImageToVTKImageFilterICVF43)
itkImageToVTKImageFilterICVF43.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_GetExporter, None, itkImageToVTKImageFilterICVF43)
itkImageToVTKImageFilterICVF43_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_swigregister
itkImageToVTKImageFilterICVF43_swigregister(itkImageToVTKImageFilterICVF43)

def itkImageToVTKImageFilterICVF43___New_orig__() -> "itkImageToVTKImageFilterICVF43_Pointer":
    """itkImageToVTKImageFilterICVF43___New_orig__() -> itkImageToVTKImageFilterICVF43_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43___New_orig__()

def itkImageToVTKImageFilterICVF43_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterICVF43 *":
    """itkImageToVTKImageFilterICVF43_cast(itkLightObject obj) -> itkImageToVTKImageFilterICVF43"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterICVF43_cast(obj)

class itkImageToVTKImageFilterIF2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIF2_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIF2_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIF2_Pointer":
        """Clone(itkImageToVTKImageFilterIF2 self) -> itkImageToVTKImageFilterIF2_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIF2 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetOutput(self)


    def SetInput(self, arg0: 'itkImageF2') -> "void":
        """SetInput(itkImageToVTKImageFilterIF2 self, itkImageF2 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_SetInput(self, arg0)


    def GetInput(self) -> "itkImageF2 *":
        """GetInput(itkImageToVTKImageFilterIF2 self) -> itkImageF2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIF2 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIF2 *":
        """GetExporter(itkImageToVTKImageFilterIF2 self) -> itkVTKImageExportIF2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIF2

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIF2 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIF2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIF2

        Create a new object of the class itkImageToVTKImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIF2.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_Clone, None, itkImageToVTKImageFilterIF2)
itkImageToVTKImageFilterIF2.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetOutput, None, itkImageToVTKImageFilterIF2)
itkImageToVTKImageFilterIF2.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_SetInput, None, itkImageToVTKImageFilterIF2)
itkImageToVTKImageFilterIF2.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetInput, None, itkImageToVTKImageFilterIF2)
itkImageToVTKImageFilterIF2.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetImporter, None, itkImageToVTKImageFilterIF2)
itkImageToVTKImageFilterIF2.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetExporter, None, itkImageToVTKImageFilterIF2)
itkImageToVTKImageFilterIF2_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_swigregister
itkImageToVTKImageFilterIF2_swigregister(itkImageToVTKImageFilterIF2)

def itkImageToVTKImageFilterIF2___New_orig__() -> "itkImageToVTKImageFilterIF2_Pointer":
    """itkImageToVTKImageFilterIF2___New_orig__() -> itkImageToVTKImageFilterIF2_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2___New_orig__()

def itkImageToVTKImageFilterIF2_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIF2 *":
    """itkImageToVTKImageFilterIF2_cast(itkLightObject obj) -> itkImageToVTKImageFilterIF2"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_cast(obj)

class itkImageToVTKImageFilterIF3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIF3_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIF3_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIF3_Pointer":
        """Clone(itkImageToVTKImageFilterIF3 self) -> itkImageToVTKImageFilterIF3_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIF3 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetOutput(self)


    def SetInput(self, arg0: 'itkImageF3') -> "void":
        """SetInput(itkImageToVTKImageFilterIF3 self, itkImageF3 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_SetInput(self, arg0)


    def GetInput(self) -> "itkImageF3 *":
        """GetInput(itkImageToVTKImageFilterIF3 self) -> itkImageF3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIF3 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIF3 *":
        """GetExporter(itkImageToVTKImageFilterIF3 self) -> itkVTKImageExportIF3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIF3

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIF3 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIF3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIF3

        Create a new object of the class itkImageToVTKImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIF3.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_Clone, None, itkImageToVTKImageFilterIF3)
itkImageToVTKImageFilterIF3.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetOutput, None, itkImageToVTKImageFilterIF3)
itkImageToVTKImageFilterIF3.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_SetInput, None, itkImageToVTKImageFilterIF3)
itkImageToVTKImageFilterIF3.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetInput, None, itkImageToVTKImageFilterIF3)
itkImageToVTKImageFilterIF3.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetImporter, None, itkImageToVTKImageFilterIF3)
itkImageToVTKImageFilterIF3.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetExporter, None, itkImageToVTKImageFilterIF3)
itkImageToVTKImageFilterIF3_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_swigregister
itkImageToVTKImageFilterIF3_swigregister(itkImageToVTKImageFilterIF3)

def itkImageToVTKImageFilterIF3___New_orig__() -> "itkImageToVTKImageFilterIF3_Pointer":
    """itkImageToVTKImageFilterIF3___New_orig__() -> itkImageToVTKImageFilterIF3_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3___New_orig__()

def itkImageToVTKImageFilterIF3_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIF3 *":
    """itkImageToVTKImageFilterIF3_cast(itkLightObject obj) -> itkImageToVTKImageFilterIF3"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_cast(obj)

class itkImageToVTKImageFilterIRGBAUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIRGBAUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIRGBAUC2_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIRGBAUC2_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIRGBAUC2_Pointer":
        """Clone(itkImageToVTKImageFilterIRGBAUC2 self) -> itkImageToVTKImageFilterIRGBAUC2_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIRGBAUC2 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_GetOutput(self)


    def SetInput(self, arg0: 'itkImageRGBAUC2') -> "void":
        """SetInput(itkImageToVTKImageFilterIRGBAUC2 self, itkImageRGBAUC2 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_SetInput(self, arg0)


    def GetInput(self) -> "itkImageRGBAUC2 *":
        """GetInput(itkImageToVTKImageFilterIRGBAUC2 self) -> itkImageRGBAUC2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIRGBAUC2 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIRGBAUC2 *":
        """GetExporter(itkImageToVTKImageFilterIRGBAUC2 self) -> itkVTKImageExportIRGBAUC2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIRGBAUC2

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIRGBAUC2 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIRGBAUC2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIRGBAUC2

        Create a new object of the class itkImageToVTKImageFilterIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIRGBAUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIRGBAUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIRGBAUC2.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_Clone, None, itkImageToVTKImageFilterIRGBAUC2)
itkImageToVTKImageFilterIRGBAUC2.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_GetOutput, None, itkImageToVTKImageFilterIRGBAUC2)
itkImageToVTKImageFilterIRGBAUC2.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_SetInput, None, itkImageToVTKImageFilterIRGBAUC2)
itkImageToVTKImageFilterIRGBAUC2.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_GetInput, None, itkImageToVTKImageFilterIRGBAUC2)
itkImageToVTKImageFilterIRGBAUC2.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_GetImporter, None, itkImageToVTKImageFilterIRGBAUC2)
itkImageToVTKImageFilterIRGBAUC2.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_GetExporter, None, itkImageToVTKImageFilterIRGBAUC2)
itkImageToVTKImageFilterIRGBAUC2_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_swigregister
itkImageToVTKImageFilterIRGBAUC2_swigregister(itkImageToVTKImageFilterIRGBAUC2)

def itkImageToVTKImageFilterIRGBAUC2___New_orig__() -> "itkImageToVTKImageFilterIRGBAUC2_Pointer":
    """itkImageToVTKImageFilterIRGBAUC2___New_orig__() -> itkImageToVTKImageFilterIRGBAUC2_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2___New_orig__()

def itkImageToVTKImageFilterIRGBAUC2_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIRGBAUC2 *":
    """itkImageToVTKImageFilterIRGBAUC2_cast(itkLightObject obj) -> itkImageToVTKImageFilterIRGBAUC2"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC2_cast(obj)

class itkImageToVTKImageFilterIRGBAUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIRGBAUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIRGBAUC3_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIRGBAUC3_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIRGBAUC3_Pointer":
        """Clone(itkImageToVTKImageFilterIRGBAUC3 self) -> itkImageToVTKImageFilterIRGBAUC3_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIRGBAUC3 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_GetOutput(self)


    def SetInput(self, arg0: 'itkImageRGBAUC3') -> "void":
        """SetInput(itkImageToVTKImageFilterIRGBAUC3 self, itkImageRGBAUC3 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_SetInput(self, arg0)


    def GetInput(self) -> "itkImageRGBAUC3 *":
        """GetInput(itkImageToVTKImageFilterIRGBAUC3 self) -> itkImageRGBAUC3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIRGBAUC3 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIRGBAUC3 *":
        """GetExporter(itkImageToVTKImageFilterIRGBAUC3 self) -> itkVTKImageExportIRGBAUC3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIRGBAUC3

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIRGBAUC3 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIRGBAUC3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIRGBAUC3

        Create a new object of the class itkImageToVTKImageFilterIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIRGBAUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIRGBAUC3.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_Clone, None, itkImageToVTKImageFilterIRGBAUC3)
itkImageToVTKImageFilterIRGBAUC3.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_GetOutput, None, itkImageToVTKImageFilterIRGBAUC3)
itkImageToVTKImageFilterIRGBAUC3.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_SetInput, None, itkImageToVTKImageFilterIRGBAUC3)
itkImageToVTKImageFilterIRGBAUC3.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_GetInput, None, itkImageToVTKImageFilterIRGBAUC3)
itkImageToVTKImageFilterIRGBAUC3.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_GetImporter, None, itkImageToVTKImageFilterIRGBAUC3)
itkImageToVTKImageFilterIRGBAUC3.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_GetExporter, None, itkImageToVTKImageFilterIRGBAUC3)
itkImageToVTKImageFilterIRGBAUC3_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_swigregister
itkImageToVTKImageFilterIRGBAUC3_swigregister(itkImageToVTKImageFilterIRGBAUC3)

def itkImageToVTKImageFilterIRGBAUC3___New_orig__() -> "itkImageToVTKImageFilterIRGBAUC3_Pointer":
    """itkImageToVTKImageFilterIRGBAUC3___New_orig__() -> itkImageToVTKImageFilterIRGBAUC3_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3___New_orig__()

def itkImageToVTKImageFilterIRGBAUC3_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIRGBAUC3 *":
    """itkImageToVTKImageFilterIRGBAUC3_cast(itkLightObject obj) -> itkImageToVTKImageFilterIRGBAUC3"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBAUC3_cast(obj)

class itkImageToVTKImageFilterIRGBUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIRGBUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIRGBUC2_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIRGBUC2_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIRGBUC2_Pointer":
        """Clone(itkImageToVTKImageFilterIRGBUC2 self) -> itkImageToVTKImageFilterIRGBUC2_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIRGBUC2 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_GetOutput(self)


    def SetInput(self, arg0: 'itkImageRGBUC2') -> "void":
        """SetInput(itkImageToVTKImageFilterIRGBUC2 self, itkImageRGBUC2 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_SetInput(self, arg0)


    def GetInput(self) -> "itkImageRGBUC2 *":
        """GetInput(itkImageToVTKImageFilterIRGBUC2 self) -> itkImageRGBUC2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIRGBUC2 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIRGBUC2 *":
        """GetExporter(itkImageToVTKImageFilterIRGBUC2 self) -> itkVTKImageExportIRGBUC2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIRGBUC2

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIRGBUC2 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIRGBUC2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIRGBUC2

        Create a new object of the class itkImageToVTKImageFilterIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIRGBUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIRGBUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIRGBUC2.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_Clone, None, itkImageToVTKImageFilterIRGBUC2)
itkImageToVTKImageFilterIRGBUC2.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_GetOutput, None, itkImageToVTKImageFilterIRGBUC2)
itkImageToVTKImageFilterIRGBUC2.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_SetInput, None, itkImageToVTKImageFilterIRGBUC2)
itkImageToVTKImageFilterIRGBUC2.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_GetInput, None, itkImageToVTKImageFilterIRGBUC2)
itkImageToVTKImageFilterIRGBUC2.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_GetImporter, None, itkImageToVTKImageFilterIRGBUC2)
itkImageToVTKImageFilterIRGBUC2.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_GetExporter, None, itkImageToVTKImageFilterIRGBUC2)
itkImageToVTKImageFilterIRGBUC2_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_swigregister
itkImageToVTKImageFilterIRGBUC2_swigregister(itkImageToVTKImageFilterIRGBUC2)

def itkImageToVTKImageFilterIRGBUC2___New_orig__() -> "itkImageToVTKImageFilterIRGBUC2_Pointer":
    """itkImageToVTKImageFilterIRGBUC2___New_orig__() -> itkImageToVTKImageFilterIRGBUC2_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2___New_orig__()

def itkImageToVTKImageFilterIRGBUC2_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIRGBUC2 *":
    """itkImageToVTKImageFilterIRGBUC2_cast(itkLightObject obj) -> itkImageToVTKImageFilterIRGBUC2"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC2_cast(obj)

class itkImageToVTKImageFilterIRGBUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIRGBUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIRGBUC3_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIRGBUC3_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIRGBUC3_Pointer":
        """Clone(itkImageToVTKImageFilterIRGBUC3 self) -> itkImageToVTKImageFilterIRGBUC3_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIRGBUC3 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_GetOutput(self)


    def SetInput(self, arg0: 'itkImageRGBUC3') -> "void":
        """SetInput(itkImageToVTKImageFilterIRGBUC3 self, itkImageRGBUC3 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_SetInput(self, arg0)


    def GetInput(self) -> "itkImageRGBUC3 *":
        """GetInput(itkImageToVTKImageFilterIRGBUC3 self) -> itkImageRGBUC3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIRGBUC3 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIRGBUC3 *":
        """GetExporter(itkImageToVTKImageFilterIRGBUC3 self) -> itkVTKImageExportIRGBUC3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIRGBUC3

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIRGBUC3 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIRGBUC3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIRGBUC3

        Create a new object of the class itkImageToVTKImageFilterIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIRGBUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIRGBUC3.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_Clone, None, itkImageToVTKImageFilterIRGBUC3)
itkImageToVTKImageFilterIRGBUC3.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_GetOutput, None, itkImageToVTKImageFilterIRGBUC3)
itkImageToVTKImageFilterIRGBUC3.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_SetInput, None, itkImageToVTKImageFilterIRGBUC3)
itkImageToVTKImageFilterIRGBUC3.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_GetInput, None, itkImageToVTKImageFilterIRGBUC3)
itkImageToVTKImageFilterIRGBUC3.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_GetImporter, None, itkImageToVTKImageFilterIRGBUC3)
itkImageToVTKImageFilterIRGBUC3.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_GetExporter, None, itkImageToVTKImageFilterIRGBUC3)
itkImageToVTKImageFilterIRGBUC3_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_swigregister
itkImageToVTKImageFilterIRGBUC3_swigregister(itkImageToVTKImageFilterIRGBUC3)

def itkImageToVTKImageFilterIRGBUC3___New_orig__() -> "itkImageToVTKImageFilterIRGBUC3_Pointer":
    """itkImageToVTKImageFilterIRGBUC3___New_orig__() -> itkImageToVTKImageFilterIRGBUC3_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3___New_orig__()

def itkImageToVTKImageFilterIRGBUC3_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIRGBUC3 *":
    """itkImageToVTKImageFilterIRGBUC3_cast(itkLightObject obj) -> itkImageToVTKImageFilterIRGBUC3"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIRGBUC3_cast(obj)

class itkImageToVTKImageFilterISS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterISS2_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterISS2_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterISS2_Pointer":
        """Clone(itkImageToVTKImageFilterISS2 self) -> itkImageToVTKImageFilterISS2_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterISS2 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_GetOutput(self)


    def SetInput(self, arg0: 'itkImageSS2') -> "void":
        """SetInput(itkImageToVTKImageFilterISS2 self, itkImageSS2 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_SetInput(self, arg0)


    def GetInput(self) -> "itkImageSS2 *":
        """GetInput(itkImageToVTKImageFilterISS2 self) -> itkImageSS2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterISS2 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportISS2 *":
        """GetExporter(itkImageToVTKImageFilterISS2 self) -> itkVTKImageExportISS2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterISS2

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterISS2 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterISS2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterISS2

        Create a new object of the class itkImageToVTKImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterISS2.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_Clone, None, itkImageToVTKImageFilterISS2)
itkImageToVTKImageFilterISS2.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_GetOutput, None, itkImageToVTKImageFilterISS2)
itkImageToVTKImageFilterISS2.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_SetInput, None, itkImageToVTKImageFilterISS2)
itkImageToVTKImageFilterISS2.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_GetInput, None, itkImageToVTKImageFilterISS2)
itkImageToVTKImageFilterISS2.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_GetImporter, None, itkImageToVTKImageFilterISS2)
itkImageToVTKImageFilterISS2.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_GetExporter, None, itkImageToVTKImageFilterISS2)
itkImageToVTKImageFilterISS2_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_swigregister
itkImageToVTKImageFilterISS2_swigregister(itkImageToVTKImageFilterISS2)

def itkImageToVTKImageFilterISS2___New_orig__() -> "itkImageToVTKImageFilterISS2_Pointer":
    """itkImageToVTKImageFilterISS2___New_orig__() -> itkImageToVTKImageFilterISS2_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2___New_orig__()

def itkImageToVTKImageFilterISS2_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterISS2 *":
    """itkImageToVTKImageFilterISS2_cast(itkLightObject obj) -> itkImageToVTKImageFilterISS2"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS2_cast(obj)

class itkImageToVTKImageFilterISS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterISS3_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterISS3_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterISS3_Pointer":
        """Clone(itkImageToVTKImageFilterISS3 self) -> itkImageToVTKImageFilterISS3_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterISS3 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_GetOutput(self)


    def SetInput(self, arg0: 'itkImageSS3') -> "void":
        """SetInput(itkImageToVTKImageFilterISS3 self, itkImageSS3 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_SetInput(self, arg0)


    def GetInput(self) -> "itkImageSS3 *":
        """GetInput(itkImageToVTKImageFilterISS3 self) -> itkImageSS3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterISS3 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportISS3 *":
        """GetExporter(itkImageToVTKImageFilterISS3 self) -> itkVTKImageExportISS3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterISS3

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterISS3 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterISS3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterISS3

        Create a new object of the class itkImageToVTKImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterISS3.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_Clone, None, itkImageToVTKImageFilterISS3)
itkImageToVTKImageFilterISS3.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_GetOutput, None, itkImageToVTKImageFilterISS3)
itkImageToVTKImageFilterISS3.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_SetInput, None, itkImageToVTKImageFilterISS3)
itkImageToVTKImageFilterISS3.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_GetInput, None, itkImageToVTKImageFilterISS3)
itkImageToVTKImageFilterISS3.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_GetImporter, None, itkImageToVTKImageFilterISS3)
itkImageToVTKImageFilterISS3.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_GetExporter, None, itkImageToVTKImageFilterISS3)
itkImageToVTKImageFilterISS3_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_swigregister
itkImageToVTKImageFilterISS3_swigregister(itkImageToVTKImageFilterISS3)

def itkImageToVTKImageFilterISS3___New_orig__() -> "itkImageToVTKImageFilterISS3_Pointer":
    """itkImageToVTKImageFilterISS3___New_orig__() -> itkImageToVTKImageFilterISS3_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3___New_orig__()

def itkImageToVTKImageFilterISS3_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterISS3 *":
    """itkImageToVTKImageFilterISS3_cast(itkLightObject obj) -> itkImageToVTKImageFilterISS3"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterISS3_cast(obj)

class itkImageToVTKImageFilterIUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIUC2_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIUC2_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIUC2_Pointer":
        """Clone(itkImageToVTKImageFilterIUC2 self) -> itkImageToVTKImageFilterIUC2_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIUC2 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetOutput(self)


    def SetInput(self, arg0: 'itkImageUC2') -> "void":
        """SetInput(itkImageToVTKImageFilterIUC2 self, itkImageUC2 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_SetInput(self, arg0)


    def GetInput(self) -> "itkImageUC2 *":
        """GetInput(itkImageToVTKImageFilterIUC2 self) -> itkImageUC2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIUC2 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIUC2 *":
        """GetExporter(itkImageToVTKImageFilterIUC2 self) -> itkVTKImageExportIUC2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIUC2

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIUC2 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIUC2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIUC2

        Create a new object of the class itkImageToVTKImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIUC2.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_Clone, None, itkImageToVTKImageFilterIUC2)
itkImageToVTKImageFilterIUC2.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetOutput, None, itkImageToVTKImageFilterIUC2)
itkImageToVTKImageFilterIUC2.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_SetInput, None, itkImageToVTKImageFilterIUC2)
itkImageToVTKImageFilterIUC2.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetInput, None, itkImageToVTKImageFilterIUC2)
itkImageToVTKImageFilterIUC2.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetImporter, None, itkImageToVTKImageFilterIUC2)
itkImageToVTKImageFilterIUC2.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetExporter, None, itkImageToVTKImageFilterIUC2)
itkImageToVTKImageFilterIUC2_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_swigregister
itkImageToVTKImageFilterIUC2_swigregister(itkImageToVTKImageFilterIUC2)

def itkImageToVTKImageFilterIUC2___New_orig__() -> "itkImageToVTKImageFilterIUC2_Pointer":
    """itkImageToVTKImageFilterIUC2___New_orig__() -> itkImageToVTKImageFilterIUC2_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2___New_orig__()

def itkImageToVTKImageFilterIUC2_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIUC2 *":
    """itkImageToVTKImageFilterIUC2_cast(itkLightObject obj) -> itkImageToVTKImageFilterIUC2"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_cast(obj)

class itkImageToVTKImageFilterIUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIUC3_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIUC3_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIUC3_Pointer":
        """Clone(itkImageToVTKImageFilterIUC3 self) -> itkImageToVTKImageFilterIUC3_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIUC3 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetOutput(self)


    def SetInput(self, arg0: 'itkImageUC3') -> "void":
        """SetInput(itkImageToVTKImageFilterIUC3 self, itkImageUC3 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_SetInput(self, arg0)


    def GetInput(self) -> "itkImageUC3 *":
        """GetInput(itkImageToVTKImageFilterIUC3 self) -> itkImageUC3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIUC3 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIUC3 *":
        """GetExporter(itkImageToVTKImageFilterIUC3 self) -> itkVTKImageExportIUC3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIUC3

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIUC3 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIUC3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIUC3

        Create a new object of the class itkImageToVTKImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIUC3.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_Clone, None, itkImageToVTKImageFilterIUC3)
itkImageToVTKImageFilterIUC3.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetOutput, None, itkImageToVTKImageFilterIUC3)
itkImageToVTKImageFilterIUC3.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_SetInput, None, itkImageToVTKImageFilterIUC3)
itkImageToVTKImageFilterIUC3.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetInput, None, itkImageToVTKImageFilterIUC3)
itkImageToVTKImageFilterIUC3.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetImporter, None, itkImageToVTKImageFilterIUC3)
itkImageToVTKImageFilterIUC3.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetExporter, None, itkImageToVTKImageFilterIUC3)
itkImageToVTKImageFilterIUC3_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_swigregister
itkImageToVTKImageFilterIUC3_swigregister(itkImageToVTKImageFilterIUC3)

def itkImageToVTKImageFilterIUC3___New_orig__() -> "itkImageToVTKImageFilterIUC3_Pointer":
    """itkImageToVTKImageFilterIUC3___New_orig__() -> itkImageToVTKImageFilterIUC3_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3___New_orig__()

def itkImageToVTKImageFilterIUC3_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIUC3 *":
    """itkImageToVTKImageFilterIUC3_cast(itkLightObject obj) -> itkImageToVTKImageFilterIUC3"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_cast(obj)

class itkImageToVTKImageFilterIUL2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIUL2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIUL2_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIUL2_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIUL2_Pointer":
        """Clone(itkImageToVTKImageFilterIUL2 self) -> itkImageToVTKImageFilterIUL2_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIUL2 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetOutput(self)


    def SetInput(self, arg0: 'itkImageUL2') -> "void":
        """SetInput(itkImageToVTKImageFilterIUL2 self, itkImageUL2 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_SetInput(self, arg0)


    def GetInput(self) -> "itkImageUL2 *":
        """GetInput(itkImageToVTKImageFilterIUL2 self) -> itkImageUL2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIUL2 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIUL2 *":
        """GetExporter(itkImageToVTKImageFilterIUL2 self) -> itkVTKImageExportIUL2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIUL2

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIUL2 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIUL2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIUL2

        Create a new object of the class itkImageToVTKImageFilterIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIUL2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIUL2.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_Clone, None, itkImageToVTKImageFilterIUL2)
itkImageToVTKImageFilterIUL2.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetOutput, None, itkImageToVTKImageFilterIUL2)
itkImageToVTKImageFilterIUL2.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_SetInput, None, itkImageToVTKImageFilterIUL2)
itkImageToVTKImageFilterIUL2.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetInput, None, itkImageToVTKImageFilterIUL2)
itkImageToVTKImageFilterIUL2.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetImporter, None, itkImageToVTKImageFilterIUL2)
itkImageToVTKImageFilterIUL2.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetExporter, None, itkImageToVTKImageFilterIUL2)
itkImageToVTKImageFilterIUL2_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_swigregister
itkImageToVTKImageFilterIUL2_swigregister(itkImageToVTKImageFilterIUL2)

def itkImageToVTKImageFilterIUL2___New_orig__() -> "itkImageToVTKImageFilterIUL2_Pointer":
    """itkImageToVTKImageFilterIUL2___New_orig__() -> itkImageToVTKImageFilterIUL2_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2___New_orig__()

def itkImageToVTKImageFilterIUL2_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIUL2 *":
    """itkImageToVTKImageFilterIUL2_cast(itkLightObject obj) -> itkImageToVTKImageFilterIUL2"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_cast(obj)

class itkImageToVTKImageFilterIUL3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIUL3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIUL3_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIUL3_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIUL3_Pointer":
        """Clone(itkImageToVTKImageFilterIUL3 self) -> itkImageToVTKImageFilterIUL3_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIUL3 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetOutput(self)


    def SetInput(self, arg0: 'itkImageUL3') -> "void":
        """SetInput(itkImageToVTKImageFilterIUL3 self, itkImageUL3 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_SetInput(self, arg0)


    def GetInput(self) -> "itkImageUL3 *":
        """GetInput(itkImageToVTKImageFilterIUL3 self) -> itkImageUL3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIUL3 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIUL3 *":
        """GetExporter(itkImageToVTKImageFilterIUL3 self) -> itkVTKImageExportIUL3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIUL3

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIUL3 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIUL3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIUL3

        Create a new object of the class itkImageToVTKImageFilterIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIUL3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIUL3.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_Clone, None, itkImageToVTKImageFilterIUL3)
itkImageToVTKImageFilterIUL3.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetOutput, None, itkImageToVTKImageFilterIUL3)
itkImageToVTKImageFilterIUL3.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_SetInput, None, itkImageToVTKImageFilterIUL3)
itkImageToVTKImageFilterIUL3.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetInput, None, itkImageToVTKImageFilterIUL3)
itkImageToVTKImageFilterIUL3.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetImporter, None, itkImageToVTKImageFilterIUL3)
itkImageToVTKImageFilterIUL3.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetExporter, None, itkImageToVTKImageFilterIUL3)
itkImageToVTKImageFilterIUL3_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_swigregister
itkImageToVTKImageFilterIUL3_swigregister(itkImageToVTKImageFilterIUL3)

def itkImageToVTKImageFilterIUL3___New_orig__() -> "itkImageToVTKImageFilterIUL3_Pointer":
    """itkImageToVTKImageFilterIUL3___New_orig__() -> itkImageToVTKImageFilterIUL3_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3___New_orig__()

def itkImageToVTKImageFilterIUL3_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIUL3 *":
    """itkImageToVTKImageFilterIUL3_cast(itkLightObject obj) -> itkImageToVTKImageFilterIUL3"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_cast(obj)

class itkImageToVTKImageFilterIUS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIUS2_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIUS2_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIUS2_Pointer":
        """Clone(itkImageToVTKImageFilterIUS2 self) -> itkImageToVTKImageFilterIUS2_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIUS2 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetOutput(self)


    def SetInput(self, arg0: 'itkImageUS2') -> "void":
        """SetInput(itkImageToVTKImageFilterIUS2 self, itkImageUS2 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_SetInput(self, arg0)


    def GetInput(self) -> "itkImageUS2 *":
        """GetInput(itkImageToVTKImageFilterIUS2 self) -> itkImageUS2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIUS2 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIUS2 *":
        """GetExporter(itkImageToVTKImageFilterIUS2 self) -> itkVTKImageExportIUS2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIUS2

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIUS2 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIUS2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIUS2

        Create a new object of the class itkImageToVTKImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIUS2.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_Clone, None, itkImageToVTKImageFilterIUS2)
itkImageToVTKImageFilterIUS2.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetOutput, None, itkImageToVTKImageFilterIUS2)
itkImageToVTKImageFilterIUS2.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_SetInput, None, itkImageToVTKImageFilterIUS2)
itkImageToVTKImageFilterIUS2.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetInput, None, itkImageToVTKImageFilterIUS2)
itkImageToVTKImageFilterIUS2.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetImporter, None, itkImageToVTKImageFilterIUS2)
itkImageToVTKImageFilterIUS2.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetExporter, None, itkImageToVTKImageFilterIUS2)
itkImageToVTKImageFilterIUS2_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_swigregister
itkImageToVTKImageFilterIUS2_swigregister(itkImageToVTKImageFilterIUS2)

def itkImageToVTKImageFilterIUS2___New_orig__() -> "itkImageToVTKImageFilterIUS2_Pointer":
    """itkImageToVTKImageFilterIUS2___New_orig__() -> itkImageToVTKImageFilterIUS2_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2___New_orig__()

def itkImageToVTKImageFilterIUS2_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIUS2 *":
    """itkImageToVTKImageFilterIUS2_cast(itkLightObject obj) -> itkImageToVTKImageFilterIUS2"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_cast(obj)

class itkImageToVTKImageFilterIUS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIUS3_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIUS3_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIUS3_Pointer":
        """Clone(itkImageToVTKImageFilterIUS3 self) -> itkImageToVTKImageFilterIUS3_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIUS3 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetOutput(self)


    def SetInput(self, arg0: 'itkImageUS3') -> "void":
        """SetInput(itkImageToVTKImageFilterIUS3 self, itkImageUS3 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_SetInput(self, arg0)


    def GetInput(self) -> "itkImageUS3 *":
        """GetInput(itkImageToVTKImageFilterIUS3 self) -> itkImageUS3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIUS3 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIUS3 *":
        """GetExporter(itkImageToVTKImageFilterIUS3 self) -> itkVTKImageExportIUS3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIUS3

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIUS3 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIUS3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIUS3

        Create a new object of the class itkImageToVTKImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIUS3.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_Clone, None, itkImageToVTKImageFilterIUS3)
itkImageToVTKImageFilterIUS3.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetOutput, None, itkImageToVTKImageFilterIUS3)
itkImageToVTKImageFilterIUS3.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_SetInput, None, itkImageToVTKImageFilterIUS3)
itkImageToVTKImageFilterIUS3.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetInput, None, itkImageToVTKImageFilterIUS3)
itkImageToVTKImageFilterIUS3.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetImporter, None, itkImageToVTKImageFilterIUS3)
itkImageToVTKImageFilterIUS3.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetExporter, None, itkImageToVTKImageFilterIUS3)
itkImageToVTKImageFilterIUS3_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_swigregister
itkImageToVTKImageFilterIUS3_swigregister(itkImageToVTKImageFilterIUS3)

def itkImageToVTKImageFilterIUS3___New_orig__() -> "itkImageToVTKImageFilterIUS3_Pointer":
    """itkImageToVTKImageFilterIUS3___New_orig__() -> itkImageToVTKImageFilterIUS3_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3___New_orig__()

def itkImageToVTKImageFilterIUS3_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIUS3 *":
    """itkImageToVTKImageFilterIUS3_cast(itkLightObject obj) -> itkImageToVTKImageFilterIUS3"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_cast(obj)

class itkImageToVTKImageFilterIVF22(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIVF22_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIVF22_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIVF22_Pointer":
        """Clone(itkImageToVTKImageFilterIVF22 self) -> itkImageToVTKImageFilterIVF22_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIVF22 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_GetOutput(self)


    def SetInput(self, arg0: 'itkImageVF22') -> "void":
        """SetInput(itkImageToVTKImageFilterIVF22 self, itkImageVF22 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_SetInput(self, arg0)


    def GetInput(self) -> "itkImageVF22 *":
        """GetInput(itkImageToVTKImageFilterIVF22 self) -> itkImageVF22"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIVF22 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIVF22 *":
        """GetExporter(itkImageToVTKImageFilterIVF22 self) -> itkVTKImageExportIVF22"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIVF22

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIVF22 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIVF22"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIVF22

        Create a new object of the class itkImageToVTKImageFilterIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIVF22.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_Clone, None, itkImageToVTKImageFilterIVF22)
itkImageToVTKImageFilterIVF22.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_GetOutput, None, itkImageToVTKImageFilterIVF22)
itkImageToVTKImageFilterIVF22.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_SetInput, None, itkImageToVTKImageFilterIVF22)
itkImageToVTKImageFilterIVF22.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_GetInput, None, itkImageToVTKImageFilterIVF22)
itkImageToVTKImageFilterIVF22.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_GetImporter, None, itkImageToVTKImageFilterIVF22)
itkImageToVTKImageFilterIVF22.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_GetExporter, None, itkImageToVTKImageFilterIVF22)
itkImageToVTKImageFilterIVF22_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_swigregister
itkImageToVTKImageFilterIVF22_swigregister(itkImageToVTKImageFilterIVF22)

def itkImageToVTKImageFilterIVF22___New_orig__() -> "itkImageToVTKImageFilterIVF22_Pointer":
    """itkImageToVTKImageFilterIVF22___New_orig__() -> itkImageToVTKImageFilterIVF22_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22___New_orig__()

def itkImageToVTKImageFilterIVF22_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIVF22 *":
    """itkImageToVTKImageFilterIVF22_cast(itkLightObject obj) -> itkImageToVTKImageFilterIVF22"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF22_cast(obj)

class itkImageToVTKImageFilterIVF23(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIVF23 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIVF23_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIVF23_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIVF23_Pointer":
        """Clone(itkImageToVTKImageFilterIVF23 self) -> itkImageToVTKImageFilterIVF23_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIVF23 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_GetOutput(self)


    def SetInput(self, arg0: 'itkImageVF23') -> "void":
        """SetInput(itkImageToVTKImageFilterIVF23 self, itkImageVF23 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_SetInput(self, arg0)


    def GetInput(self) -> "itkImageVF23 *":
        """GetInput(itkImageToVTKImageFilterIVF23 self) -> itkImageVF23"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIVF23 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIVF23 *":
        """GetExporter(itkImageToVTKImageFilterIVF23 self) -> itkVTKImageExportIVF23"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIVF23

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIVF23 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIVF23"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIVF23

        Create a new object of the class itkImageToVTKImageFilterIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIVF23.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_Clone, None, itkImageToVTKImageFilterIVF23)
itkImageToVTKImageFilterIVF23.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_GetOutput, None, itkImageToVTKImageFilterIVF23)
itkImageToVTKImageFilterIVF23.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_SetInput, None, itkImageToVTKImageFilterIVF23)
itkImageToVTKImageFilterIVF23.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_GetInput, None, itkImageToVTKImageFilterIVF23)
itkImageToVTKImageFilterIVF23.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_GetImporter, None, itkImageToVTKImageFilterIVF23)
itkImageToVTKImageFilterIVF23.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_GetExporter, None, itkImageToVTKImageFilterIVF23)
itkImageToVTKImageFilterIVF23_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_swigregister
itkImageToVTKImageFilterIVF23_swigregister(itkImageToVTKImageFilterIVF23)

def itkImageToVTKImageFilterIVF23___New_orig__() -> "itkImageToVTKImageFilterIVF23_Pointer":
    """itkImageToVTKImageFilterIVF23___New_orig__() -> itkImageToVTKImageFilterIVF23_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23___New_orig__()

def itkImageToVTKImageFilterIVF23_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIVF23 *":
    """itkImageToVTKImageFilterIVF23_cast(itkLightObject obj) -> itkImageToVTKImageFilterIVF23"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF23_cast(obj)

class itkImageToVTKImageFilterIVF32(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIVF32 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIVF32_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIVF32_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIVF32_Pointer":
        """Clone(itkImageToVTKImageFilterIVF32 self) -> itkImageToVTKImageFilterIVF32_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIVF32 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_GetOutput(self)


    def SetInput(self, arg0: 'itkImageVF32') -> "void":
        """SetInput(itkImageToVTKImageFilterIVF32 self, itkImageVF32 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_SetInput(self, arg0)


    def GetInput(self) -> "itkImageVF32 *":
        """GetInput(itkImageToVTKImageFilterIVF32 self) -> itkImageVF32"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIVF32 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIVF32 *":
        """GetExporter(itkImageToVTKImageFilterIVF32 self) -> itkVTKImageExportIVF32"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIVF32

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIVF32 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIVF32"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIVF32

        Create a new object of the class itkImageToVTKImageFilterIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIVF32.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_Clone, None, itkImageToVTKImageFilterIVF32)
itkImageToVTKImageFilterIVF32.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_GetOutput, None, itkImageToVTKImageFilterIVF32)
itkImageToVTKImageFilterIVF32.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_SetInput, None, itkImageToVTKImageFilterIVF32)
itkImageToVTKImageFilterIVF32.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_GetInput, None, itkImageToVTKImageFilterIVF32)
itkImageToVTKImageFilterIVF32.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_GetImporter, None, itkImageToVTKImageFilterIVF32)
itkImageToVTKImageFilterIVF32.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_GetExporter, None, itkImageToVTKImageFilterIVF32)
itkImageToVTKImageFilterIVF32_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_swigregister
itkImageToVTKImageFilterIVF32_swigregister(itkImageToVTKImageFilterIVF32)

def itkImageToVTKImageFilterIVF32___New_orig__() -> "itkImageToVTKImageFilterIVF32_Pointer":
    """itkImageToVTKImageFilterIVF32___New_orig__() -> itkImageToVTKImageFilterIVF32_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32___New_orig__()

def itkImageToVTKImageFilterIVF32_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIVF32 *":
    """itkImageToVTKImageFilterIVF32_cast(itkLightObject obj) -> itkImageToVTKImageFilterIVF32"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF32_cast(obj)

class itkImageToVTKImageFilterIVF33(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIVF33_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIVF33_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIVF33_Pointer":
        """Clone(itkImageToVTKImageFilterIVF33 self) -> itkImageToVTKImageFilterIVF33_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIVF33 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_GetOutput(self)


    def SetInput(self, arg0: 'itkImageVF33') -> "void":
        """SetInput(itkImageToVTKImageFilterIVF33 self, itkImageVF33 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_SetInput(self, arg0)


    def GetInput(self) -> "itkImageVF33 *":
        """GetInput(itkImageToVTKImageFilterIVF33 self) -> itkImageVF33"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIVF33 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIVF33 *":
        """GetExporter(itkImageToVTKImageFilterIVF33 self) -> itkVTKImageExportIVF33"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIVF33

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIVF33 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIVF33"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIVF33

        Create a new object of the class itkImageToVTKImageFilterIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIVF33.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_Clone, None, itkImageToVTKImageFilterIVF33)
itkImageToVTKImageFilterIVF33.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_GetOutput, None, itkImageToVTKImageFilterIVF33)
itkImageToVTKImageFilterIVF33.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_SetInput, None, itkImageToVTKImageFilterIVF33)
itkImageToVTKImageFilterIVF33.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_GetInput, None, itkImageToVTKImageFilterIVF33)
itkImageToVTKImageFilterIVF33.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_GetImporter, None, itkImageToVTKImageFilterIVF33)
itkImageToVTKImageFilterIVF33.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_GetExporter, None, itkImageToVTKImageFilterIVF33)
itkImageToVTKImageFilterIVF33_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_swigregister
itkImageToVTKImageFilterIVF33_swigregister(itkImageToVTKImageFilterIVF33)

def itkImageToVTKImageFilterIVF33___New_orig__() -> "itkImageToVTKImageFilterIVF33_Pointer":
    """itkImageToVTKImageFilterIVF33___New_orig__() -> itkImageToVTKImageFilterIVF33_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33___New_orig__()

def itkImageToVTKImageFilterIVF33_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIVF33 *":
    """itkImageToVTKImageFilterIVF33_cast(itkLightObject obj) -> itkImageToVTKImageFilterIVF33"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF33_cast(obj)

class itkImageToVTKImageFilterIVF42(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIVF42 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIVF42_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIVF42_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIVF42_Pointer":
        """Clone(itkImageToVTKImageFilterIVF42 self) -> itkImageToVTKImageFilterIVF42_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIVF42 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_GetOutput(self)


    def SetInput(self, arg0: 'itkImageVF42') -> "void":
        """SetInput(itkImageToVTKImageFilterIVF42 self, itkImageVF42 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_SetInput(self, arg0)


    def GetInput(self) -> "itkImageVF42 *":
        """GetInput(itkImageToVTKImageFilterIVF42 self) -> itkImageVF42"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIVF42 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIVF42 *":
        """GetExporter(itkImageToVTKImageFilterIVF42 self) -> itkVTKImageExportIVF42"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIVF42

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIVF42 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIVF42"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIVF42

        Create a new object of the class itkImageToVTKImageFilterIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIVF42.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_Clone, None, itkImageToVTKImageFilterIVF42)
itkImageToVTKImageFilterIVF42.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_GetOutput, None, itkImageToVTKImageFilterIVF42)
itkImageToVTKImageFilterIVF42.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_SetInput, None, itkImageToVTKImageFilterIVF42)
itkImageToVTKImageFilterIVF42.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_GetInput, None, itkImageToVTKImageFilterIVF42)
itkImageToVTKImageFilterIVF42.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_GetImporter, None, itkImageToVTKImageFilterIVF42)
itkImageToVTKImageFilterIVF42.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_GetExporter, None, itkImageToVTKImageFilterIVF42)
itkImageToVTKImageFilterIVF42_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_swigregister
itkImageToVTKImageFilterIVF42_swigregister(itkImageToVTKImageFilterIVF42)

def itkImageToVTKImageFilterIVF42___New_orig__() -> "itkImageToVTKImageFilterIVF42_Pointer":
    """itkImageToVTKImageFilterIVF42___New_orig__() -> itkImageToVTKImageFilterIVF42_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42___New_orig__()

def itkImageToVTKImageFilterIVF42_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIVF42 *":
    """itkImageToVTKImageFilterIVF42_cast(itkLightObject obj) -> itkImageToVTKImageFilterIVF42"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF42_cast(obj)

class itkImageToVTKImageFilterIVF43(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIVF43 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToVTKImageFilterIVF43_Pointer":
        """__New_orig__() -> itkImageToVTKImageFilterIVF43_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToVTKImageFilterIVF43_Pointer":
        """Clone(itkImageToVTKImageFilterIVF43 self) -> itkImageToVTKImageFilterIVF43_Pointer"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_Clone(self)


    def GetOutput(self) -> "vtkImageData *":
        """GetOutput(itkImageToVTKImageFilterIVF43 self) -> vtkImageData *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_GetOutput(self)


    def SetInput(self, arg0: 'itkImageVF43') -> "void":
        """SetInput(itkImageToVTKImageFilterIVF43 self, itkImageVF43 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_SetInput(self, arg0)


    def GetInput(self) -> "itkImageVF43 *":
        """GetInput(itkImageToVTKImageFilterIVF43 self) -> itkImageVF43"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_GetInput(self)


    def GetImporter(self) -> "vtkImageImport *":
        """GetImporter(itkImageToVTKImageFilterIVF43 self) -> vtkImageImport *"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_GetImporter(self)


    def GetExporter(self) -> "itkVTKImageExportIVF43 *":
        """GetExporter(itkImageToVTKImageFilterIVF43 self) -> itkVTKImageExportIVF43"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIVF43

    def cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIVF43 *":
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIVF43"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIVF43

        Create a new object of the class itkImageToVTKImageFilterIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToVTKImageFilterIVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToVTKImageFilterIVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIVF43.Clone = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_Clone, None, itkImageToVTKImageFilterIVF43)
itkImageToVTKImageFilterIVF43.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_GetOutput, None, itkImageToVTKImageFilterIVF43)
itkImageToVTKImageFilterIVF43.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_SetInput, None, itkImageToVTKImageFilterIVF43)
itkImageToVTKImageFilterIVF43.GetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_GetInput, None, itkImageToVTKImageFilterIVF43)
itkImageToVTKImageFilterIVF43.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_GetImporter, None, itkImageToVTKImageFilterIVF43)
itkImageToVTKImageFilterIVF43.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_GetExporter, None, itkImageToVTKImageFilterIVF43)
itkImageToVTKImageFilterIVF43_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_swigregister
itkImageToVTKImageFilterIVF43_swigregister(itkImageToVTKImageFilterIVF43)

def itkImageToVTKImageFilterIVF43___New_orig__() -> "itkImageToVTKImageFilterIVF43_Pointer":
    """itkImageToVTKImageFilterIVF43___New_orig__() -> itkImageToVTKImageFilterIVF43_Pointer"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43___New_orig__()

def itkImageToVTKImageFilterIVF43_cast(obj: 'itkLightObject') -> "itkImageToVTKImageFilterIVF43 *":
    """itkImageToVTKImageFilterIVF43_cast(itkLightObject obj) -> itkImageToVTKImageFilterIVF43"""
    return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIVF43_cast(obj)


def image_to_vtk_image_filter(*args, **kwargs):
    """Procedural interface for ImageToVTKImageFilter"""
    import itk
    instance = itk.ImageToVTKImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_to_vtk_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ImageToVTKImageFilter, itkTemplate.itkTemplate):
        image_to_vtk_image_filter.__doc__ = itk.ImageToVTKImageFilter.values()[0].__doc__
    else:
        image_to_vtk_image_filter.__doc__ = itk.ImageToVTKImageFilter.__doc__




