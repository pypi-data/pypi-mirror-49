{"version":3,"sources":["webpack:///./app/components/circleIndicator.jsx","webpack:///./app/components/confirmDelete.jsx","webpack:///./app/components/avatar/sentryAppAvatar.jsx","webpack:///./app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx","webpack:///./app/views/settings/organizationDeveloperSettings/index.jsx","webpack:///./app/actionCreators/sentryApps.jsx"],"names":["getBackgroundColor","p","color","concat","enabled","theme","success","error","getSize","size","Circle","styled","target","CircleIndicator","props","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","React","Component","propTypes","PropTypes","bool","isRequired","number","string","defaultProps","ConfirmDelete","_getPrototypeOf2","_this","classCallCheck_default","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","apply","handleChange","evt","input","value","confirmInput","setState","disableConfirmButton","state","_this$props","message","objectWithoutProperties_default","react_default","components_confirm","extends_default","bypass","Fragment","components_alert","type","field","flexibleControlStateSize","inline","label","placeholder","onChange","PureComponent","onConfirm","func","confirmText","cancelText","priority","oneOf","node","renderMessage","disabled","onConfirming","onCancel","t","SentryAppAvatar","sentryApp","baseAvatar","uploadPath","uploadId","letterId","uuid","tooltip","name","title","SentryTypes","SentryApplication","BaseAvatar","SentryApplicationRow","app","slug","confirmDelete","onRemoveApp","components_button","icon","install","_this2","onUninstall","StyledButton","borderless","data-test-id","_this3","orgId","installs","showPublishStatus","isInstalled","SentryAppItem","StyledFlex","sentryAppAvatar","SentryAppBox","SentryAppName","SentryAppLink","to","SentryAppDetails","PublishStatus","published","status","Status","StyledLink","onClick","index_es","access","_ref","hasAccess","renderRemoveApp","renderUninstall","onInstall","className","array","PanelItem","Flex","Box","Link","gray2","textColor","Button","withTheme","_ref2","align","circleIndicator","space","gray1","_ref3","OrganizationDeveloperSettings","removeApp","apps","applications","filter","client","addLoadingMessage","promise","requestPromise","method","then","addSuccessMessage","clearIndicators","addErrorMessage","removeSentryApp","api","params","action","isEmpty","settingsPageHeader","panels","emptyMessage","map","sentryApplicationRow","key","AsyncView"],"mappings":"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","file":"OrganizationDeveloperSettings.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\n\nconst getBackgroundColor = p => {\n  if (p.color) {\n    return `background: ${p.color};`;\n  }\n\n  return `background: ${p.enabled ? p.theme.success : p.theme.error};`;\n};\n\nconst getSize = p => `\n  height: ${p.size}px;\n  width: ${p.size}px;\n`;\n\nconst Circle = styled.div`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  ${getSize};\n  ${getBackgroundColor};\n`;\n\nclass CircleIndicator extends React.Component {\n  static propTypes = {\n    enabled: PropTypes.bool.isRequired,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.string,\n  };\n\n  static defaultProps = {\n    enabled: true,\n    size: 14,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return <Circle {...this.props} />;\n  }\n}\n\nexport default CircleIndicator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Confirm from 'app/components/confirm';\nimport Alert from 'app/components/alert';\nimport Input from 'app/views/settings/components/forms/controls/input';\nimport Field from 'app/views/settings/components/forms/field';\nimport {t} from 'app/locale';\n\nclass ConfirmDelete extends React.PureComponent {\n  static propTypes = {\n    onConfirm: PropTypes.func.isRequired,\n    confirmText: PropTypes.string.isRequired,\n    confirmInput: PropTypes.string.isRequired,\n    cancelText: PropTypes.string.isRequired,\n    priority: PropTypes.oneOf(['primary', 'danger']).isRequired,\n    message: PropTypes.node,\n    /**\n     * Renderer that passes:\n     * `confirm`: Allows renderer to perform confirm action\n     * `close`: Allows renderer to toggle confirm modal\n     */\n    renderMessage: PropTypes.func,\n    disabled: PropTypes.bool,\n    onConfirming: PropTypes.func,\n    onCancel: PropTypes.func,\n  };\n\n  static defaultProps = {\n    priority: 'primary',\n    cancelText: t('Cancel'),\n    confirmText: t('Confirm'),\n  };\n\n  constructor(...args) {\n    super(...args);\n\n    this.state = {\n      disableConfirmButton: true,\n      confirmInput: '',\n    };\n  }\n\n  handleChange = evt => {\n    const input = evt.target.value;\n    if (input === this.props.confirmInput) {\n      this.setState({disableConfirmButton: false, confirmInput: input});\n    } else {\n      this.setState({disableConfirmButton: true, confirmInput: input});\n    }\n  };\n\n  render() {\n    const {confirmInput, message, ...props} = this.props;\n    const {disableConfirmButton} = this.state;\n\n    return (\n      <Confirm\n        {...props}\n        bypass={false}\n        disableConfirmButton={disableConfirmButton}\n        message={\n          <React.Fragment>\n            <Alert type=\"error\">{message}</Alert>\n            <Field\n              p={0}\n              flexibleControlStateSize={true}\n              inline={false}\n              label={\n                <div>\n                  Please enter <code>{confirmInput}</code> to confirm the deletion\n                </div>\n              }\n            >\n              <Input\n                type=\"text\"\n                placeholder={confirmInput}\n                onChange={this.handleChange}\n                value={this.state.confirmInput}\n              />\n            </Field>\n          </React.Fragment>\n        }\n      />\n    );\n  }\n}\n\nexport default ConfirmDelete;\n","import React from 'react';\n\nimport BaseAvatar from 'app/components/avatar/baseAvatar';\nimport SentryTypes from 'app/sentryTypes';\n\nclass SentryAppAvatar extends React.Component {\n  static propTypes = {\n    sentryApp: SentryTypes.SentryApplication.isRequired,\n    ...BaseAvatar.propTypes,\n  };\n\n  render() {\n    const {sentryApp, ...props} = this.props;\n    if (!sentryApp) {\n      return null;\n    }\n\n    return (\n      <BaseAvatar\n        {...props}\n        type={'letter_avatar'}\n        uploadPath=\"avatar\"\n        uploadId={''}\n        letterId={sentryApp.uuid}\n        tooltip={sentryApp.name}\n        title={sentryApp.name}\n      />\n    );\n  }\n}\nexport default SentryAppAvatar;\n","import React from 'react';\nimport {Box, Flex} from 'grid-emotion';\nimport {Link} from 'react-router';\nimport Access from 'app/components/acl/access';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport ConfirmDelete from 'app/components/confirmDelete';\nimport SentryAppAvatar from 'app/components/avatar/sentryAppAvatar';\nimport PropTypes from 'prop-types';\nimport SentryTypes from 'app/sentryTypes';\nimport Tooltip from 'app/components/tooltip';\nimport {PanelItem} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport styled from 'react-emotion';\nimport space from 'app/styles/space';\nimport {withTheme} from 'emotion-theming';\nimport CircleIndicator from 'app/components/circleIndicator';\n\nexport default class SentryApplicationRow extends React.PureComponent {\n  static propTypes = {\n    app: SentryTypes.SentryApplication,\n    orgId: PropTypes.string.isRequired,\n    installs: PropTypes.array,\n    onInstall: PropTypes.func,\n    onUninstall: PropTypes.func,\n    onRemoveApp: PropTypes.func,\n    showPublishStatus: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    showPublishStatus: false,\n  };\n\n  renderRemoveApp(app) {\n    const message = t(\n      `Deleting ${app.slug} will also delete any and all of its installations. \\\n       This is a permanent action. Do you wish to continue?`\n    );\n    return (\n      <ConfirmDelete\n        message={message}\n        confirmInput={app.slug}\n        priority=\"danger\"\n        onConfirm={() => this.props.onRemoveApp(app)}\n      >\n        <Button size=\"small\" icon=\"icon-trash\" />\n      </ConfirmDelete>\n    );\n  }\n\n  renderUninstall(install) {\n    const message = t(\n      `Are you sure you want to remove the ${install.app.slug} installation ?`\n    );\n    return (\n      <Confirm\n        message={message}\n        priority=\"danger\"\n        onConfirm={() => this.props.onUninstall(install)}\n      >\n        <StyledButton borderless icon=\"icon-trash\" data-test-id=\"sentry-app-uninstall\">\n          {t('Remove')}\n        </StyledButton>\n      </Confirm>\n    );\n  }\n\n  render() {\n    const {app, orgId, installs, showPublishStatus} = this.props;\n    const isInstalled = installs && installs.length > 0;\n\n    return (\n      <SentryAppItem>\n        <StyledFlex>\n          <SentryAppAvatar size={36} sentryApp={app} />\n          <SentryAppBox>\n            <SentryAppName>\n              {showPublishStatus ? (\n                <SentryAppLink to={`/settings/${orgId}/developer-settings/${app.slug}/`}>\n                  {app.name}\n                </SentryAppLink>\n              ) : (\n                app.name\n              )}\n            </SentryAppName>\n            <SentryAppDetails>\n              {showPublishStatus ? (\n                <PublishStatus published={app.status === 'published'} />\n              ) : (\n                <React.Fragment>\n                  <Status enabled={isInstalled} />\n                  <StyledLink onClick={() => {}}>{t('Learn More')}</StyledLink>\n                </React.Fragment>\n              )}\n            </SentryAppDetails>\n          </SentryAppBox>\n          {!showPublishStatus ? (\n            <Box>\n              {!isInstalled ? (\n                <Button\n                  onClick={() => this.props.onInstall(app)}\n                  size=\"small\"\n                  icon=\"icon-circle-add\"\n                  className=\"btn btn-default\"\n                >\n                  {t('Install')}\n                </Button>\n              ) : (\n                this.renderUninstall(installs[0])\n              )}\n            </Box>\n          ) : (\n            <Box>\n              {app.status === 'unpublished' ? (\n                <Access access={['org:admin']}>\n                  {({hasAccess}) => (\n                    <React.Fragment>\n                      {!hasAccess && (\n                        <Tooltip\n                          title={t('Owner permissions are required for this action.')}\n                        >\n                          <Button disabled size=\"small\" icon=\"icon-trash\" />\n                        </Tooltip>\n                      )}\n                      {hasAccess && this.renderRemoveApp(app)}\n                    </React.Fragment>\n                  )}\n                </Access>\n              ) : (\n                <Tooltip title={t('Published apps cannot be removed.')}>\n                  <Button disabled size=\"small\" icon=\"icon-trash\" />\n                </Tooltip>\n              )}\n            </Box>\n          )}\n        </StyledFlex>\n      </SentryAppItem>\n    );\n  }\n}\n\nconst SentryAppItem = styled(PanelItem)`\n  flex-direction: column;\n  padding: 5px;\n`;\n\nconst StyledFlex = styled(Flex)`\n  justify-content: center;\n  padding: 10px;\n`;\n\nconst SentryAppBox = styled(Box)`\n  padding-left: 15px;\n  padding-right: 15px;\n  flex: 1;\n`;\n\nconst SentryAppDetails = styled(Flex)`\n  align-items: center;\n  margin-top: 6px;\n  font-size: 0.8em;\n`;\n\nconst SentryAppName = styled('div')`\n  font-weight: bold;\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${p => p.theme.gray2};\n`;\n\nconst SentryAppLink = styled(Link)`\n  color: ${props => props.theme.textColor};\n`;\n\nconst StyledButton = styled(Button)`\n  color: ${p => p.theme.gray2};\n`;\n\nconst Status = styled(\n  withTheme(({enabled, ...props}) => {\n    return (\n      <Flex align=\"center\">\n        <CircleIndicator\n          size={6}\n          color={enabled ? props.theme.success : props.theme.gray2}\n        />\n        <div {...props}>{enabled ? t('Installed') : t('Not Installed')}</div>\n      </Flex>\n    );\n  })\n)`\n  color: ${props => (props.enabled ? props.theme.success : props.theme.gray2)};\n  margin-left: ${space(0.5)};\n  font-weight: light;\n  &:after {\n    content: '|';\n    color: ${p => p.theme.gray1};\n    margin-left: ${space(0.75)};\n    font-weight: normal;\n  }\n  margin-right: ${space(0.75)};\n`;\n\nconst PublishStatus = styled(({published, ...props}) => {\n  return (\n    <Flex align=\"center\">\n      <div {...props}>{published ? t('published') : t('unpublished')}</div>\n    </Flex>\n  );\n})`\n  color: ${props => (props.published ? props.theme.success : props.theme.gray2)};\n  font-weight: light;\n  margin-right: ${space(0.75)};\n`;\n","import React from 'react';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {removeSentryApp} from 'app/actionCreators/sentryApps';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport SentryApplicationRow from 'app/views/settings/organizationDeveloperSettings/sentryApplicationRow';\nimport {t} from 'app/locale';\n\nexport default class OrganizationDeveloperSettings extends AsyncView {\n  getEndpoints() {\n    const {orgId} = this.props.params;\n\n    return [['applications', `/organizations/${orgId}/sentry-apps/`]];\n  }\n\n  removeApp = app => {\n    const apps = this.state.applications.filter(a => a.slug !== app.slug);\n    removeSentryApp(this.api, app).then(\n      () => {\n        this.setState({applications: apps});\n      },\n      () => {}\n    );\n  };\n\n  renderBody() {\n    const {orgId} = this.props.params;\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        to={`/settings/${orgId}/developer-settings/new/`}\n        icon=\"icon-circle-add\"\n      >\n        {t('Create New Application')}\n      </Button>\n    );\n\n    const isEmpty = this.state.applications.length === 0;\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Developer Settings')} action={action} />\n        <Panel>\n          <PanelHeader>{t('Applications')}</PanelHeader>\n          <PanelBody>\n            {!isEmpty ? (\n              this.state.applications.map(app => {\n                return (\n                  <SentryApplicationRow\n                    key={app.uuid}\n                    app={app}\n                    orgId={orgId}\n                    onRemoveApp={this.removeApp}\n                    showPublishStatus={true}\n                  />\n                );\n              })\n            ) : (\n              <EmptyMessage>{t('No applications have been created yet.')}</EmptyMessage>\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n","import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\n\n/**\n * Remove a Sentry Application\n *\n * @param {Object} client ApiClient\n * @param {Object} app SentryApp\n */\nexport function removeSentryApp(client, app) {\n  addLoadingMessage();\n  const promise = client.requestPromise(`/sentry-apps/${app.slug}/`, {\n    method: 'DELETE',\n  });\n  promise.then(\n    () => {\n      addSuccessMessage(t(`${app.slug} successfully removed.`));\n    },\n    () => {\n      clearIndicators();\n      addErrorMessage(t(`Unable to remove ${app.slug} application`));\n    }\n  );\n  return promise;\n}\n"],"sourceRoot":""}