{"version":3,"sources":["webpack:///./app/components/resultGrid.jsx","webpack:///./app/views/admin/adminOrganizations.jsx"],"names":["Filter","getCurrentLabel","selected","_this","props","options","filter","item","value","name","getDefaultItem","query","$","extend","location","cursor","queryKey","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","app_components_menuItem__WEBPACK_IMPORTED_MODULE_13__","key","isActive","to","path","getSelector","app_components_dropdownLink__WEBPACK_IMPORTED_MODULE_12__","title","map","filterQuery","className","this","length","React","Component","propTypes","PropTypes","string","isRequired","array","any","SortBy","getCurrentSortLabel","_this2","getSortBySelector","sortBy","object","ResultGrid","createReactClass","displayName","columns","columnsForRow","func","defaultSort","defaultParams","endpoint","filters","hasPagination","bool","hasSearch","keyForRow","method","sortOptions","mixins","ApiMixin","getDefaultProps","row","id","per_page","getInitialState","queryParams","rows","loading","error","pageLinks","Object","assign","componentWillMount","fetchData","componentWillReceiveProps","nextProps","setState","remountComponent","refresh","_this3","state","api","request","data","success","_","jqXHR","getResponseHeader","onSearch","e","targetQueryParams","jQuery","preventDefault","browserHistory","push","pathname","onQueryChange","evt","target","renderLoading","colSpan","renderError","renderNoResults","renderResults","_this4","render","_this5","onSubmit","type","placeholder","style","width","autoComplete","onChange","keys","filterKey","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","app_components_pagination__WEBPACK_IMPORTED_MODULE_14__","AdminOrganizations","getRow","react__WEBPACK_IMPORTED_MODULE_6___default","react_router__WEBPACK_IMPORTED_MODULE_7__","concat","slug","t","app_components_resultGrid__WEBPACK_IMPORTED_MODULE_8__"],"mappings":"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","file":"AdminOrganizations.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport $ from 'jquery';\nimport {browserHistory} from 'react-router';\n\nimport ApiMixin from 'app/mixins/apiMixin';\nimport DropdownLink from 'app/components/dropdownLink';\nimport MenuItem from 'app/components/menuItem';\nimport Pagination from 'app/components/pagination';\n\nclass Filter extends React.Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    queryKey: PropTypes.string.isRequired,\n    options: PropTypes.array.isRequired,\n    path: PropTypes.string.isRequired,\n    value: PropTypes.any,\n  };\n\n  getCurrentLabel = () => {\n    const selected = this.props.options.filter(item => {\n      return item[0] === (this.props.value || '');\n    })[0];\n    if (selected) {\n      return this.props.name + ': ' + selected[1];\n    }\n    return this.props.name + ': ' + 'Any';\n  };\n\n  getDefaultItem = () => {\n    const query = $.extend({}, this.props.location.query, {\n      cursor: '',\n    });\n    delete query[this.props.queryKey];\n\n    return (\n      <MenuItem\n        key=\"\"\n        isActive={this.props.value === '' || !this.props.value}\n        to={this.props.path}\n        query={query}\n      >\n        Any\n      </MenuItem>\n    );\n  };\n\n  getSelector = () => {\n    return (\n      <DropdownLink title={this.getCurrentLabel()}>\n        {this.getDefaultItem()}\n        {this.props.options.map(item => {\n          const filterQuery = {};\n          filterQuery[this.props.queryKey] = item[0];\n          filterQuery.cursor = '';\n          const query = $.extend({}, this.props.location.query, filterQuery);\n          return (\n            <MenuItem\n              key={item[0]}\n              isActive={this.props.value === item[0]}\n              to={this.props.path}\n              query={query}\n            >\n              {item[1]}\n            </MenuItem>\n          );\n        })}\n      </DropdownLink>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"filter-options\">\n        {this.props.options.length === 1 ? (\n          <strong>{this.getCurrentLabel()}</strong>\n        ) : (\n          this.getSelector()\n        )}\n      </div>\n    );\n  }\n}\n\nclass SortBy extends React.Component {\n  static propTypes = {\n    options: PropTypes.array.isRequired,\n    path: PropTypes.string.isRequired,\n    location: PropTypes.object,\n    value: PropTypes.any,\n  };\n\n  getCurrentSortLabel = () => {\n    return this.props.options.filter(item => {\n      return item[0] === this.props.value;\n    })[0][1];\n  };\n\n  getSortBySelector = () => {\n    return (\n      <DropdownLink title={this.getCurrentSortLabel()} className=\"sorted-by\">\n        {this.props.options.map(item => {\n          const query = $.extend({}, this.props.location.query, {\n            sortBy: item[0],\n            cursor: '',\n          });\n          return (\n            <MenuItem\n              isActive={this.props.value === item[0]}\n              key={item[0]}\n              to={this.props.path}\n              query={query}\n            >\n              {item[1]}\n            </MenuItem>\n          );\n        })}\n      </DropdownLink>\n    );\n  };\n\n  render() {\n    if (this.props.options.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"sort-options\">\n        Showing results sorted by\n        {this.props.options.length === 1 ? (\n          <strong className=\"sorted-by\">{this.getCurrentSortLabel()}</strong>\n        ) : (\n          this.getSortBySelector()\n        )}\n      </div>\n    );\n  }\n}\n\nconst ResultGrid = createReactClass({\n  displayName: 'ResultGrid',\n\n  propTypes: {\n    columns: PropTypes.array,\n    columnsForRow: PropTypes.func,\n    defaultSort: PropTypes.string,\n    defaultParams: PropTypes.object,\n    endpoint: PropTypes.string,\n    filters: PropTypes.object,\n    hasPagination: PropTypes.bool,\n    hasSearch: PropTypes.bool,\n    keyForRow: PropTypes.func,\n    location: PropTypes.object,\n    method: PropTypes.string,\n    options: PropTypes.array,\n    path: PropTypes.string,\n    sortOptions: PropTypes.array,\n  },\n\n  mixins: [ApiMixin],\n\n  getDefaultProps() {\n    return {\n      path: '',\n      endpoint: '',\n      method: 'GET',\n      columns: [],\n      sortOptions: [],\n      filters: {},\n      defaultSort: '',\n      keyForRow: function(row) {\n        return row.id;\n      },\n      columnsForRow: function(row) {\n        return [];\n      },\n      defaultParams: {\n        per_page: 50,\n      },\n      hasPagination: true,\n      hasSearch: false,\n    };\n  },\n\n  getInitialState() {\n    const queryParams = (this.props.location || {}).query || {};\n\n    return {\n      rows: [],\n      loading: true,\n      error: false,\n      pageLinks: null,\n      query: queryParams.query || '',\n      sortBy: queryParams.sortBy || this.props.defaultSort,\n      filters: Object.assign({}, queryParams),\n    };\n  },\n\n  componentWillMount() {\n    this.fetchData();\n  },\n\n  componentWillReceiveProps(nextProps) {\n    const queryParams = (nextProps.location || {}).query || {};\n    this.setState(\n      {\n        query: queryParams.query || '',\n        sortBy: queryParams.sortBy || this.props.defaultSort,\n        filters: Object.assign({}, queryParams),\n        pageLinks: null,\n        loading: true,\n        error: false,\n      },\n      this.fetchData\n    );\n  },\n\n  remountComponent() {\n    this.setState(this.getInitialState(), this.fetchData);\n  },\n\n  refresh() {\n    this.setState(\n      {\n        loading: true,\n      },\n      this.fetchData()\n    );\n  },\n\n  fetchData() {\n    // TODO(dcramer): this should whitelist filters/sortBy/cursor/perPage\n    const queryParams = $.extend(\n      {},\n      this.props.defaultParams,\n      {sortBy: this.state.sortBy},\n      (this.props.location || {}).query || {}\n    );\n\n    this.api.request(this.props.endpoint, {\n      method: this.props.method,\n      data: queryParams,\n      success: (data, _, jqXHR) => {\n        this.setState({\n          loading: false,\n          error: false,\n          rows: data,\n          pageLinks: jqXHR.getResponseHeader('Link'),\n        });\n      },\n      error: () => {\n        this.setState({\n          loading: false,\n          error: true,\n        });\n      },\n    });\n  },\n\n  onSearch(e) {\n    const location = this.props.location || {};\n    const {query} = this.state;\n    const targetQueryParams = jQuery.extend({}, location.query || {}, {\n      query,\n      cursor: '',\n    });\n\n    e.preventDefault();\n\n    browserHistory.push({\n      pathname: this.props.path,\n      query: targetQueryParams,\n    });\n  },\n\n  onQueryChange(evt) {\n    this.setState({query: evt.target.value});\n  },\n\n  renderLoading() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns.length}>\n          <div className=\"loading\">\n            <div className=\"loading-indicator\" />\n            <div className=\"loading-message\">Hold on to your butts!</div>\n          </div>\n        </td>\n      </tr>\n    );\n  },\n\n  renderError() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns.length}>\n          <div className=\"alert-block alert-error\">Something bad happened :(</div>\n        </td>\n      </tr>\n    );\n  },\n\n  renderNoResults() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns.length}>No results found.</td>\n      </tr>\n    );\n  },\n\n  renderResults() {\n    return this.state.rows.map(row => {\n      return <tr key={this.props.keyForRow(row)}>{this.props.columnsForRow(row)}</tr>;\n    });\n  },\n\n  render() {\n    const {filters} = this.props;\n    return (\n      <div className=\"result-grid\">\n        <div className=\"table-options\">\n          {this.props.hasSearch && (\n            <div className=\"result-grid-search\">\n              <form onSubmit={this.onSearch}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control input-search\"\n                    placeholder=\"search\"\n                    style={{width: 300}}\n                    name=\"query\"\n                    autoComplete=\"off\"\n                    value={this.state.query}\n                    onChange={this.onQueryChange}\n                  />\n                  <button type=\"submit\" className=\"btn btn-sm btn-primary\">\n                    <span className=\"icon-search\" />\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n          <SortBy\n            options={this.props.sortOptions}\n            value={this.state.sortBy}\n            path={this.props.path}\n            location={this.props.location}\n          />\n          {Object.keys(filters).map(filterKey => {\n            return (\n              <Filter\n                key={filterKey}\n                queryKey={filterKey}\n                value={this.state.filters[filterKey]}\n                path={this.props.path}\n                location={this.props.location}\n                {...filters[filterKey]}\n              />\n            );\n          })}\n        </div>\n\n        <table className=\"table table-grid\">\n          <thead>\n            <tr>{this.props.columns}</tr>\n          </thead>\n          <tbody>\n            {this.state.loading\n              ? this.renderLoading()\n              : this.state.error\n                ? this.renderError()\n                : this.state.rows.length === 0\n                  ? this.renderNoResults()\n                  : this.renderResults()}\n          </tbody>\n        </table>\n        {this.props.hasPagination &&\n          this.state.pageLinks && <Pagination pageLinks={this.state.pageLinks} />}\n      </div>\n    );\n  },\n});\n\nexport default ResultGrid;\n","/* eslint-disable getsentry/jsx-needs-il8n */\n/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport {Link} from 'react-router';\n\nimport ResultGrid from 'app/components/resultGrid';\nimport {t} from 'app/locale';\n\nclass AdminOrganizations extends React.Component {\n  getRow = row => {\n    return [\n      <td>\n        <strong>\n          <Link to={`/${row.slug}/`}>{row.name}</Link>\n        </strong>\n        <br />\n        <small>{row.slug}</small>\n      </td>,\n    ];\n  };\n\n  render() {\n    const columns = [<th>Organization</th>];\n\n    return (\n      <div>\n        <h3>{t('Organizations')}</h3>\n        <ResultGrid\n          path=\"/manage/organizations/\"\n          endpoint={'/organizations/?show=all'}\n          method=\"GET\"\n          columns={columns}\n          columnsForRow={this.getRow}\n          hasSearch={true}\n          sortOptions={[\n            ['date', 'Date Joined'],\n            ['members', 'Members'],\n            ['events', 'Events'],\n            ['projects', 'Projects'],\n            ['employees', 'Employees'],\n          ]}\n          defaultSort=\"date\"\n          {...this.props}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AdminOrganizations;\n"],"sourceRoot":""}