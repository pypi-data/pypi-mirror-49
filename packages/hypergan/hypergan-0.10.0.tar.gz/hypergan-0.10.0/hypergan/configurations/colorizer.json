{
  "discriminator": 
  {
      "layer_filter": "function:__main__.add_bw",
      "class": "class:hypergan.discriminators.configurable_discriminator.ConfigurableDiscriminator",
      "defaults":{
        "activation": "relu",
        "initializer": "he_normal",
        "filter": [3,3],
        "stride": [1,1],
        "avg_pool": [2,2]
      },
      "layers":[
        "layer_filter",
        "conv 32",
        "layer_filter",
        "conv 64 ",
        "layer_filter",
        "conv 128",
        "layer_filter",
        "conv 256",
        "layer_filter",
        "conv 256",
        "layer_filter",
        "conv 256",
        "linear 1 activation=null bias=false"
      ]

  },
  "generator": {
    "layer_filter": "function:__main__.add_bw",
    "class": "class:hypergan.generators.configurable_generator.ConfigurableGenerator",
    "defaults": {
      "activation": "relu",
      "initializer": "he_normal",
      "filter": [3,3],
      "stride": [1,1],
      "avg_pool": [1,1]
    },
    "layers": [
      ["linear 512 initializer=stylegan", "linear 512 initializer=stylegan name=w"],
      "linear 32*32*32 initializer=stylegan",
      "layer_filter",
      "adaptive_instance_norm",
      "resize_conv 64",
      "layer_filter",
      "adaptive_instance_norm",
      "resize_conv 32",
      "layer_filter",
      "adaptive_instance_norm",
      "resize_conv 16",
      "layer_filter",
      "adaptive_instance_norm",
      "resize_conv 3 stride=2 activation=clamped_unit"
    ]
  },

  "latent": {
    "class": "function:hypergan.distributions.uniform_distribution.UniformDistribution",
    "max": 1,
    "min": -1,
    "projections": [
      "function:hypergan.distributions.uniform_distribution.identity"
    ],
    "z": 100
  },
   "loss":
  {
    "class": "function:hypergan.losses.logistic_loss.LogisticLoss",
    "reduce": "reduce_mean"
  },
  "trainer": {
    "class": "function:hypergan.trainers.batch_fitness_trainer.BatchFitnessTrainer",
    "heuristic": 0,
    "search_steps": 100000,
    "trainer": {
      "class": "function:hypergan.trainers.simultaneous_trainer.SimultaneousTrainer",
      "optimizer": {
        "class": "function:hypergan.optimizers.curl_optimizer.CurlOptimizer",
        "learn_rate": 0.00001,
        "d_rho": 1.0,
        "g_rho": 1.0,

        "optimizer": {
          "class": "function:hypergan.optimizers.experimental.negative_momentum_optimizer.NegativeMomentumOptimizer",
          "decay": 1.0,
          "alpha": 0.5,
          "beta": 0.66,
          "optimizer": {
            "class": "function:tensorflow.python.training.adam.AdamOptimizer",
            "learn_rate": 1e-4,
            "beta1":0.0,
            "beta2":0.999
          }
        }

      },
      "hooks":[
        {
          "class": "function:hypergan.train_hooks.experimental.input_fitness_train_hook.InputFitnessTrainHook",
          "heuristic": 0,
          "search_steps": 100000
        },
        {
          "class": "function:hypergan.train_hooks.experimental.match_support_train_hook.MatchSupportTrainHook",
          "variables": ["generator"],
          "loss_threshold": 1.0,
          "loss": "fixed2",
          "max_steps": 100,
          "max_depth": 1,
          "optimizer": {
            "class": "function:tensorflow.python.training.rmsprop.RMSPropOptimizer",
            "learn_rate": 0.0005
          }
        }
      ]
    }
  },

  "runtime": {
      "channels": 3,
      "width": 256,
      "height": 256,
      "train": "python3 hypergan/examples/colorizer.py train [dataset] --sample_every 100 --format jpg --size 256x256x3 -b 4 -c colorizer --save_every 5000 -z 1"
  },
  "fixed_input": true,


  "class": "class:hypergan.gans.standard_gan.StandardGAN"


}
