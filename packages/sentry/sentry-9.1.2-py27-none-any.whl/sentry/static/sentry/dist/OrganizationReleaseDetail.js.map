{"version":3,"sources":["webpack:///./app/views/releases/detail/shared/utils.jsx","webpack:///./app/components/releaseStats.jsx","webpack:///./app/views/releases/detail/shared/releaseDetailActions.jsx","webpack:///./app/views/releases/detail/shared/releaseHeader.jsx","webpack:///./app/views/releases/detail/organization/index.jsx"],"names":["__webpack_require__","d","__webpack_exports__","deleteRelease","getFilesByRepository","app_api__WEBPACK_IMPORTED_MODULE_0__","orgId","version","Client","requestPromise","concat","encodeURIComponent","method","fileList","reduce","fbr","file","filename","repoName","author","type","hasOwnProperty","authors","types","Set","repos","email","add","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","create_react_class__WEBPACK_IMPORTED_MODULE_2__","create_react_class__WEBPACK_IMPORTED_MODULE_2___default","react_emotion__WEBPACK_IMPORTED_MODULE_3__","app_components_avatar_avatarList__WEBPACK_IMPORTED_MODULE_4__","app_locale__WEBPACK_IMPORTED_MODULE_5__","ReleaseStats","createReactClass","displayName","propTypes","release","PropTypes","object","render","this","props","commitCount","authorCount","length","releaseSummary","t","a","createElement","className","ReleaseSummaryHeading","style","display","users","avatarSize","typeMembers","styled","target","p","theme","gray2","ReleaseDetailsActions","handleDelete","_this$props","_this","projectId","redirectPath","addLoadingMessage","then","browserHistory","push","catch","addErrorMessage","react_default","components_confirm","onConfirm","message","components_button","size","icon","React","Component","string","isRequired","SentryTypes","Release","ReleaseHeader","releasePath","links","title","to","anchor","url","externalLink","href","textOverflow","timeSince","date","dateCreated","releaseStats","count","value","newGroups","firstEvent","lastEvent","releaseDetailActions_ReleaseDetailsActions","api","navTabs","map","link","listLink","key","context","location","search","isActive","pathname","contextTypes","OrganizationReleaseDetailsContainer","react__WEBPACK_IMPORTED_MODULE_7___default","app_styles_organization__WEBPACK_IMPORTED_MODULE_18__","app_components_alert__WEBPACK_IMPORTED_MODULE_11__","app_components_acl_feature__WEBPACK_IMPORTED_MODULE_9__","features","organization","renderDisabled","renderNoAccess","app_components_organizations_globalSelectionHeader__WEBPACK_IMPORTED_MODULE_14__","OrganizationReleaseDetails","Organization","state","params","slug","_this$props$params","_this$props2","query","lodash_pick__WEBPACK_IMPORTED_MODULE_5___default","Object","values","URL_PARAM","loading","app_components_loadingIndicator__WEBPACK_IMPORTED_MODULE_13__","error","app_components_loadingError__WEBPACK_IMPORTED_MODULE_12__","onRetry","fetchData","_shared_releaseHeader__WEBPACK_IMPORTED_MODULE_19__","cloneElement","children","AsyncView","childContextTypes","withOrganization"],"mappings":"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","file":"OrganizationReleaseDetail.js","sourcesContent":["import {Client} from 'app/api';\n\n/**\n * Delete release version\n *\n * @param {String} orgId Organization slug\n * @param {String} version Version\n * @returns {Promise}\n */\nexport function deleteRelease(orgId, version) {\n  const api = new Client();\n\n  return api.requestPromise(\n    `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`,\n    {\n      method: 'DELETE',\n    }\n  );\n}\n\n/**\n * Convert list of individual file changes into a per-file summary grouped by repository\n *\n * @param {Array<File>} fileList List of files\n * @returns {Object} Object grouped by repository and file name\n */\nexport function getFilesByRepository(fileList) {\n  return fileList.reduce(function(fbr, file) {\n    const {filename, repoName, author, type} = file;\n    if (!fbr.hasOwnProperty(repoName)) {\n      fbr[repoName] = {};\n    }\n    if (!fbr[repoName].hasOwnProperty(filename)) {\n      fbr[repoName][filename] = {\n        authors: {},\n        types: new Set(),\n        repos: new Set(),\n      };\n    }\n\n    fbr[repoName][filename].authors[author.email] = author;\n    fbr[repoName][filename].types.add(type);\n\n    return fbr;\n  }, {});\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport styled from 'react-emotion';\n\nimport AvatarList from 'app/components/avatar/avatarList';\nimport {t} from 'app/locale';\n\nconst ReleaseStats = createReactClass({\n  displayName: 'ReleaseStats',\n\n  propTypes: {\n    release: PropTypes.object,\n  },\n\n  render() {\n    const release = this.props.release;\n    const commitCount = release.commitCount || 0;\n    const authorCount = (release.authors && release.authors.length) || 0;\n    if (commitCount === 0) {\n      return null;\n    }\n\n    const releaseSummary =\n      commitCount +\n      t(commitCount !== 1 ? ' commits ' : ' commit ') +\n      t('by ') +\n      authorCount +\n      t(authorCount !== 1 ? ' authors' : ' author');\n\n    return (\n      <div className=\"release-stats\">\n        <ReleaseSummaryHeading>{releaseSummary}</ReleaseSummaryHeading>\n        <span style={{display: 'inline-block'}}>\n          <AvatarList users={release.authors} avatarSize={25} typeMembers={'authors'} />\n        </span>\n      </div>\n    );\n  },\n});\n\nconst ReleaseSummaryHeading = styled.div`\n  color: ${p => p.theme.gray2};\n  font-size: 12px;\n  line-height: 1.2;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-bottom: 4px;\n`;\n\nexport default ReleaseStats;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {browserHistory} from 'react-router';\n\nimport {t} from 'app/locale';\nimport {addErrorMessage, addLoadingMessage} from 'app/actionCreators/indicator';\nimport SentryTypes from 'app/sentryTypes';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\n\nimport {deleteRelease} from './utils';\n\nexport default class ReleaseDetailsActions extends React.Component {\n  static propTypes = {\n    orgId: PropTypes.string.isRequired,\n    // Provided in the project release page only\n    projectId: PropTypes.string,\n    release: SentryTypes.Release.isRequired,\n  };\n\n  handleDelete = () => {\n    const {orgId, projectId, release} = this.props;\n    const redirectPath = projectId\n      ? `/${orgId}/${projectId}/releases/`\n      : `/organizations/${orgId}/releases/`;\n    addLoadingMessage(t('Deleting Release...'));\n\n    deleteRelease(orgId, release.version)\n      .then(() => {\n        browserHistory.push(redirectPath);\n      })\n      .catch(() => {\n        addErrorMessage(\n          t('This release is referenced by active issues and cannot be removed.')\n        );\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"m-b-1\">\n        <div className=\"btn-group\">\n          <Confirm\n            onConfirm={this.handleDelete}\n            message={t(\n              'Deleting this release is permanent. Are you sure you wish to continue?'\n            )}\n          >\n            <Button size=\"small\" icon=\"icon-trash\">\n              {t('Delete')}\n            </Button>\n          </Confirm>\n        </div>\n      </div>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t} from 'app/locale';\n\nimport Count from 'app/components/count';\nimport ExternalLink from 'app/components/externalLink';\nimport ListLink from 'app/components/listLink';\nimport NavTabs from 'app/components/navTabs';\nimport ReleaseStats from 'app/components/releaseStats';\nimport TextOverflow from 'app/components/textOverflow';\nimport TimeSince from 'app/components/timeSince';\nimport Version from 'app/components/version';\n\nimport ReleaseDetailsActions from './releaseDetailActions';\n\nexport default class ReleaseHeader extends React.Component {\n  static propTypes = {\n    release: PropTypes.object.isRequired,\n    orgId: PropTypes.string.isRequired,\n    projectId: PropTypes.string,\n  };\n\n  static contextTypes = {\n    location: PropTypes.object,\n  };\n\n  render() {\n    const {release, orgId, projectId} = this.props;\n\n    const releasePath = projectId\n      ? `/${orgId}/${projectId}/releases/${encodeURIComponent(release.version)}/`\n      : `/organizations/${orgId}/releases/${encodeURIComponent(release.version)}/`;\n\n    const links = [\n      {title: t('Overview'), to: releasePath},\n      {title: t('New Issues'), to: `${releasePath}new-events/`},\n      {title: t('All Issues'), to: `${releasePath}all-events/`},\n      {title: t('Artifacts'), to: `${releasePath}artifacts/`},\n      {title: t('Commits'), to: `${releasePath}commits/`},\n    ];\n\n    return (\n      <div className=\"release-details\">\n        <div className=\"row\">\n          <div className=\"col-sm-4 col-xs-12\">\n            <h3>\n              {t('Release')}{' '}\n              <strong>\n                <Version\n                  orgId={orgId}\n                  projectId={projectId}\n                  version={release.version}\n                  anchor={false}\n                />\n              </strong>\n            </h3>\n            {!!release.url && (\n              <div>\n                <ExternalLink href={release.url}>\n                  <TextOverflow>{release.url}</TextOverflow>\n                </ExternalLink>\n              </div>\n            )}\n            <div className=\"release-meta\">\n              <span className=\"icon icon-clock\" />{' '}\n              <TimeSince date={release.dateCreated} />\n            </div>\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <ReleaseStats release={release} />\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <div className=\"release-stats\">\n              <h6 className=\"nav-header\">{t('New Issues')}</h6>\n              <span className=\"stream-count\">\n                <Count value={release.newGroups} />\n              </span>\n            </div>\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <div className=\"release-stats\">\n              <h6 className=\"nav-header\">{t('First Event')}</h6>\n              {release.firstEvent ? (\n                <span className=\"stream-count\">\n                  <TimeSince date={release.firstEvent} />\n                </span>\n              ) : (\n                <span>—</span>\n              )}\n            </div>\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <div className=\"release-stats\">\n              <h6 className=\"nav-header\">{t('Last Event')}</h6>\n              {release.lastEvent ? (\n                <span className=\"stream-count\">\n                  <TimeSince date={release.lastEvent} />\n                </span>\n              ) : (\n                <span>—</span>\n              )}\n            </div>\n          </div>\n        </div>\n        <ReleaseDetailsActions\n          api={this.api}\n          orgId={orgId}\n          projectId={projectId}\n          release={release}\n        />\n        <NavTabs>\n          {links.map(link => (\n            <ListLink\n              key={link.to}\n              to={`${link.to}${this.context.location.search}`}\n              isActive={() => link.to === this.context.location.pathname}\n            >\n              {link.title}\n            </ListLink>\n          ))}\n        </NavTabs>\n      </div>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {pick} from 'lodash';\n\nimport SentryTypes from 'app/sentryTypes';\nimport Feature from 'app/components/acl/feature';\nimport {t} from 'app/locale';\nimport Alert from 'app/components/alert';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';\nimport {URL_PARAM} from 'app/components/organizations/globalSelectionHeader/constants';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\nimport {PageContent} from 'app/styles/organization';\n\nimport ReleaseHeader from '../shared/releaseHeader';\n\nclass OrganizationReleaseDetailsContainer extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  renderNoAccess() {\n    return (\n      <PageContent>\n        <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n      </PageContent>\n    );\n  }\n\n  render() {\n    return (\n      <Feature\n        features={['organizations:sentry10']}\n        organization={this.props.organization}\n        renderDisabled={this.renderNoAccess}\n      >\n        <GlobalSelectionHeader organization={this.props.organization} />\n        <OrganizationReleaseDetails {...this.props} />\n      </Feature>\n    );\n  }\n}\n\nclass OrganizationReleaseDetails extends AsyncView {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  static childContextTypes = {\n    release: PropTypes.object,\n  };\n\n  getChildContext() {\n    return {\n      release: this.state.release,\n    };\n  }\n\n  getTitle() {\n    const {params: {version}, organization} = this.props;\n    return `Release ${version} | ${organization.slug}`;\n  }\n\n  getEndpoints() {\n    const {orgId, version} = this.props.params;\n    return [\n      ['release', `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`],\n    ];\n  }\n\n  renderBody() {\n    const {location, params: {orgId}} = this.props;\n    const {release} = this.state;\n\n    const query = pick(location.query, Object.values(URL_PARAM));\n\n    if (this.state.loading) {\n      return <LoadingIndicator />;\n    }\n    if (this.state.error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    return (\n      <PageContent>\n        <ReleaseHeader release={release} orgId={orgId} />\n        {React.cloneElement(this.props.children, {\n          release,\n          query,\n        })}\n      </PageContent>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationReleaseDetailsContainer);\n"],"sourceRoot":""}