Metadata-Version: 1.1
Name: mlprodict
Version: 0.2.272
Summary: Python Runtime for ONNX models, other helpers to convert machine learned models in C++.
Home-page: http://www.xavierdupre.fr/app/mlprodict/helpsphinx/index.html
Author: Xavier Dupré
Author-email: xavier.dupre@gmail.com
License: MIT
Download-URL: https://github.com/sdpython/mlprodict/
Description: 
        .. image:: https://travis-ci.org/sdpython/mlprodict.svg?branch=master
            :target: https://travis-ci.org/sdpython/mlprodict
            :alt: Build status
        
        .. image:: https://ci.appveyor.com/api/projects/status/g8chk1ufyk1m8uep?svg=true
            :target: https://ci.appveyor.com/project/sdpython/mlprodict
            :alt: Build Status Windows
        
        .. image:: https://circleci.com/gh/sdpython/mlprodict/tree/master.svg?style=svg
            :target: https://circleci.com/gh/sdpython/mlprodict/tree/master
        
        .. image:: https://badge.fury.io/py/mlprodict.svg
            :target: https://pypi.org/project/mlprodict/
        
        .. image:: https://img.shields.io/badge/license-MIT-blue.svg
            :alt: MIT License
            :target: http://opensource.org/licenses/MIT
        
        .. image:: https://requires.io/github/sdpython/mlprodict/requirements.svg?branch=master
             :target: https://requires.io/github/sdpython/mlprodict/requirements/?branch=master
             :alt: Requirements Status
        
        .. image:: https://codecov.io/github/sdpython/mlprodict/coverage.svg?branch=master
            :target: https://codecov.io/github/sdpython/mlprodict?branch=master
        
        .. image:: http://img.shields.io/github/issues/sdpython/mlprodict.png
            :alt: GitHub Issues
            :target: https://github.com/sdpython/mlprodict/issues
        
        .. image:: http://www.xavierdupre.fr/app/mlprodict/helpsphinx/_images/nbcov.png
            :target: http://www.xavierdupre.fr/app/mlprodict/helpsphinx/all_notebooks_coverage.html
            :alt: Notebook Coverage
        
        .. _l-README:
        
        mlprodict
        =========
        
        The packages explores ways to productionize machine learning predictions.
        One approach uses *ONNX* and tries to implement
        a runtime in python / numpy or wraps
        `onnxruntime <https://github.com/Microsoft/onnxruntime>`_
        into a single class. The package provides tools to compare
        predictions, to benchmark models converted with
        `sklearn-onnx <https://github.com/onnx/sklearn-onnx/tree/master/skl2onnx>`_.
        
        The second approach consists in converting
        a pipeline directly into C and is not much developed.
        
        * `GitHub/mlprodict <https://github.com/sdpython/mlprodict/>`_
        * `documentation <http://www.xavierdupre.fr/app/mlprodict/helpsphinx/index.html>`_
        * `Blog <http://www.xavierdupre.fr/app/mlprodict/helpsphinx/blog/main_0000.html#ap-main-0>`_
        
        ::
        
            from sklearn.linear_model import LinearRegression
            from sklearn.datasets import load_iris
            from mlprodict.onnxrt import OnnxInference, measure_relative_difference
            import numpy
        
            iris = load_iris()
            X = iris.data[:, :2]
            y = iris.target
            lr = LinearRegression()
            lr.fit(X, y)
        
            # Predictions with scikit-learn.
            expected = lr.predict(X[:5])
            print(expected)
        
            # Conversion into ONNX.
            from skl2onnx import to_onnx
            model_onnx = to_onnx(lr, X.astype(numpy.float32))
        
            # Predictions with onnxruntime
            oinf = OnnxInference(model_onnx, runtime='onnxruntime1')
            ypred = oinf.run({'X': X[:5]})
            print(ypred)
        
            # Measuring the maximum difference.
            print(measure_relative_difference(expected, ypred))
        
        .. _l-HISTORY:
        
        =======
        History
        =======
        
        current - 2019-07-05 - 0.00Mb
        =============================
        
        * `13`: add automated benchmark of every scikit-learn operator in the documentation (2019-07-05)
        * `12`: implements a way to measure time for each node of the ONNX graph (2019-07-05)
        * `11`: implements a better ZipMap node based on dedicated container (2019-07-05)
        * `7`: implement python runtime for scaler, pca, knn, kmeans (2019-07-05)
        * `8`: implements runtime for decision tree (2019-07-05)
        * `10`: implements full runtime with onnxruntime not node by node (2019-06-16)
        * `9`: implements a onnxruntime runtime (2019-06-16)
        * `6`: first draft of a python runtime for onnx (2019-06-15)
        * `5`: change style highlight-ipython3 (2018-01-05)
        
        0.1.11 - 2017-12-04 - 0.03Mb
        ============================
        
Keywords: mlprodict,Xavier Dupré
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Intended Audience :: Developers
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Education
Classifier: License :: OSI Approved :: MIT License
Classifier: Development Status :: 5 - Production/Stable
