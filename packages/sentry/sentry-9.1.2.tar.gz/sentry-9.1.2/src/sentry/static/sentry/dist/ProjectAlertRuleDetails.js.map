{"version":3,"sources":["webpack:///./app/views/settings/projectAlerts/ruleEditor/ruleNode.jsx","webpack:///./app/views/settings/projectAlerts/ruleEditor/ruleNodeList.jsx","webpack:///./app/views/settings/projectAlerts/ruleEditor/index.jsx","webpack:///./app/views/settings/projectAlerts/projectAlertRuleDetails.jsx"],"names":["RuleNode","name","data","initialVal","_this","this","undefined","props","choices","length","handlePropertyChange","react_default","a","createElement","components_forms","clearable","placeholder","t","noResultsText","value","key","style","marginLeft","marginRight","onChange","val","_this2","marginBottom","_this3","toString","choice","getChoiceField","bind","number","getNumberField","string","getTextField","type","node","_this4","label","formFields","split","map","part","test","slice","getField","_this$props","component","getComponent","RuleNodeRow","RuleNodeForm","id","RuleNodeControls","components_button","onClick","handleDelete","tabIndex","size","icon","React","Component","propTypes","PropTypes","object","isRequired","shape","func","styled","target","p","theme","offWhite","RuleNodeList","getNode","nodes","find","className","RuleNodes","items","item","idx","ruleNode","handleDeleteRow","selectControl","obj","handleAddRow","width","options","filter","n","enabled","array","FREQUENCY_CHOICES","ACTION_MATCH_CHOICES","AlertRuleRow","RuleEditor","createReactClass","displayName","actions","conditions","project","organization","mixins","ApiMixin","getInitialState","rule","loading","error","componentDidMount","fetchRule","componentDidUpdate","state","$","document","body","scrollTop","formNode","offset","top","_this$props$params","params","ruleId","projectId","orgId","endpoint","concat","api","request","success","setState","defaultRule","actionMatch","frequency","environment","ALL_ENVIRONMENTS_KEY","handleSubmit","e","preventDefault","objectSpread_default","isNew","slug","addMessage","method","resp","browserHistory","replace","recreateRoute","stepBack","addSuccessMessage","response","responseJSON","__all__","addErrorMessage","hasError","field","handleEnvironmentChange","handleChange","prop","prevState","push","_this5","splice","render","_this6","activeEnvs","EnvironmentStore","getActive","environmentChoices","toConsumableArray_default","env","loadingIndicator","_this$state","onSubmit","ref","panels","disablePadding","defaultValue","required","ruleNodeList","ActionBar","CancelButton","to","priority","disabled","Button","space","borderLight","ProjectAlertRuleDetails","_this$context","context","_this$state$configs","configs","ruleEditor","routes","AsyncView","contextTypes","SentryTypes","Organization","Project"],"mappings":"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","file":"ProjectAlertRuleDetails.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport Button from 'app/components/button';\nimport {t} from 'app/locale';\nimport {SelectField, NumberField, TextField} from 'app/components/forms';\n\nclass RuleNode extends React.Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired,\n    node: PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      formFields: PropTypes.object,\n    }).isRequired,\n    handleDelete: PropTypes.func.isRequired,\n    handlePropertyChange: PropTypes.func.isRequired,\n  };\n\n  getChoiceField(name, data) {\n    // Select the first item on this list\n    // If it's not yet defined, call handlePropertyChange to make sure the value is set on state\n\n    let initialVal;\n    if (this.props.data[name] === undefined && !!data.choices.length) {\n      initialVal = data.choices[0][0];\n      this.props.handlePropertyChange(name, initialVal);\n    } else {\n      initialVal = this.props.data[name];\n    }\n\n    return (\n      <SelectField\n        clearable={false}\n        placeholder={t('Select integration')}\n        noResultsText={t('No integrations available')}\n        name={name}\n        value={initialVal}\n        choices={data.choices}\n        key={name}\n        style={{marginLeft: 6, marginRight: 6}}\n        onChange={val => this.props.handlePropertyChange(name, val)}\n      />\n    );\n  }\n\n  getTextField(name, data) {\n    return (\n      <TextField\n        name={name}\n        value={this.props.data[name]}\n        placeholder={data.placeholder}\n        key={name}\n        style={{marginBottom: 0}}\n        onChange={val => this.props.handlePropertyChange(name, val)}\n      />\n    );\n  }\n\n  getNumberField(name, data) {\n    return (\n      <NumberField\n        name={name}\n        value={this.props.data[name]}\n        placeholder={data.placeholder.toString()}\n        key={name}\n        style={{marginBottom: 0}}\n        onChange={val => this.props.handlePropertyChange(name, val)}\n      />\n    );\n  }\n\n  getField(name, data) {\n    const getFieldTypes = {\n      choice: this.getChoiceField.bind(this),\n      number: this.getNumberField.bind(this),\n      string: this.getTextField.bind(this),\n    };\n    return getFieldTypes[data.type](name, data);\n  }\n\n  getComponent(node) {\n    const {label, formFields} = node;\n\n    return label.split(/({\\w+})/).map(part => {\n      if (!/^{\\w+}$/.test(part)) {\n        return part;\n      }\n\n      const key = part.slice(1, -1);\n      return formFields[key] ? this.getField(key, formFields[key]) : part;\n    });\n  }\n\n  render() {\n    const {data, node} = this.props;\n\n    const component = this.getComponent(node);\n\n    return (\n      <RuleNodeRow>\n        <RuleNodeForm>\n          <input type=\"hidden\" name=\"id\" value={data.id} />\n          {component}\n        </RuleNodeForm>\n        <RuleNodeControls>\n          <Button\n            onClick={this.props.handleDelete}\n            type=\"button\"\n            tabIndex=\"-1\"\n            size=\"small\"\n            icon=\"icon-trash\"\n          />\n        </RuleNodeControls>\n      </RuleNodeRow>\n    );\n  }\n}\n\nexport default RuleNode;\n\nconst RuleNodeRow = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 15px;\n\n  &:nth-child(odd) {\n    background-color: ${p => p.theme.offWhite};\n  }\n`;\n\nconst RuleNodeForm = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1;\n  line-height: 40px;\n  margin: 5px 12px 5px 0;\n  align-items: center;\n\n  .control-group {\n    margin: 0 6px;\n  }\n\n  .form-control {\n    padding: 3px 12px;\n  }\n\n  .Select {\n    line-height: 26px;\n    min-width: 150px;\n  }\n  .Select-placeholder {\n    height: 26px;\n    line-height: 26px;\n  }\n  .Select-control {\n    height: 24px;\n  }\n  .Select--single > .Select-control .Select-value {\n    line-height: 25px;\n  }\n  .Select-input {\n    height: 24px;\n    input {\n      line-height: 20px;\n      padding: 2px 0;\n    }\n  }\n`;\n\nconst RuleNodeControls = styled.div`\n  margin-left: 6px;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport SelectControl from 'app/components/forms/selectControl';\nimport RuleNode from 'app/views/settings/projectAlerts/ruleEditor/ruleNode';\n\nclass RuleNodeList extends React.Component {\n  static propTypes = {\n    items: PropTypes.array,\n    nodes: PropTypes.array.isRequired,\n    handlePropertyChange: PropTypes.func.isRequired,\n    handleAddRow: PropTypes.func.isRequired,\n    handleDeleteRow: PropTypes.func.isRequired,\n  };\n\n  getNode = id => {\n    return this.props.nodes.find(node => node.id === id);\n  };\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <RuleNodes>\n          {this.props.items.map((item, idx) => {\n            return (\n              <RuleNode\n                key={idx}\n                node={this.getNode(item.id)}\n                handleDelete={() => this.props.handleDeleteRow(idx)}\n                data={item}\n                handlePropertyChange={this.props.handlePropertyChange(idx)}\n              />\n            );\n          })}\n        </RuleNodes>\n        <fieldset>\n          <SelectControl\n            onChange={obj => this.props.handleAddRow(obj ? obj.value : obj)}\n            style={{width: '100%'}}\n            options={this.props.nodes.filter(n => n.enabled).map(node => ({\n              value: node.id,\n              label: node.label,\n            }))}\n          />\n        </fieldset>\n      </div>\n    );\n  }\n}\n\nexport default RuleNodeList;\n\nconst RuleNodes = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n","import $ from 'jquery';\nimport {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport styled from 'react-emotion';\n\nimport {ALL_ENVIRONMENTS_KEY} from 'app/constants';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {SelectField, TextField} from 'app/components/forms';\nimport {\n  addErrorMessage,\n  addSuccessMessage,\n  addMessage,\n} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport ApiMixin from 'app/mixins/apiMixin';\nimport Button from 'app/components/button';\nimport EnvironmentStore from 'app/stores/environmentStore';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport RuleNodeList from 'app/views/settings/projectAlerts/ruleEditor/ruleNodeList';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport space from 'app/styles/space';\n\nconst FREQUENCY_CHOICES = [\n  ['5', t('5 minutes')],\n  ['10', t('10 minutes')],\n  ['30', t('30 minutes')],\n  ['60', t('60 minutes')],\n  ['180', t('3 hours')],\n  ['720', t('12 hours')],\n  ['1440', t('24 hours')],\n  ['10080', t('one week')],\n  ['43200', t('30 days')],\n];\n\nconst ACTION_MATCH_CHOICES = [['all', t('all')], ['any', t('any')], ['none', t('none')]];\n\nconst AlertRuleRow = styled('h6')`\n  display: flex;\n  align-items: center;\n`;\n\nconst RuleEditor = createReactClass({\n  displayName: 'RuleEditor',\n\n  propTypes: {\n    actions: PropTypes.array.isRequired,\n    conditions: PropTypes.array.isRequired,\n    project: PropTypes.object.isRequired,\n    organization: PropTypes.object.isRequired,\n  },\n\n  mixins: [ApiMixin],\n\n  getInitialState() {\n    return {\n      rule: null,\n      loading: false,\n      error: null,\n    };\n  },\n\n  componentDidMount() {\n    this.fetchRule();\n  },\n\n  componentDidUpdate() {\n    if (this.state.error) {\n      $(document.body).scrollTop($(this.formNode).offset().top);\n    }\n  },\n\n  fetchRule() {\n    const {ruleId, projectId, orgId} = this.props.params;\n\n    if (ruleId) {\n      const endpoint = `/projects/${orgId}/${projectId}/rules/${ruleId}/`;\n      this.api.request(endpoint, {\n        success: rule => {\n          this.setState({\n            rule,\n          });\n        },\n      });\n    } else {\n      const defaultRule = {\n        actionMatch: 'all',\n        actions: [],\n        conditions: [],\n        name: '',\n        frequency: 30,\n        environment: ALL_ENVIRONMENTS_KEY,\n      };\n\n      this.setState({rule: defaultRule});\n    }\n  },\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const data = {...this.state.rule};\n    const isNew = !data.id;\n    const {project, organization} = this.props;\n\n    let endpoint = `/projects/${organization.slug}/${project.slug}/rules/`;\n    if (data.id) {\n      endpoint += data.id + '/';\n    }\n\n    if (data.environment === ALL_ENVIRONMENTS_KEY) {\n      delete data.environment;\n    }\n\n    addMessage(t('Saving...'));\n\n    this.api.request(endpoint, {\n      method: isNew ? 'POST' : 'PUT',\n      data,\n      success: resp => {\n        this.setState({error: null, loading: false, rule: resp});\n        // Redirect to correct ID if /new\n        if (isNew) {\n          browserHistory.replace(\n            recreateRoute(`${resp.id}/`, {...this.props, stepBack: -1})\n          );\n        }\n        addSuccessMessage(isNew ? t('Created alert rule') : t('Updated alert rule'));\n      },\n      error: response => {\n        this.setState({\n          error: response.responseJSON || {__all__: 'Unknown error'},\n          loading: false,\n        });\n        addErrorMessage(t('An error occurred'));\n      },\n    });\n  },\n\n  hasError(field) {\n    const {error} = this.state;\n    if (!error) {\n      return false;\n    }\n    return !!error[field];\n  },\n\n  handleEnvironmentChange(val) {\n    // If 'All Environments' is selected the value should be null\n    if (val === ALL_ENVIRONMENTS_KEY) {\n      this.handleChange('environment', null);\n    } else {\n      this.handleChange('environment', val);\n    }\n  },\n\n  handleChange(prop, val) {\n    this.setState(state => {\n      const rule = {...state.rule};\n      rule[prop] = val;\n      return {rule};\n    });\n  },\n\n  handlePropertyChange(type) {\n    return idx => {\n      return (prop, val) => {\n        const rule = {...this.state.rule};\n        rule[type][idx][prop] = val;\n        this.setState({rule});\n      };\n    };\n  },\n\n  handleAddRow(type) {\n    return id => {\n      this.setState(prevState => {\n        prevState.rule[type].push({id});\n        return {\n          rule: prevState.rule,\n        };\n      });\n    };\n  },\n\n  handleDeleteRow(type) {\n    return idx => {\n      this.setState(prevState => {\n        prevState.rule[type].splice(idx, 1);\n        return {\n          rule: prevState.rule,\n        };\n      });\n    };\n  },\n\n  render() {\n    const activeEnvs = EnvironmentStore.getActive() || [];\n    const environmentChoices = [\n      [ALL_ENVIRONMENTS_KEY, t('All Environments')],\n      ...activeEnvs.map(env => [env.name, env.displayName]),\n    ];\n\n    if (!this.state.rule) {\n      return <LoadingIndicator />;\n    }\n\n    const {rule, loading, error} = this.state;\n    const {actionMatch, actions, conditions, frequency, name} = rule;\n\n    const environment =\n      rule.environment === null ? ALL_ENVIRONMENTS_KEY : rule.environment;\n\n    return (\n      <form onSubmit={this.handleSubmit} ref={node => (this.formNode = node)}>\n        <Panel className=\"rule-detail\">\n          <PanelHeader>{rule.id ? 'Edit Alert Rule' : 'New Alert Rule'}</PanelHeader>\n          <PanelBody disablePadding={false}>\n            {error && (\n              <div className=\"alert alert-block alert-error\">\n                <p>\n                  {t(\n                    'There was an error saving your changes. Make sure all fields are valid and try again.'\n                  )}\n                </p>\n              </div>\n            )}\n            <h6>{t('Rule name')}:</h6>\n            <TextField\n              name=\"name\"\n              defaultValue={name}\n              required={true}\n              placeholder={t('My Rule Name')}\n              onChange={val => this.handleChange('name', val)}\n            />\n\n            <hr />\n\n            <AlertRuleRow>\n              {t(\n                'Every time %s of these conditions are met:',\n                <SelectField\n                  clearable={false}\n                  className={this.hasError('actionMatch') ? ' error' : ''}\n                  style={{marginBottom: 0, marginLeft: 5, marginRight: 5, width: 100}}\n                  name=\"actionMatch\"\n                  value={actionMatch}\n                  required={true}\n                  choices={ACTION_MATCH_CHOICES}\n                  onChange={val => this.handleChange('actionMatch', val)}\n                />\n              )}\n            </AlertRuleRow>\n\n            {this.hasError('conditions') && (\n              <p className=\"error\">{this.state.error.conditions[0]}</p>\n            )}\n\n            <RuleNodeList\n              nodes={this.props.conditions}\n              items={conditions || []}\n              className=\"rule-condition-list\"\n              handlePropertyChange={this.handlePropertyChange('conditions')}\n              handleAddRow={this.handleAddRow('conditions')}\n              handleDeleteRow={this.handleDeleteRow('conditions')}\n            />\n\n            <hr />\n\n            <h6>{t('In this environment')}:</h6>\n            <SelectField\n              clearable={false}\n              className={this.hasError('environment') ? ' error' : ''}\n              style={{marginBottom: 0, marginLeft: 5, marginRight: 5}}\n              name=\"environment\"\n              value={environment}\n              required={true}\n              choices={environmentChoices}\n              onChange={val => this.handleEnvironmentChange(val)}\n            />\n\n            <hr />\n\n            <h6>{t('Take these actions:')}</h6>\n\n            {this.hasError('actions') && (\n              <p className=\"error\">{this.state.error.actions[0]}</p>\n            )}\n\n            <RuleNodeList\n              nodes={this.props.actions}\n              items={actions || []}\n              handlePropertyChange={this.handlePropertyChange('actions')}\n              handleAddRow={this.handleAddRow('actions')}\n              handleDeleteRow={this.handleDeleteRow('actions')}\n            />\n\n            <hr />\n\n            <AlertRuleRow>\n              {t(\n                'Perform these actions at most once every %s for an issue.',\n                <SelectField\n                  clearable={false}\n                  name=\"frequency\"\n                  className={this.hasError('frequency') ? ' error' : ''}\n                  value={frequency}\n                  style={{marginBottom: 0, marginLeft: 5, marginRight: 5, width: 140}}\n                  required={true}\n                  choices={FREQUENCY_CHOICES}\n                  onChange={val => this.handleChange('frequency', val)}\n                />\n              )}\n            </AlertRuleRow>\n\n            <ActionBar>\n              <CancelButton to={recreateRoute('', {...this.props, stepBack: -1})}>\n                {t('Cancel')}\n              </CancelButton>\n              <Button priority=\"primary\" disabled={loading}>\n                {t('Save Rule')}\n              </Button>\n            </ActionBar>\n          </PanelBody>\n        </Panel>\n      </form>\n    );\n  },\n});\n\nexport default RuleEditor;\n\nconst CancelButton = styled(Button)`\n  margin-right: ${space(1)};\n`;\n\nconst ActionBar = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  padding: ${space(2)};\n  border-top: 1px solid ${p => p.theme.borderLight};\n  margin: 0 -${space(2)} -${space(2)};\n`;\n","import React from 'react';\n\nimport SentryTypes from 'app/sentryTypes';\nimport AsyncView from 'app/views/asyncView';\nimport RuleEditor from 'app/views/settings/projectAlerts/ruleEditor';\n\nclass ProjectAlertRuleDetails extends AsyncView {\n  static contextTypes = {\n    organization: SentryTypes.Organization,\n    project: SentryTypes.Project,\n  };\n\n  getEndpoints() {\n    const {orgId, projectId} = this.props.params;\n\n    return [['configs', `/projects/${orgId}/${projectId}/rules/configuration/`]];\n  }\n\n  renderBody() {\n    const {organization, project} = this.context;\n    const {actions, conditions} = this.state.configs;\n\n    return (\n      <RuleEditor\n        organization={organization}\n        project={project}\n        actions={actions}\n        conditions={conditions}\n        params={this.props.params}\n        routes={this.props.routes}\n      />\n    );\n  }\n}\n\nexport default ProjectAlertRuleDetails;\n"],"sourceRoot":""}