{"version":3,"sources":["webpack:///./app/components/modals/createTeamModal.jsx","webpack:///./app/components/createTeam/createTeamForm.jsx"],"names":["CreateTeamModal","handleSubmit","data","onSuccess","onError","createTeam","Client","orgId","_this","props","organization","slug","then","resp","handleSuccess","catch","err","onClose","closeModal","_this$props","this","Body","Header","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","Fragment","closeButton","onHide","t","app_components_createTeam_createTeamForm__WEBPACK_IMPORTED_MODULE_12__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","onSubmit","React","Component","propTypes","PropTypes","func","oneOfType","node","isRequired","SentryTypes","Organization","project","Project","CreateTeamForm","handleCreateTeamSuccess","react__WEBPACK_IMPORTED_MODULE_7___default","app_views_settings_components_forms_form__WEBPACK_IMPORTED_MODULE_9__","submitLabel","apiEndpoint","concat","apiMethod","onSubmitSuccess","requireChanges","data-test-id","formProps","app_views_settings_components_forms_textField__WEBPACK_IMPORTED_MODULE_11__","name","label","placeholder","help","required","stacked","flexibleControlStateSize","inline","transformInput","slugify","object"],"mappings":"kSASMA,qLAUJC,aAAe,SAACC,EAAMC,EAAWC,GAC/BC,YAAW,IAAIC,SAAUJ,EAAM,CAACK,MAAOC,EAAKC,MAAMC,aAAaC,OAC5DC,KAAK,SAAAC,GACJL,EAAKM,cAAcD,GACnBV,EAAUU,KAEXE,MAAM,SAAAC,GACLZ,EAAQY,QAIdF,cAAgB,SAAAZ,GACVM,EAAKC,MAAMQ,SACbT,EAAKC,MAAMQ,QAAQf,GAGrBM,EAAKC,MAAMS,sEAGJ,IAAAC,EACsCC,KAAKX,MAA3CY,EADAF,EACAE,KAAMC,EADNH,EACMG,OAAQJ,EADdC,EACcD,WAAeT,EAD7Bc,IAAAJ,EAAA,gCAGP,OACEK,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACJ,EAAD,CAAQM,aAAW,EAACC,OAAQX,GACzBY,YAAE,gBAELN,EAAAC,EAAAC,cAACL,EAAD,KACEG,EAAAC,EAAAC,cAACK,EAAA,EAADC,IAAA,GAAoBvB,EAApB,CAA2BwB,SAAUb,KAAKnB,yBAtCtBiC,IAAMC,WAA9BnC,EACGoC,UAAY,CACjBlB,WAAYmB,IAAUC,KACtBrB,QAASoB,IAAUC,KACnBjB,KAAMgB,IAAUE,UAAU,CAACF,IAAUC,KAAMD,IAAUG,OAAOC,WAC5DnB,OAAQe,IAAUE,UAAU,CAACF,IAAUC,KAAMD,IAAUG,OAAOC,WAC9D/B,aAAcgC,UAAYC,aAAaF,WACvCG,QAASF,UAAYG,SAsCV7C,6PC7CM8C,qLAQnBC,wBAA0B,SAAA7C,GAAQ,IACzBC,EAAaK,EAAKC,MAAlBN,UAEkB,mBAAdA,GAIXA,EAAUD,4DAGH,IACAQ,EAAgBU,KAAKX,MAArBC,aAEP,OACEsC,EAAAvB,EAAAC,cAACsB,EAAAvB,EAAME,SAAP,KACEqB,EAAAvB,EAAAC,cAAA,SACGI,YACC,qHAIJkB,EAAAvB,EAAAC,cAACuB,EAAA,QAADjB,IAAA,CACEkB,YAAapB,YAAE,eACfqB,YAAW,kBAAAC,OAAoB1C,EAAaC,KAAjC,WACX0C,UAAU,OACVpB,SAAUb,KAAKX,MAAMwB,SACrBqB,gBAAiBlC,KAAK2B,wBACtBQ,gBAAc,EACdC,eAAa,oBACTpC,KAAKX,MAAMgD,WAEfT,EAAAvB,EAAAC,cAACgC,EAAA,QAAD,CACEC,KAAK,OACLC,MAAO9B,YAAE,aACT+B,YAAa/B,YAAE,0CACfgC,KAAMhC,YAAE,mEACRiC,UAAQ,EACRC,SAAO,EACPC,0BAAwB,EACxBC,QAAQ,EACRC,eAAgBC,eAhDgBlC,IAAMC,WAA7BW,EACZV,UAAY,CACjB1B,aAAcgC,UAAYC,aAAaF,WACvCtC,UAAWkC,IAAUC,KACrBL,SAAUI,IAAUC,KACpBmB,UAAWpB,IAAUgC","file":"CreateTeamModal.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {Client} from 'app/api';\nimport {createTeam} from 'app/actionCreators/teams';\nimport {t} from 'app/locale';\nimport CreateTeamForm from 'app/components/createTeam/createTeamForm';\nimport SentryTypes from 'app/sentryTypes';\n\nclass CreateTeamModal extends React.Component {\n  static propTypes = {\n    closeModal: PropTypes.func,\n    onClose: PropTypes.func,\n    Body: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n    Header: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n    organization: SentryTypes.Organization.isRequired,\n    project: SentryTypes.Project,\n  };\n\n  handleSubmit = (data, onSuccess, onError) => {\n    createTeam(new Client(), data, {orgId: this.props.organization.slug})\n      .then(resp => {\n        this.handleSuccess(resp);\n        onSuccess(resp);\n      })\n      .catch(err => {\n        onError(err);\n      });\n  };\n\n  handleSuccess = data => {\n    if (this.props.onClose) {\n      this.props.onClose(data);\n    }\n\n    this.props.closeModal();\n  };\n\n  render() {\n    const {Body, Header, closeModal, ...props} = this.props;\n\n    return (\n      <React.Fragment>\n        <Header closeButton onHide={closeModal}>\n          {t('Create Team')}\n        </Header>\n        <Body>\n          <CreateTeamForm {...props} onSubmit={this.handleSubmit} />\n        </Body>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CreateTeamModal;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t} from 'app/locale';\nimport Form from 'app/views/settings/components/forms/form';\nimport SentryTypes from 'app/sentryTypes';\nimport TextField from 'app/views/settings/components/forms/textField';\nimport slugify from 'app/utils/slugify';\n\nexport default class CreateTeamForm extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    onSuccess: PropTypes.func,\n    onSubmit: PropTypes.func,\n    formProps: PropTypes.object,\n  };\n\n  handleCreateTeamSuccess = data => {\n    const {onSuccess} = this.props;\n\n    if (typeof onSuccess !== 'function') {\n      return;\n    }\n\n    onSuccess(data);\n  };\n\n  render() {\n    const {organization} = this.props;\n\n    return (\n      <React.Fragment>\n        <p>\n          {t(\n            \"Teams group members' access to a specific focus, e.g. a major product or application that may have sub-projects.\"\n          )}\n        </p>\n\n        <Form\n          submitLabel={t('Create Team')}\n          apiEndpoint={`/organizations/${organization.slug}/teams/`}\n          apiMethod=\"POST\"\n          onSubmit={this.props.onSubmit}\n          onSubmitSuccess={this.handleCreateTeamSuccess}\n          requireChanges\n          data-test-id=\"create-team-form\"\n          {...this.props.formProps}\n        >\n          <TextField\n            name=\"slug\"\n            label={t('Team Slug')}\n            placeholder={t('e.g. operations, web-frontend, desktop')}\n            help={t('May contain lowercase letters, numbers, dashes and underscores.')}\n            required\n            stacked\n            flexibleControlStateSize\n            inline={false}\n            transformInput={slugify}\n          />\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}