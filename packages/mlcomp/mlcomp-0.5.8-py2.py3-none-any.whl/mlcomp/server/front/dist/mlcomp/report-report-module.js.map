{"version":3,"sources":["webpack:///./src/app/report/report/report.component.html","webpack:///./src/app/report/internal/img/img.component.html","webpack:///./src/app/report/report-detail/report-detail.component.html","webpack:///./src/app/report/internal/img/img.component.css","webpack:///./src/app/report/internal/series/series.component.css","webpack:///./src/app/report/report/report.component.ts","webpack:///./src/app/report/report-detail/report-detail.component.ts","webpack:///./src/app/report/report-routing.module.ts","webpack:///./src/app/report/internal/layout/layout.service.ts","webpack:///./src/app/report/internal/series/series.component.ts","webpack:///./src/app/report/internal/img/img.component.ts","webpack:///./src/app/report/internal/img-classify/img-classify.service.ts","webpack:///./src/app/report/internal/img-classify/img-classify.component.ts","webpack:///./src/app/report/internal/layout/layout.component.ts","webpack:///./src/app/report/report.module.ts","webpack:///./src/app/report/internal/series/series.component.html","webpack:///./src/app/report/report/report.component.css","webpack:///./src/app/report/internal/layout/layout.component.html","webpack:///./src/app/report/report-detail/report-detail.component.css","webpack:///./src/app/report/internal/img-classify/img-classify.component.html","webpack:///./src/app/report/internal/layout/layout.component.css","webpack:///./src/app/report/internal/img-classify/img-classify.component.css"],"names":["module","exports","report_component_ReportComponent","ReportComponent","prototype","ngOnInit","tslib_es6","Object","core","selector","template","__webpack_require__","report_detail_component_ReportDetailComponent","ReportDetailComponent","service","location","router","route","resource_service","this","dag_panel_open","task_panel_open","_this","id","snapshot","paramMap","get","load","then","get_obj","subscribe","data","report","report_service","common","dynamicresource_service","routes","path","component","children","reports_component","report_routing_module_ReportRoutingModule","ReportRoutingModule","imports","forChild","layout_service_LayoutService","LayoutService","data_updated","providedIn","series_component_SeriesComponent","SeriesComponent","layout_service","Math","random","toString","display","subscribe_data_changed","setTimeout","document","getElementById","layout","title","name","height","width","margin","b","t","_i","_a","series","length","row","text","_b","_c","time","Date","parse","push","helpers","format_date_time","map","x","plotted","reduce","s","c","indices","Array","from","keys","y","_d","_e","slice","window","extendTraces","newPlot","_f","_g","event","key","item","source","was_change","i","d","serie","task_id","group","create_single_task","first","plot","task_name","data_1","clone","create_multi_key","by_key","data_2","res","k","create","tasks","unique","filter","part","indexOf","items","plots_1","multi","p","resitem","models","img_component_ImgComponent","ImgComponent","index","img_classify_service_ImgClassifyService","_super","ImgClassifyService","apply","arguments","collection_part","img_classify_component_ImgClassifyComponent","ImgClassifyComponent","call","displayed_columns","loaded","metric_diff_min","metric_diff_max","epochs","_ngOnInit","self","plot_confusion","confusion","class_names","reverse","z","type","colorscale","showscale","annotations","modebar","xaxis","ticks","side","yaxis","ticksuffix","autosize","j","textColor","result","xref","yref","font","family","size","color","showarrow","displayModeBar","on","pt","points","y_pred","change","emit","get_filter","epoch","task","epoch_changed","$event","value","paginator","layout_component_LayoutComponent","LayoutComponent","items_joined","items_joined_data","subscribe_report_changed","form_items_joined","child","subchildren_1","child_clone","td_width","total","cols","report_id","interval","setInterval","update","hard","JSON","stringify","ngOnDestroy","clearInterval","report_module_ReportModule","ReportModule","shared_module","declarations"],"mappings":"8EAAAA,EAAAC,QAAA,wDCAAD,EAAAC,QAAA,qICAAD,EAAAC,QAAA,4oCCAAD,EAAAC,QAAA,gOCAAD,EAAAC,QAAA,oSCOAC,EAAA,WAEE,SAAAC,KAKF,OAHEA,EAAAC,UAAAC,SAAA,aAJWF,EAAeG,EAAA,GAL3BC,OAAAC,EAAA,EAAAD,CAAU,CACTE,SAAU,cACVC,SAAAC,EAAA,0DAGWR,GAAb,mDCKAS,EAAA,WAMI,SAAAC,EAAsBC,EAAkCC,EACpCC,EAAyBC,EACvBC,GAFAC,KAAAL,UAAkCK,KAAAJ,WACpCI,KAAAH,SAAyBG,KAAAF,QACvBE,KAAAD,mBALtBC,KAAAC,gBAA0B,EAC1BD,KAAAE,iBAA2B,EAiB/B,OATIR,EAAAT,UAAAC,SAAA,eAAAiB,EAAAH,KACIA,KAAKI,GAAKJ,KAAKF,MAAMO,SAASC,SAASC,IAAI,MAC3CP,KAAKD,iBAAiBS,KAAK,UAAUC,KAAK,WACpCN,EAAKR,QAAQe,QAAgBP,EAAKC,IAAIO,UAAU,SAAAC,GAC9CT,EAAKU,OAASD,OAhBjBlB,EAAqBP,EAAA,GALjCC,OAAAC,EAAA,EAAAD,CAAU,CACPE,SAAU,oBACVC,SAAAC,EAAA,sDAS+BsB,EAAA,EAAmCC,EAAA,EACtClB,EAAA,EAAwBA,EAAA,EACZmB,EAAA,KAR/BtB,GAAb,GCNMuB,EAAiB,CACnB,CACIC,KAAM,GACNC,UAAWpC,EACXqC,SAAU,CACF,CAACF,KAAM,GAAIC,UAAWE,EAAA,GACtB,CAACH,KAAM,oBAAqBC,UAAW1B,MAavD6B,EAAA,oBAAAC,KACA,OADaA,EAAmBpC,EAAA,GAR/BC,OAAAC,EAAA,EAAAD,CAAS,CACNoC,QAAS,CACL3B,EAAA,EAAa4B,SAASR,IAE1BnC,QAAS,CACLe,EAAA,MAGK0B,GAAb,uCCpBAG,EAAA,WAHA,SAAAC,IAIG3B,KAAA4B,aAAkC,IAAIvC,EAAA,EAEzC,OAHasC,EAAaxC,EAAA,GAHzBC,OAAAC,EAAA,EAAAD,CAAW,CACVyC,WAAY,UAEDF,GAAb,GCKAG,EAAA,WAMI,SAAAC,EAAsBC,GAAAhC,KAAAgC,iBAFdhC,KAAAI,GAAK,UAAY6B,KAAKC,SAASC,WA6I3C,OAxIIJ,EAAA9C,UAAAC,SAAA,WACIc,KAAKoC,UACLpC,KAAKqC,0BAGDN,EAAA9C,UAAAmD,QAAR,eAAAjC,EAAAH,KACIsC,WAAW,WACP,GAAIC,SAASC,eAAerC,EAAKC,IAAK,CAOlC,IANA,IAAIqC,EAAS,CACTC,MAASvC,EAAKS,KAAK+B,KACnBC,OAAU,IACVC,MAAS,IACTC,OAAU,CAACC,EAAK,GAAIC,EAAK,KAEbC,EAAA,EAAAC,EAAA/C,EAAKS,KAAKuC,OAAVF,EAAAC,EAAAE,OAAAH,IAAkB,CAE9B,IAFC,IAAII,EAAGH,EAAAD,GACJK,EAAO,GACMC,EAAA,EAAAC,EAAAH,EAAII,KAAJF,EAAAC,EAAAJ,OAAAG,IAAU,CAAtB,IAAIE,EAAID,EAAAD,GACLP,EAAI,IAAIU,KAAKA,KAAKC,MAAMF,IAC5BH,EAAKM,KAAKC,EAAA,EAAQC,iBAAiBd,IAGvCK,EAAIC,KAAOA,EAEf,GAAInD,EAAKS,KAAKuC,OAAOY,IAAI,SAAAC,GAAG,OAAAA,EAAEC,UAASC,OAAO,SAACC,EAAGC,GAAM,OAAAD,EAAIC,GAAG,GAAG,EAAG,CAGjE,IAFA,IAAIC,EAAUC,MAAMC,KAAKD,MAAMnE,EAAKS,KAAKuC,OAAOC,QAAQoB,QACpDC,EAAI,CAACA,EAAK,GAAInB,KAAQ,IACZoB,EAAA,EAAAC,EAAAxE,EAAKS,KAAKuC,OAAVuB,EAAAC,EAAAvB,OAAAsB,IAAkB,CAA3B,IAAIP,EAACQ,EAAAD,GACND,EAAK,EAAEb,KAAKO,EAAEM,EAAEG,MAAMT,EAAEF,UACpBX,EAAOa,EAAEb,KAAKsB,MAAMT,EAAEF,SAC1BQ,EAAQ,KAAEb,KAAKN,GAEfa,EAAEF,SAAWX,EAAKF,OAEtByB,OAAe,OAAEC,aAAa3E,EAAKC,GAAIqE,EAAGJ,OACvC,CACHQ,OAAe,OAAEE,QAAQ5E,EAAKC,GAAID,EAAKS,KAAKuC,OAAQV,GACpD,IAAa,IAAAuC,EAAA,EAAAC,EAAA9E,EAAKS,KAAKuC,OAAV6B,EAAAC,EAAA7B,OAAA4B,IAAiB,EAAtBb,EAACc,EAAAD,IACHf,QAAUE,EAAEH,EAAEZ,WAK7B,MAGCrB,EAAA9C,UAAAoD,uBAAR,eAAAlC,EAAAH,KACIA,KAAKgC,eAAeJ,aAAajB,UAAU,SAAAuE,GACvC,GAAIA,EAAMC,KAAOhF,EAAKiF,KAAKC,OAA3B,CAKA,IADA,IAAIC,GAAa,EACRC,EAAI,EAAGA,EAAIpF,EAAKS,KAAKuC,OAAOC,OAAQmC,IAEzC,IADA,IAAIC,EAAIrF,EAAKS,KAAKuC,OAAOoC,GACPtC,EAAA,EAAAC,EAAAgC,EAAMtE,KAANqC,EAAAC,EAAAE,OAAAH,IAAY,CAAzB,IAAIwC,EAAKvC,EAAAD,GACV,GAAIwC,EAAMC,SAAWF,EAAEE,SAAWD,EAAME,OAASH,EAAEG,OAASF,EAAMJ,QAAUG,EAAEH,QACtEI,EAAMzB,EAAEZ,OAASjD,EAAKS,KAAKuC,OAAOoC,GAAGvB,EAAEZ,OAAQ,CAC/CjD,EAAKS,KAAKuC,OAAOoC,GAAGvB,EAAIyB,EAAMzB,EAC9B7D,EAAKS,KAAKuC,OAAOoC,GAAGd,EAAIgB,EAAMhB,EAC9BtE,EAAKS,KAAKuC,OAAOoC,GAAG9B,KAAOgC,EAAMhC,KAEjC6B,GAAa,EACb,OAOZA,GACAnF,EAAKiC,cAOFL,EAAA6D,mBAAf,SAAkChF,GAG9B,IAFA,IAAIiF,EAAQjF,EAAK,GACbkF,EAAmB,CAACnD,KAAQkD,EAAMR,OAAS,MAAQQ,EAAME,UAAW5C,OAAU,IACpEF,EAAA,EAAA+C,EAAApF,EAAAqC,EAAA+C,EAAA5C,OAAAH,IAAM,CAAf,IAAIuC,EAACQ,EAAA/C,IACNuC,EAAI3B,EAAA,EAAQoC,MAAMT,IAChBvB,QAAU,EACZuB,EAAE7C,KAAO6C,EAAEG,MACXG,EAAK3C,OAAOS,KAAK4B,GAErB,MAAO,CAACM,IAGG/D,EAAAmE,iBAAf,SAAgCtF,EAAMuE,GAElC,IADA,IAAIgB,EAAS,GACClD,EAAA,EAAAmD,EAAAxF,EAAAqC,EAAAmD,EAAAhD,OAAAH,IAAM,CAAf,IAAIuC,EAACY,EAAAnD,IACNuC,EAAI3B,EAAA,EAAQoC,MAAMT,IACVL,KAAQgB,IACZA,EAAOX,EAAEL,IAAQ,CAACxC,KAAQ6C,EAAEH,OAAS,OAAgB,SAAPF,EAAiBK,EAAEL,GAAOK,EAAa,WAAIrC,OAAU,KAEvGqC,EAAE7C,KAAc,WAAPwC,EAAmBK,EAAEG,MAAQH,EAAEO,UACxCP,EAAEvB,QAAU,EACZkC,EAAOX,EAAEL,IAAMhC,OAAOS,KAAK4B,GAG/B,IAAIa,EAAoB,GACxB,IAAK,IAAIC,KAAKH,EACVE,EAAIzC,KAAKuC,EAAOG,IAEpB,OAAOD,GAGGtE,EAAAwE,OAAd,SAAqBnB,EAAkBxE,GACnC,IAAIA,GAAmB,GAAbA,EAAKwC,OACX,MAAO,GAEX,IAAIoD,EAAQ3C,EAAA,EAAQ4C,OAAO7F,EAAM,WACjC,GAAoB,GAAhB4F,EAAMpD,OACN,MAAO,GAGXxC,EAAOA,EAAK8F,OAAO,SAAAlB,GAAK,OAACJ,EAAKO,QAAwC,GAA/BP,EAAKuB,KAAKC,QAAQpB,EAAEG,SAW3D,IATA,IAQIkB,EAAQ,GACE5D,EAAA,EAAA6D,EARM,GAAhBN,EAAMpD,OACEpD,KAAK4F,mBAAmBhF,GACzBwE,EAAK2B,MACJ/G,KAAKkG,iBAAiBtF,EAAM,WAE5BZ,KAAKkG,iBAAiBtF,EAAM,SAG1BqC,EAAA6D,EAAA1D,OAAAH,IAAO,CAAhB,IAAI+D,EAACF,EAAA7D,GACFgE,EAAUpD,EAAA,EAAQoC,MAAMb,GAC5ByB,EAAMjD,KAAK,CAACqD,EAASD,IAGzB,OAAOH,GA5IF1H,EAAA,GAARC,OAAAC,EAAA,EAAAD,qBAAc8H,EAAA,+BACN/H,EAAA,GAARC,OAAAC,EAAA,EAAAD,qBAAc8H,EAAA,+BAHNnF,EAAe5C,EAAA,GAL3BC,OAAAC,EAAA,EAAAD,CAAU,CACPE,SAAU,aACVC,SAAAC,EAAA,sDASsCkC,KAN7BK,GAAb,GCDAoF,EAAA,WAKI,SAAAC,EAAsBpF,GAAAhC,KAAAgC,iBAmB1B,OAhBIoF,EAAAnI,UAAAC,SAAA,WACIc,KAAKqC,0BAID+E,EAAAnI,UAAAoD,uBAAR,eAAAlC,EAAAH,KACIA,KAAKgC,eAAeJ,aAAajB,UAAU,SAAAuE,GACnCA,EAAMC,KAAOhF,EAAKiF,KAAKC,SAI3BlF,EAAKS,KAAOsE,EAAMtE,KAAKT,EAAKiF,KAAKiC,WAjBhClI,EAAA,GAARC,OAAAC,EAAA,EAAAD,qBAAc8H,EAAA,+BACN/H,EAAA,GAARC,OAAAC,EAAA,EAAAD,yDAHQgI,EAAYjI,EAAA,GALxBC,OAAAC,EAAA,EAAAD,CAAU,CACPE,SAAU,UACVC,SAAAC,EAAA,sDAQsCkC,KAL7B0F,GAAb,eCHAE,EAAA,SAAAC,GAHA,SAAAC,IAAA,IAAArH,EAAA,OAAAoH,KAAAE,MAAAzH,KAAA0H,YAAA1H,YAIaG,EAAAwH,gBAA0B,iBAGvC,OAJwCxI,EAAA,EAAAqI,EAAAD,GAA3BC,EAAkBrI,EAAA,GAH9BC,OAAAC,EAAA,EAAAD,CAAW,CACVyC,WAAY,UAED2F,GAAb,WAAwC,GCQxCI,EAAA,SAAAL,GAWI,SAAAM,EAAsBlI,EAAuCC,EACvCoC,EACAjC,GAFtB,IAAAI,EAGIoH,EAAAO,KAAA9H,KAAML,EAASC,GAAU,IAAMI,YAHbG,EAAAR,UAAuCQ,EAAAP,WACvCO,EAAA6B,iBACA7B,EAAAJ,mBAZZI,EAAA4H,kBAA8B,CAAC,OAI/B5H,EAAA6H,OAAS,IAAI3I,EAAA,EAGvBc,EAAA8H,gBAA0B,EAC1B9H,EAAA+H,gBAA0B,IA4I9B,OArJ0C/I,EAAA,EAAA0I,EAAAN,GAiB9BM,EAAA5I,UAAAoD,uBAAR,eAAAlC,EAAAH,KACIA,KAAKgC,eAAeJ,aAAajB,UAAU,SAAAuE,GACvC,GAAIA,EAAMC,KAAOhF,EAAKiF,KAAKC,OAK3B,IADA,IAAIzE,EAAOsE,EAAMtE,KAAKT,EAAKiF,KAAKiC,OACxB9B,EAAEpF,EAAKS,KAAKuH,OAAO/E,OAAOmC,EAAE3E,EAAKuH,OAAO/E,OAAOmC,IACnDpF,EAAKS,KAAKuH,OAAOvE,KAAKhD,EAAKuH,OAAO5C,OAKpCsC,EAAA5I,UAAAmJ,UAAV,WACI,IAAIC,EAAOrI,KACXA,KAAKqC,yBACLrC,KAAK4B,aAAajB,UAAU,SAAA0F,GACxBgC,EAAKtI,iBAAiBS,KAAK,UAAUC,KAAK,WACtC4H,EAAKC,eAAejC,EAAIkC,UAAWlC,EAAIM,KAAMN,EAAImC,kBAK7DX,EAAA5I,UAAAqJ,eAAA,SAAeC,EAAW5B,EAAM6B,GAC5B,GAAKD,GAAYA,EAAU3H,KAA3B,CAGA,IAAIyH,EAAOrI,KAKPgE,EAAIwE,EAAY5D,QAChBH,EAAI+D,EAAY5D,QACpBH,EAAEgE,UACFF,EAAU3H,KAAK6H,UA8Bf,IA5BA,IAAI7H,EAAO,CAAC,CACRoD,EAAGA,EACHS,EAAGA,EACHiE,EAAGH,EAAU3H,KACb+H,KAAM,UACNC,WAdkB,CAClB,CAAC,EAAG,WACJ,CAAC,EAAG,YAaJC,WAAW,IAGXpG,EAAS,CACTC,MAAO,UACPoG,YAAa,GACbjG,MAAO,IACPD,OAAQ,IACRmG,SAAS,EACTC,MAAO,CACHC,MAAO,GACPC,KAAM,OAEVC,MAAO,CACHF,MAAO,GACPG,WAAY,IACZvG,MAAO,IACPD,OAAQ,IACRyG,UAAU,IAIT9D,EAAI,EAAGA,EAAId,EAAErB,OAAQmC,IAC1B,IAAK,IAAI+D,EAAI,EAAGA,EAAItF,EAAEZ,OAAQkG,IAAK,CAE/B,GAAoB,GADDf,EAAU3H,KAAK2E,GAAG+D,GAEjC,IAAIC,EAAY,aAEZA,EAAY,QAEpB,IAAIC,EAAS,CACTC,KAAM,KACNC,KAAM,KACN1F,EAAGA,EAAEsF,GACL7E,EAAGA,EAAEc,GACLjC,KAAMiF,EAAU3H,KAAK2E,GAAG+D,GACxBK,KAAM,CACFC,OAAQ,QACRC,KAAM,GACNC,MAAOP,GAEXQ,WAAW,GAEftH,EAAOqG,YAAYlF,KAAK4F,GAIhC,IAAIpJ,EAAK,gBAAkBuG,EAC3B9B,OAAe,OAAEE,QAAQ3E,EAAIQ,EAAM6B,EAAQ,CAACuH,gBAAgB,IACjDzH,SAASC,eAAepC,GAE9B6J,GAAG,eAAgB,SAAUrJ,GAC9B,IAAIsJ,EAAKtJ,EAAKuJ,OAAO,GACjB1F,EAAI+D,EAAY5B,QAAQsD,EAAGzF,GAC3B2F,EAAS5B,EAAY5B,QAAQsD,EAAGlG,GAChCS,GAAK4D,EAAK5D,GAAK2F,GAAU/B,EAAK+B,QAC9B/B,EAAK5D,EAAI,KACT4D,EAAK+B,OAAS,OAEd/B,EAAK5D,EAAIA,EACT4D,EAAK+B,OAASA,GAGlB/B,EAAKgC,OAAOC,WAKpBzC,EAAA5I,UAAAsL,WAAA,WACI,IAAKvK,KAAKY,MAAyB,MAAnBZ,KAAKY,KAAK4J,MACtB,OAAO,KAEX,IAAInE,EAAM,GAUV,OATAA,EAAe,UAAIkB,EAAAtI,UAAMsL,WAAUzC,KAAA9H,MACnCqG,EAAU,KAAIrG,KAAKY,KAAK6J,KACxBpE,EAAU,KAAIrG,KAAKY,KAAK+F,KACxBN,EAAW,MAAIrG,KAAKY,KAAK4J,MACzBnE,EAAW,MAAIrG,KAAKY,KAAK+E,MACzBU,EAAO,EAAIrG,KAAKyE,EAChB4B,EAAY,OAAIrG,KAAKoK,OACrB/D,EAAqB,gBAAIrG,KAAKiI,gBAC9B5B,EAAqB,gBAAIrG,KAAKkI,gBACvB7B,GAGXwB,EAAA5I,UAAAyL,cAAA,SAAcC,GACV3K,KAAKY,KAAK4J,MAAQG,EAAOC,MACzB5K,KAAKqK,OAAOC,QAjJPnL,EAAA,GAARC,OAAAC,EAAA,EAAAD,qBAAc8H,EAAA,+BACN/H,EAAA,GAARC,OAAAC,EAAA,EAAAD,qBAAc8H,EAAA,+BAEL/H,EAAA,GAATC,OAAAC,EAAA,EAAAD,2DALQyI,EAAoB1I,EAAA,GALhCC,OAAAC,EAAA,EAAAD,CAAU,CACPE,SAAU,mBACVC,SAAAC,EAAA,sDAc+B8H,EAAwCvG,EAAA,EACjCW,EACEV,EAAA,KAb/B6G,GAAb,CAA0CgD,EAAA,GCF1CC,EAAA,WASI,SAAAC,EAAsBpL,EACAqC,GADAhC,KAAAL,UACAK,KAAAgC,iBAJtBhC,KAAAgL,aAA6B,GAC7BhL,KAAAiL,kBAA2B,GAsG/B,OAhGIF,EAAA9L,UAAAC,SAAA,WACIc,KAAKkL,2BACLlL,KAAKmL,qBAGTJ,EAAA9L,UAAAkM,kBAAA,WAEI,GADAnL,KAAKgL,aAAe,GACfhL,KAAKoF,KAAKyB,MAGf,IAAkB,IAAA5D,EAAA,EAAAC,EAAAlD,KAAKoF,KAAKyB,MAAV5D,EAAAC,EAAAE,OAAAH,IAAiB,CAA9B,IAAImI,EAAKlI,EAAAD,GACV,GAAkB,UAAdmI,EAAMzC,KAEN,IADA,IACcpF,EAAA,EAAA8H,EADIvJ,EAAgByE,OAAO6E,EAAOpL,KAAKY,KAAKwK,EAAM/F,SAClD9B,EAAA8H,EAAAjI,OAAAG,IAAa,CAAtB,IAAIY,EAACkH,EAAA9H,GACNvD,KAAKgL,aAAapH,KAAKO,EAAE,IACzBnE,KAAKiL,kBAAkBrH,KAAKO,EAAE,SAE/B,IAAoD,GAAhD,CAAC,eAAgB,OAAOyC,QAAQwE,EAAMzC,MAAa,CAC1D,KAAKyC,EAAM/F,UAAUrF,KAAKY,MACtB,SAGJ,IADA,IAAI2E,EAAI,EACM/B,EAAA,EAAAkB,EAAA1E,KAAKY,KAAKwK,EAAM/F,QAAhB7B,EAAAkB,EAAAtB,OAAAI,IAAyB,CAAlC,IAAIgC,EAACd,EAAAlB,GACF8H,EAAczH,EAAA,EAAQoC,MAAMmF,GAChCE,EAAYjE,MAAQ9B,EACpBvF,KAAKgL,aAAapH,KAAK0H,GACvBtL,KAAKiL,kBAAkBrH,KAAK4B,GAC5BD,UAGJvF,KAAKgL,aAAapH,KAAKwH,GACvBpL,KAAKiL,kBAAkBrH,KAAK5D,KAAKY,QAK7CmK,EAAA9L,UAAAsM,SAAA,SAASH,GAEL,IADA,IAAII,EAAQ,EACEvI,EAAA,EAAAC,EAAAlD,KAAKgL,aAAL/H,EAAAC,EAAAE,OAAAH,IAAmB,CAA5B,IAAImB,EAAClB,EAAAD,GACNuI,GAASpH,EAAEqH,KAAOrH,EAAEqH,KAAO,EAG/B,OAAQ,KAAOL,EAAMK,KAAOL,EAAMK,KAAO,GAAKD,GAAOrJ,WAAa,KAG9D4I,EAAA9L,UAAAiM,yBAAR,eAAA/K,EAAAH,KAC0B,MAAlBA,KAAK0L,YACL1L,KAAK2L,SAAWC,YAAY,WAAM,OAAAzL,EAAK0L,UAAU,KAEjD7L,KAAKL,QAAQiC,aAAajB,UAAU,SAAA0F,GAChClG,EAAK0L,QAAO,OAKhBd,EAAA9L,UAAA4M,OAAR,SAAeC,GAAf,IAAA3L,EAAAH,UAAe,IAAA8L,OAAA,GACX9L,KAAKL,QAAQe,QAAgBV,KAAK0L,WAAW/K,UAAU,SAAAC,GACnD,GAAIT,EAAKiF,OAAS0G,GACd,GAAIC,KAAKC,UAAU7L,EAAKiF,OAAS2G,KAAKC,UAAUpL,EAAK6B,QACjDtC,EAAKS,KAAOA,EAAKA,KACjBT,EAAKiF,KAAOxE,EAAK6B,OACjBtC,EAAKgL,yBAEL,IAAK,IAAIhG,KAAOvE,EAAKA,KAEjB,GAAImL,KAAKC,UAAU7L,EAAKS,KAAKuE,KAAS4G,KAAKC,UAAUpL,EAAKA,KAAKuE,IAAO,CAClE,GAAIvE,EAAKA,KAAKuE,GAAK/B,QAAUjD,EAAKS,KAAKuE,GAAK/B,OAAQ,CAChDjD,EAAKS,KAAOA,EAAKA,KACjBT,EAAKiF,KAAOxE,EAAK6B,OACjBtC,EAAKgL,oBACL,MAGAhL,EAAK6B,eAAeJ,aAAa0I,KAAK,CAACnF,IAAOA,EAAKvE,KAAQA,EAAKA,KAAKuE,KAErEhF,EAAKS,KAAKuE,GAAOvE,EAAKA,KAAKuE,SAO3ChF,EAAKS,KAAOA,EAAKA,KACjBT,EAAKiF,KAAOxE,EAAK6B,OACjBtC,EAAKgL,uBAMjBJ,EAAA9L,UAAAgN,YAAA,WACQjM,KAAK2L,UACLO,cAAclM,KAAK2L,WAxGlBxM,EAAA,GAARC,OAAAC,EAAA,EAAAD,qBAAc8H,EAAA,+BACN/H,EAAA,GAARC,OAAAC,EAAA,EAAAD,yDACQD,EAAA,GAARC,OAAAC,EAAA,EAAAD,8DACQD,EAAA,GAARC,OAAAC,EAAA,EAAAD,uDAJQ2L,EAAe5L,EAAA,GAL3BC,OAAAC,EAAA,EAAAD,CAAU,CACPE,SAAU,aACVC,SAAAC,EAAA,sDAY+BsB,EAAA,EACOY,KAV7BqJ,GAAb,8CCYA,IAAAoB,EAAA,oBAAAC,KACA,OADaA,EAAYjN,EAAA,GAdxBC,OAAAC,EAAA,EAAAD,CAAS,CACNoC,QAAS,CACLF,EACA+K,EAAA,GAEJC,aAAc,CACVxK,EACAqF,EACAS,EACA7I,EACA+L,EACArL,MAGK2M,GAAb,uBCxBAvN,EAAAC,QAAA,iDCAAD,EAAAC,QAAA,0NCAAD,EAAAC,QAAA,q3DCAAD,EAAAC,QAAA,0OCAAD,EAAAC,QAAA,qpFCAAD,EAAAC,QAAA,2eCAAD,EAAAC,QAAA","file":"report-report-module.js","sourcesContent":["module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"<div style=\\\"text-align:center\\\">{{item.name}}</div>\\n<img [attr.src]=\\\"'data:image/JPEG;base64,'+data.data\\\">\"","module.exports = \"<mat-accordion>\\n    <mat-expansion-panel (opened)=\\\"dag_panel_open = true\\\"\\n                         (closed)=\\\"dag_panel_open = false\\\">\\n        <mat-expansion-panel-header>\\n            <mat-panel-title>\\n                Dags\\n            </mat-panel-title>\\n            <mat-panel-description>\\n                Dags to add/remove\\n            </mat-panel-description>\\n        </mat-expansion-panel-header>\\n\\n        <app-dags *ngIf=\\\"dag_panel_open\\\" [report]=\\\"id\\\"></app-dags>\\n    </mat-expansion-panel>\\n\\n    <mat-expansion-panel (opened)=\\\"task_panel_open = true\\\"\\n                         (closed)=\\\"task_panel_open = false\\\">\\n        <mat-expansion-panel-header>\\n            <mat-panel-title>\\n                Tasks\\n            </mat-panel-title>\\n            <mat-panel-description>\\n                Tasks to add/remove\\n            </mat-panel-description>\\n        </mat-expansion-panel-header>\\n\\n        <app-tasks *ngIf=\\\"task_panel_open\\\" [report]=\\\"id\\\"></app-tasks>\\n    </mat-expansion-panel>\\n\\n</mat-accordion>\\n\\n<app-layout [item]=\\\"report.layout\\\" [data]=\\\"report.data\\\" [report_id]=\\\"id\\\" *ngIf=\\\"report\\\"></app-layout>\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydC9pbnRlcm5hbC9pbWcvaW1nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydC9pbnRlcm5hbC9zZXJpZXMvc2VyaWVzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ReportService} from \"../../report.service\";\nimport {Location} from \"@angular/common\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Report} from \"../../models\";\nimport {DynamicresourceService} from \"../../dynamicresource.service\";\n\n@Component({\n    selector: 'app-report-detail',\n    templateUrl: './report-detail.component.html',\n    styleUrls: ['./report-detail.component.css']\n})\nexport class ReportDetailComponent implements OnInit {\n    id: string;\n    report: Report;\n    dag_panel_open: boolean = false;\n    task_panel_open: boolean = false;\n\n    constructor(protected service: ReportService, protected location: Location,\n                private router: Router, private  route: ActivatedRoute,\n                protected resource_service: DynamicresourceService\n    ) {\n    }\n\n    ngOnInit() {\n        this.id = this.route.snapshot.paramMap.get('id');\n        this.resource_service.load('plotly').then(() => {\n              this.service.get_obj<Report>(this.id).subscribe(data => {\n                this.report = data;\n            });\n        });\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ReportComponent} from \"./report/report.component\";\nimport {ReportsComponent} from \"./reports/reports.component\";\nimport {ReportDetailComponent} from \"./report-detail/report-detail.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ReportComponent,\n        children: [\n                {path: '', component: ReportsComponent},\n                {path: 'report-detail/:id', component: ReportDetailComponent},\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class ReportRoutingModule {\n}\n","import {EventEmitter, Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutService{\n   data_updated: EventEmitter<any> = new EventEmitter();\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ReportItem, SeriesItem, Series} from \"../../../models\";\nimport {Helpers} from \"../../../helpers\";\nimport {LayoutService} from \"../layout/layout.service\";\n\n@Component({\n    selector: 'app-series',\n    templateUrl: './series.component.html',\n    styleUrls: ['./series.component.css']\n})\nexport class SeriesComponent implements OnInit {\n\n    @Input() item: ReportItem;\n    @Input() data: SeriesItem;\n    private id = 'series_' + Math.random().toString();\n\n    constructor(protected layout_service: LayoutService) {\n    }\n\n    ngOnInit() {\n        this.display();\n        this.subscribe_data_changed();\n    }\n\n    private display() {\n        setTimeout(() => {\n            if (document.getElementById(this.id)) {\n                let layout = {\n                    'title': this.data.name,\n                    'height': 300,\n                    'width': 600,\n                    'margin': {'b': 40, 't': 40}\n                };\n                for (let row of this.data.series) {\n                    let text = [];\n                    for (let time of row.time) {\n                        let t = new Date(Date.parse(time));\n                        text.push(Helpers.format_date_time(t));\n                    }\n\n                    row.text = text;\n                }\n                if (this.data.series.map(x=>x.plotted).reduce((s, c) => s + c, 0)>0) {\n                    let indices = Array.from(Array(this.data.series.length).keys());\n                    let y = {'y': [], 'text': []};\n                    for (let s of this.data.series) {\n                        y['y'].push(s.y.slice(s.plotted));\n                        let text = s.text.slice(s.plotted);\n                        y['text'].push(text);\n\n                        s.plotted += text.length;\n                    }\n                    window['Plotly'].extendTraces(this.id, y, indices);\n                } else {\n                    window['Plotly'].newPlot(this.id, this.data.series, layout);\n                    for(let s of this.data.series){\n                        s.plotted = s.x.length;\n                    }\n                }\n\n            }\n        }, 100);\n    }\n\n    private subscribe_data_changed() {\n        this.layout_service.data_updated.subscribe(event => {\n            if (event.key != this.item.source) {\n                return;\n            }\n\n            let was_change = false;\n            for (let i = 0; i < this.data.series.length; i++) {\n                let d = this.data.series[i];\n                for (let serie of event.data) {\n                    if (serie.task_id == d.task_id && serie.group == d.group && serie.source == d.source) {\n                        if (serie.x.length > this.data.series[i].x.length) {\n                            this.data.series[i].x = serie.x;\n                            this.data.series[i].y = serie.y;\n                            this.data.series[i].time = serie.time;\n\n                            was_change = true;\n                            break\n                        }\n\n                    }\n                }\n            }\n\n            if (was_change) {\n                this.display();\n            }\n\n        });\n    }\n\n\n    private static create_single_task(data) {\n        let first = data[0];\n        let plot: SeriesItem = {'name': first.source + ' - ' + first.task_name, 'series': []};\n        for (let d of data) {\n            d = Helpers.clone(d);\n            d.plotted = 0;\n            d.name = d.group;\n            plot.series.push(d);\n        }\n        return [plot];\n    }\n\n    private static create_multi_key(data, key) {\n        let by_key = {};\n        for (let d of data) {\n            d = Helpers.clone(d);\n            if (!(d[key] in by_key)) {\n                by_key[d[key]] = {'name': d.source + ' - ' + (key == 'group' ? d[key] : d['task_name']), 'series': []};\n            }\n            d.name = key == 'task_id' ? d.group : d.task_name;\n            d.plotted = 0;\n            by_key[d[key]].series.push(d);\n        }\n\n        let res: SeriesItem[] = [];\n        for (let k in by_key) {\n            res.push(by_key[k]);\n        }\n        return res;\n    }\n\n    public static create(item: ReportItem, data: Series[]) {\n        if(!data||data.length==0){\n            return []\n        }\n        let tasks = Helpers.unique(data, 'task_id');\n        if (tasks.length == 0) {\n            return [];\n        }\n\n        data = data.filter(d => !item.group || item.part.indexOf(d.group) != -1);\n\n        let plots: SeriesItem[] = [];\n        if (tasks.length == 1) {\n            plots = this.create_single_task(data);\n        } else if (item.multi) {\n            plots = this.create_multi_key(data, 'task_id');\n        } else {\n            plots = this.create_multi_key(data, 'group');\n        }\n        let items = [];\n        for (let p of plots) {\n            let resitem = Helpers.clone(item);\n            items.push([resitem, p]);\n        }\n\n        return items;\n    }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ReportItem} from \"../../../models\";\nimport {LayoutService} from \"../layout/layout.service\";\n\n@Component({\n    selector: 'app-img',\n    templateUrl: './img.component.html',\n    styleUrls: ['./img.component.css']\n})\nexport class ImgComponent implements OnInit {\n\n    @Input() item: ReportItem;\n    @Input() data;\n\n    constructor(protected layout_service: LayoutService) {\n    }\n\n    ngOnInit() {\n        this.subscribe_data_changed();\n    }\n\n\n    private subscribe_data_changed() {\n        this.layout_service.data_updated.subscribe(event => {\n            if (event.key != this.item.source) {\n                return;\n            }\n\n            this.data = event.data[this.item.index];\n\n        });\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {BaseService} from \"../../../base.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImgClassifyService extends BaseService{\n   protected collection_part: string = 'img_classify';\n   protected single_part: string;\n\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {Paginator} from \"../../../paginator\";\nimport {Img, ImgClassify, ReportItem} from \"../../../models\";\nimport {Location} from \"@angular/common\";\nimport {ImgClassifyService} from \"./img-classify.service\";\nimport {MatButtonToggleChange} from \"@angular/material\";\nimport {DynamicresourceService} from \"../../../dynamicresource.service\";\nimport {LayoutService} from \"../layout/layout.service\";\n\n@Component({\n    selector: 'app-img-classify',\n    templateUrl: './img-classify.component.html',\n    styleUrls: ['./img-classify.component.css']\n})\nexport class ImgClassifyComponent extends Paginator<Img> {\n    protected displayed_columns: string[] = ['img'];\n    @Input() item: ReportItem;\n    @Input() data: ImgClassify;\n\n    @Output() loaded = new EventEmitter<number>();\n    y: number;\n    y_pred: number;\n    metric_diff_min: number = 0;\n    metric_diff_max: number = 1;\n\n    constructor(protected service: ImgClassifyService, protected location: Location,\n                protected layout_service: LayoutService,\n                protected resource_service: DynamicresourceService) {\n        super(service, location, false);\n    }\n\n    private subscribe_data_changed() {\n        this.layout_service.data_updated.subscribe(event => {\n            if (event.key != this.item.source) {\n                return;\n            }\n\n            let data = event.data[this.item.index];\n            for(let i=this.data.epochs.length;i<data.epochs.length;i++){\n                this.data.epochs.push(data.epochs[i]);\n            }\n        });\n    }\n\n    protected _ngOnInit() {\n        let self = this;\n        this.subscribe_data_changed();\n        this.data_updated.subscribe(res => {\n            self.resource_service.load('plotly').then(() => {\n                self.plot_confusion(res.confusion, res.part, res.class_names);\n            });\n        });\n    }\n\n    plot_confusion(confusion, part, class_names) {\n        if (!confusion||!confusion.data) {\n            return;\n        }\n        let self = this;\n        let colorscaleValue = [\n            [0, '#3D9970'],\n            [1, '#001f3f']\n        ];\n        let x = class_names.slice();\n        let y = class_names.slice();\n        y.reverse();\n        confusion.data.reverse();\n\n        let data = [{\n            x: x,\n            y: y,\n            z: confusion.data,\n            type: 'heatmap',\n            colorscale: colorscaleValue,\n            showscale: false\n        }];\n\n        let layout = {\n            title: 'Heatmap',\n            annotations: [],\n            width: 300,\n            height: 300,\n            modebar: false,\n            xaxis: {\n                ticks: '',\n                side: 'top'\n            },\n            yaxis: {\n                ticks: '',\n                ticksuffix: ' ',\n                width: 700,\n                height: 700,\n                autosize: false\n            }\n        };\n\n        for (var i = 0; i < y.length; i++) {\n            for (var j = 0; j < x.length; j++) {\n                var currentValue = confusion.data[i][j];\n                if (currentValue != 0.0) {\n                    var textColor = 'white';\n                } else {\n                    var textColor = 'black';\n                }\n                var result = {\n                    xref: 'x1',\n                    yref: 'y1',\n                    x: x[j],\n                    y: y[i],\n                    text: confusion.data[i][j],\n                    font: {\n                        family: 'Arial',\n                        size: 12,\n                        color: textColor\n                    },\n                    showarrow: false,\n                };\n                layout.annotations.push(result);\n            }\n        }\n\n        let id = 'img_classify_' + part;\n        window['Plotly'].newPlot(id, data, layout, {displayModeBar: false});\n        let plot = document.getElementById(id);\n        // @ts-ignore\n        plot.on('plotly_click', function (data) {\n            let pt = data.points[0];\n            let y = class_names.indexOf(pt.y);\n            let y_pred = class_names.indexOf(pt.x);\n            if (y == self.y && y_pred == self.y_pred) {\n                self.y = null;\n                self.y_pred = null;\n            } else {\n                self.y = y;\n                self.y_pred = y_pred;\n            }\n\n            self.change.emit();\n        });\n    }\n\n\n    get_filter(): any {\n        if (!this.data||this.data.epoch == null) {\n            return null;\n        }\n        let res = {};\n        res['paginator'] = super.get_filter();\n        res['task'] = this.data.task;\n        res['part'] = this.data.part;\n        res['epoch'] = this.data.epoch;\n        res['group'] = this.data.group;\n        res['y'] = this.y;\n        res['y_pred'] = this.y_pred;\n        res['metric_diff_min'] = this.metric_diff_min;\n        res['metric_diff_max'] = this.metric_diff_max;\n        return res;\n    }\n\n    epoch_changed($event: MatButtonToggleChange) {\n        this.data.epoch = $event.value;\n        this.change.emit();\n    }\n}\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {Report, ReportItem} from \"../../../models\";\nimport {ReportService} from \"../../../report.service\";\nimport {LayoutService} from \"./layout.service\";\nimport {SeriesComponent} from \"../series/series.component\";\nimport {Helpers} from \"../../../helpers\";\n\n@Component({\n    selector: 'app-layout',\n    templateUrl: './layout.component.html',\n    styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit, OnDestroy {\n    @Input() item: ReportItem;\n    @Input() data;\n    @Input() report_id: number;\n    @Input() id: string;\n    private interval: number;\n    items_joined: ReportItem[] = [];\n    items_joined_data: any[] = [];\n\n    constructor(protected service: ReportService,\n                protected layout_service: LayoutService) {\n    }\n\n    ngOnInit() {\n        this.subscribe_report_changed();\n        this.form_items_joined();\n    }\n\n    form_items_joined() {\n        this.items_joined = [];\n        if (!this.item.items) {\n            return;\n        }\n        for (let child of this.item.items) {\n            if (child.type == 'series') {\n                let subchildren = SeriesComponent.create(child, this.data[child.source]);\n                for (let s of subchildren) {\n                    this.items_joined.push(s[0]);\n                    this.items_joined_data.push(s[1]);\n                }\n            } else if (['img_classify', 'img'].indexOf(child.type) != -1) {\n                if(!(child.source in this.data)){\n                    continue\n                }\n                let i = 0;\n                for (let d of this.data[child.source]) {\n                    let child_clone = Helpers.clone(child);\n                    child_clone.index = i;\n                    this.items_joined.push(child_clone);\n                    this.items_joined_data.push(d);\n                    i++;\n                }\n            } else {\n                this.items_joined.push(child);\n                this.items_joined_data.push(this.data);\n            }\n        }\n    }\n\n    td_width(child: ReportItem) {\n        let total = 0;\n        for (let c of this.items_joined) {\n            total += c.cols ? c.cols : 1;\n        }\n\n        return (100 * (child.cols ? child.cols : 1) / total).toString() + '%';\n    }\n\n    private subscribe_report_changed() {\n        if (this.report_id != null) {\n            this.interval = setInterval(() => this.update(), 5000);\n\n            this.service.data_updated.subscribe(res => {\n                this.update(true);\n            });\n        }\n    }\n\n    private update(hard = false) {\n        this.service.get_obj<Report>(this.report_id).subscribe(data => {\n            if (this.item && !hard) {\n                if (JSON.stringify(this.item) != JSON.stringify(data.layout)) {\n                    this.data = data.data;\n                    this.item = data.layout;\n                    this.form_items_joined();\n                } else {\n                    for (let key in data.data) {\n                        // noinspection JSUnfilteredForInLoop\n                        if (JSON.stringify(this.data[key]) != JSON.stringify(data.data[key])) {\n                            if (data.data[key].length != this.data[key].length) {\n                                this.data = data.data;\n                                this.item = data.layout;\n                                this.form_items_joined();\n                                break;\n                            } else {\n                                // noinspection JSUnfilteredForInLoop\n                                this.layout_service.data_updated.emit({'key': key, 'data': data.data[key]});\n                                // noinspection JSUnfilteredForInLoop\n                                this.data[key] = data.data[key];\n                            }\n\n                        }\n                    }\n                }\n            } else {\n                this.data = data.data;\n                this.item = data.layout;\n                this.form_items_joined();\n            }\n\n        });\n    }\n\n    ngOnDestroy(): void {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {ReportRoutingModule} from \"./report-routing.module\";\nimport {SharedModule} from \"../shared.module\";\nimport {SeriesComponent} from './internal/series/series.component';\nimport {ImgComponent} from './internal/img/img.component';\nimport {ImgClassifyComponent} from \"./internal/img-classify/img-classify.component\";\nimport {ReportComponent} from \"./report/report.component\";\nimport {LayoutComponent} from \"./internal/layout/layout.component\";\nimport {ReportDetailComponent} from \"./report-detail/report-detail.component\";\n\n@NgModule({\n    imports: [\n        ReportRoutingModule,\n        SharedModule\n    ],\n    declarations: [\n        SeriesComponent,\n        ImgComponent,\n        ImgClassifyComponent,\n        ReportComponent,\n        LayoutComponent,\n        ReportDetailComponent\n    ]\n})\nexport class ReportModule {\n}","module.exports = \"<div [attr.id]=\\\"id\\\"></div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydC9yZXBvcnQvcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"item.type=='root'\\\" style=\\\"margin-top: 10px\\\">\\n    <app-layout [data]=\\\"data\\\" [item]=\\\"child\\\" *ngFor=\\\"let child of items_joined\\\"></app-layout>\\n</div>\\n\\n<mat-expansion-panel [expanded]=\\\"item.expanded!=null?item.expanded:true\\\" *ngIf=\\\"item.type=='panel'\\\">\\n    <mat-expansion-panel-header>\\n        <mat-panel-title>\\n            {{item.title}}\\n        </mat-panel-title>\\n    </mat-expansion-panel-header>\\n\\n    <div *ngIf=\\\"items_joined.length>0\\\">\\n        <div *ngIf=\\\"item.parent_cols\\\">\\n            <mat-grid-list cols=\\\"{{item.parent_cols}}\\\" rowHeight=\\\"{{item.row_height}}px\\\" *ngIf=\\\"!item.table\\\">\\n\\n                <div *ngFor=\\\"let child of items_joined; index as i\\\">\\n                    <mat-grid-tile [colspan]=\\\"child.cols!=null?child.cols:1\\\" [rowspan]=\\\"child.rows!=null?child.rows:1\\\">\\n                        <app-layout [item]=\\\"child\\\" [data]=\\\"items_joined_data[i]\\\"></app-layout>\\n                    </mat-grid-tile>\\n                </div>\\n\\n            </mat-grid-list>\\n\\n        </div>\\n\\n        <table *ngIf=\\\"item.table\\\" style=\\\"width: 100%;height: 100%\\\">\\n            <td *ngFor=\\\"let child of items_joined; index as i\\\" [style.width]=\\\"td_width(child)\\\">\\n                <app-layout [item]=\\\"child\\\" [data]=\\\"items_joined_data[i]\\\"></app-layout>\\n            </td>\\n        </table>\\n\\n        <div *ngIf=\\\"item.row_height==null&&!item.table\\\">\\n            <app-layout [item]=\\\"child\\\" [data]=\\\"items_joined_data[i]\\\" *ngFor=\\\"let child of items_joined; index as i\\\"></app-layout>\\n        </div>\\n    </div>\\n\\n</mat-expansion-panel>\\n\\n<div *ngIf=\\\"item.type=='series'\\\">\\n    <app-series [item]=\\\"item\\\" [data]=\\\"data\\\"></app-series>\\n</div>\\n\\n<div *ngIf=\\\"item.type=='img'\\\">\\n   <app-img [item]=\\\"item\\\" [data]=\\\"data\\\"></app-img>\\n</div>\\n\\n<div *ngIf=\\\"item.type=='img_classify'\\\">\\n    <app-img-classify [item]=\\\"item\\\" [data]=\\\"data\\\"></app-img-classify>\\n</div>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydC9yZXBvcnQtZGV0YWlsL3JlcG9ydC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n\\n        <ng-container matColumnDef=\\\"img\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n                <div>{{data.part}}</div>\\n                <mat-button-toggle-group [attr.fxLayout]=\\\"'row wrap'\\\" (change)=\\\"epoch_changed($event)\\\" appearance=\\\"legacy\\\">\\n                    <mat-button-toggle [value]=\\\"epoch\\\" *ngFor=\\\"let epoch of data.epochs\\\">\\n                        <mat-icon>{{epoch}}</mat-icon>\\n                    </mat-button-toggle>\\n\\n                </mat-button-toggle-group>\\n\\n                <div [id]=\\\"'img_classify_'+data.part\\\"></div>\\n\\n                <mat-card class=\\\"result\\\">\\n                    <mat-card-content>\\n                        <section class=\\\"section\\\" *ngIf=\\\"data.epoch!=null\\\">\\n                            <div>\\n                                <div>min diff</div>\\n                                <mat-slider\\n                                        [max]=\\\"1\\\"\\n                                        [min]=\\\"0\\\"\\n                                        [step]=\\\"0.01\\\"\\n                                        [thumbLabel]=\\\"true\\\"\\n                                        (change) = \\\"change.emit()\\\"\\n                                        [(ngModel)]=\\\"metric_diff_min\\\">\\n\\n                                </mat-slider>\\n                            </div>\\n\\n                            <div>\\n                                <div style=\\\"text-align: right\\\">max diff</div>\\n                                <mat-slider\\n                                        [max]=\\\"1\\\"\\n                                        [min]=\\\"0\\\"\\n                                        [step]=\\\"0.01\\\"\\n                                        [thumbLabel]=\\\"true\\\"\\n                                        (change) = \\\"change.emit()\\\"\\n                                        [(ngModel)]=\\\"metric_diff_max\\\">\\n\\n                                </mat-slider>\\n                            </div>\\n                        </section>\\n\\n                    </mat-card-content>\\n                </mat-card>\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n                <div>True:{{element.y}} &nbsp; Pred:{{element.y_pred}} &nbsp; Diff: {{element.metric_diff}}</div>\\n                <img [attr.src]=\\\"'data:image/JPEG;base64,' + element.content\\\">\\n            </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayed_columns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayed_columns;\\\"></tr>\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[15, 30, 100]\\\" [length]=\\\"total\\\" [pageSize]=\\\"15\\\"></mat-paginator>\\n</div>\"","module.exports = \"app-layout{\\n    width: 100%;\\n    height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVwb3J0L2ludGVybmFsL2xheW91dC9sYXlvdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvcmVwb3J0L2ludGVybmFsL2xheW91dC9sYXlvdXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImFwcC1sYXlvdXR7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufSJdfQ== */\"","module.exports = \"mat-button-toggle-group {\\n    flex-wrap: wrap;\\n}\\n\\nimg {\\n    height: auto;\\n    width: auto;\\n}\\n\\n.section {\\n    display: flex;\\n    align-content: center;\\n    align-items: center;\\n    height: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVwb3J0L2ludGVybmFsL2ltZy1jbGFzc2lmeS9pbWctY2xhc3NpZnkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydC9pbnRlcm5hbC9pbWctY2xhc3NpZnkvaW1nLWNsYXNzaWZ5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtYnV0dG9uLXRvZ2dsZS1ncm91cCB7XG4gICAgZmxleC13cmFwOiB3cmFwO1xufVxuXG5pbWcge1xuICAgIGhlaWdodDogYXV0bztcbiAgICB3aWR0aDogYXV0bztcbn1cblxuLnNlY3Rpb24ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMnB4O1xufSJdfQ== */\""],"sourceRoot":""}