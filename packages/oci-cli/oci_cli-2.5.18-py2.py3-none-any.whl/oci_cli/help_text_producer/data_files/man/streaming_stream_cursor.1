.\" Man page generated from reStructuredText.
.
.TH "STREAMING_STREAM_CURSOR" "1" "Jul 08, 2019" "2.5.18" "OCI CLI Command Reference"
.SH NAME
streaming_stream_cursor \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
A cursor that indicates the position in the stream from which you want to begin consuming messages and which is required by the \fI\%GetMessages\fP <\fBhttps://docs.cloud.oracle.com/api/#/en/streaming/20180418/Message/GetMessages\fP> operation.
.SH AVAILABLE COMMANDS
.INDENT 0.0
.IP \(bu 2
create\-cursor
.IP \(bu 2
create\-group\-cursor
.UNINDENT
.SS create\-cursor
.SS Description
.sp
Creates a cursor. Cursors are used to consume a stream, starting from a specific point in the partition and going forward from there. You can create a cursor based on an offset, a time, the trim horizon, or the most recent message in the stream. As the oldest message inside the retention period boundary, using the trim horizon effectively lets you consume all messages in the stream. A cursor based on the most recent message allows consumption of only messages that are added to the stream after you create the cursor. Cursors expire five minutes after you receive them from the service.
.sp
The top level \-\-endpoint parameter must be supplied for this operation.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci streaming stream cursor create\-cursor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Options
.SS \-\-stream\-id [text]
.sp
The OCID of the stream to create a cursor for. [required]
.SS \-\-partition [text]
.sp
The partition to get messages from. [required]
.SS \-\-type [AFTER_OFFSET|AT_OFFSET|AT_TIME|LATEST|TRIM_HORIZON]
.sp
The type of cursor, which determines the starting point from which the stream will be consumed:
.INDENT 0.0
.IP \(bu 2
\fIAFTER_OFFSET:\fP The partition position immediately following the offset you specify. (Offsets are assigned when you successfully append a message to a partition in a stream.) \- \fIAT_OFFSET:\fP The exact partition position indicated by the offset you specify. \- \fIAT_TIME:\fP A specific point in time. \- \fILATEST:\fP The most recent message in the partition that was added after the cursor was created. \- \fITRIM_HORIZON:\fP The oldest message in the partition that is within the retention period window. [required]
.UNINDENT
.SS \-\-offset [integer]
.sp
The offset to consume from if the cursor type is \fIAT_OFFSET\fP or \fIAFTER_OFFSET\fP\&.
.SS \-\-time [datetime]
.sp
The time to consume from if the cursor type is \fIAT_TIME\fP, expressed in \fI\%RFC 3339\fP <\fBhttps://tools.ietf.org/rfc/rfc3339\fP> timestamp format.
.sp
The following datetime formats are supported:
.SS UTC with milliseconds
.sp
Format: YYYY\-MM\-DDTHH:mm:ss.sssTZD
.sp
Example: 2017\-09\-15T20:30:00.123Z
.SS UTC without milliseconds
.sp
Format: YYYY\-MM\-DDTHH:mm:ssTZD
.sp
Example: 2017\-09\-15T20:30:00Z
.SS UTC with minute precision
.sp
Format: YYYY\-MM\-DDTHH:mmTZD
.sp
Example: 2017\-09\-15T20:30Z
.SS Timezone with milliseconds
.sp
Format: YYYY\-MM\-DDTHH:mm:ssTZD
.sp
Example:
2017\-09\-15T12:30:00.456\-08:00,
2017\-09\-15T12:30:00.456\-0800
.SS Timezone without milliseconds
.sp
Format: YYYY\-MM\-DDTHH:mm:ssTZD
.sp
Example:
2017\-09\-15T12:30:00\-08:00,
2017\-09\-15T12:30:00\-0800
.SS Timezone with minute precision
.sp
Format: YYYY\-MM\-DDTHH:mmTZD
.sp
Example:
2017\-09\-15T12:30\-08:00,
2017\-09\-15T12:30\-0800
.SS Short date and time
.sp
The timezone for this date and time will be taken as UTC (Needs to be surrounded by single or double quotes)
Format: \(aqYYYY\-MM\-DD HH:mm\(aq or "YYYY\-MM\-DD HH:mm"
Example: \(aq2017\-09\-15 17:25\(aq
.SS Date Only
.sp
This date will be taken as midnight UTC of that day
.sp
Format: YYYY\-MM\-DD
.sp
Example: 2017\-09\-15
.SS Epoch seconds
.sp
Example: 1412195400
.SS \-\-from\-json [text]
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \-\-generate\-full\-command\-json\-input option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id \-\-> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our "using CLI with advanced JSON options" link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.SS \-?, \-h, \-\-help
.sp
For detailed help on any of these individual commands, enter <command> \-\-help.
.SS create\-group\-cursor
.SS Description
.sp
Creates a group\-cursor.
.sp
The top level \-\-endpoint parameter must be supplied for this operation.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci streaming stream cursor create\-group\-cursor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Options
.SS \-\-stream\-id [text]
.sp
The OCID of the stream to create a cursor for. [required]
.SS \-\-type [AT_TIME|LATEST|TRIM_HORIZON]
.sp
The type of the cursor. This value is only used when the group is created. [required]
.SS \-\-group\-name [text]
.sp
Name of the consumer group. [required]
.SS \-\-time [datetime]
.sp
The time to consume from if type is AT_TIME.
.sp
The following datetime formats are supported:
.SS UTC with milliseconds
.sp
Format: YYYY\-MM\-DDTHH:mm:ss.sssTZD
.sp
Example: 2017\-09\-15T20:30:00.123Z
.SS UTC without milliseconds
.sp
Format: YYYY\-MM\-DDTHH:mm:ssTZD
.sp
Example: 2017\-09\-15T20:30:00Z
.SS UTC with minute precision
.sp
Format: YYYY\-MM\-DDTHH:mmTZD
.sp
Example: 2017\-09\-15T20:30Z
.SS Timezone with milliseconds
.sp
Format: YYYY\-MM\-DDTHH:mm:ssTZD
.sp
Example:
2017\-09\-15T12:30:00.456\-08:00,
2017\-09\-15T12:30:00.456\-0800
.SS Timezone without milliseconds
.sp
Format: YYYY\-MM\-DDTHH:mm:ssTZD
.sp
Example:
2017\-09\-15T12:30:00\-08:00,
2017\-09\-15T12:30:00\-0800
.SS Timezone with minute precision
.sp
Format: YYYY\-MM\-DDTHH:mmTZD
.sp
Example:
2017\-09\-15T12:30\-08:00,
2017\-09\-15T12:30\-0800
.SS Short date and time
.sp
The timezone for this date and time will be taken as UTC (Needs to be surrounded by single or double quotes)
Format: \(aqYYYY\-MM\-DD HH:mm\(aq or "YYYY\-MM\-DD HH:mm"
Example: \(aq2017\-09\-15 17:25\(aq
.SS Date Only
.sp
This date will be taken as midnight UTC of that day
.sp
Format: YYYY\-MM\-DD
.sp
Example: 2017\-09\-15
.SS Epoch seconds
.sp
Example: 1412195400
.SS \-\-instance\-name [text]
.sp
A unique identifier for the instance joining the consumer group. If an instanceName is not provided, a UUID will be generated and used.
.SS \-\-timeout\-in\-ms [integer]
.sp
The amount of a consumer instance inactivity time, before partition reservations are released.
.SS \-\-commit\-on\-get [boolean]
.sp
When using consumer\-groups, the default commit\-on\-get behaviour can be overriden by setting this value to false. If disabled, a consumer must manually commit their cursors.
.SS \-\-from\-json [text]
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \-\-generate\-full\-command\-json\-input option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id \-\-> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our "using CLI with advanced JSON options" link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.SS \-?, \-h, \-\-help
.sp
For detailed help on any of these individual commands, enter <command> \-\-help.
.SH AUTHOR
Oracle
.SH COPYRIGHT
2016, 2019, Oracle
.\" Generated by docutils manpage writer.
.
