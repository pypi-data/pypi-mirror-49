# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class DescribeAlarmsRequest(JDCloudRequest):
    """
    查询规则, 查询参数组合及优先级从高到低为：
1：alarmId不为空
2：serviceCode不为空
2.1：serviceCode + resourceId
2.2: serviceCode + resourceIds
3：serviceCodes不为空
4: 所有规则
    """

    def __init__(self, parameters, header=None, version="v1"):
        super(DescribeAlarmsRequest, self).__init__(
            '/regions/{regionId}/alarms', 'GET', header, version)
        self.parameters = parameters


class DescribeAlarmsParameters(object):

    def __init__(self, regionId, ):
        """
        :param regionId: 地域 Id
        """

        self.regionId = regionId
        self.pageNumber = None
        self.pageSize = None
        self.serviceCode = None
        self.resourceId = None
        self.ruleType = None
        self.status = None
        self.enabled = None
        self.isAlarming = None
        self.alarmId = None
        self.filters = None

    def setPageNumber(self, pageNumber):
        """
        :param pageNumber: (Optional) 当前所在页，默认为1
        """
        self.pageNumber = pageNumber

    def setPageSize(self, pageSize):
        """
        :param pageSize: (Optional) 页面大小，默认为20；取值范围[1, 100]
        """
        self.pageSize = pageSize

    def setServiceCode(self, serviceCode):
        """
        :param serviceCode: (Optional) 产品名称
        """
        self.serviceCode = serviceCode

    def setResourceId(self, resourceId):
        """
        :param resourceId: (Optional) 资源ID
        """
        self.resourceId = resourceId

    def setRuleType(self, ruleType):
        """
        :param ruleType: (Optional) 规则类型, 1表示资源监控，6表示站点监控,7表示可用性监控
        """
        self.ruleType = ruleType

    def setStatus(self, status):
        """
        :param status: (Optional) 规则报警状态, 1：正常, 2：报警，4：数据不足
        """
        self.status = status

    def setEnabled(self, enabled):
        """
        :param enabled: (Optional) 规则状态：1为启用，0为禁用
        """
        self.enabled = enabled

    def setIsAlarming(self, isAlarming):
        """
        :param isAlarming: (Optional) 是否为正在报警的规则，0为忽略，1为是，与 status 同时只能生效一个,isAlarming 优先生效
        """
        self.isAlarming = isAlarming

    def setAlarmId(self, alarmId):
        """
        :param alarmId: (Optional) 规则的id
        """
        self.alarmId = alarmId

    def setFilters(self, filters):
        """
        :param filters: (Optional) 服务码或资源Id列表
filter name 为serviceCodes表示查询多个产品线的规则
filter name 为resourceIds表示查询多个资源的规则
        """
        self.filters = filters

