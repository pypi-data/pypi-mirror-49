{"version":3,"sources":["webpack:///./app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx","webpack:///./app/views/settings/organizationGeneralSettings/index.jsx"],"names":["OrganizationSettingsForm","createReactClass","displayName","propTypes","location","PropTypes","object","orgId","string","isRequired","access","initialData","onSave","func","mixins","ApiMixin","OrganizationState","render","_this$props","this","props","endpoint","concat","react_default","a","createElement","forms_form","className","apiMethod","apiEndpoint","saveOnBlur","allowUndo","onSubmitSuccess","resp","model","fieldName","change","onSubmitError","err","addErrorMessage","permissionAlert","jsonForm","features","getFeatures","forms","organizationSettingsFields","disabled","has","avatarChooser","type","allowGravatar","updateOrganization","OrganizationGeneralSettings","routes","arrayOf","getInitialState","loading","error","data","componentDidMount","_this","Promise","all","fetchData","then","_ref","slicedToArray_default","setState","_this2","resolve","reject","api","request","params","method","success","handleRemoveOrganization","state","addLoadingMessage","removeAndRedirectToRemainingOrganization","successMessage","name","errorMessage","handleSave","prevData","slug","changeOrganizationSlug","browserHistory","replace","_this$state","Set","hasProjects","projects","length","loadingError","loadingIndicator","settingsPageHeader","title","t","organizationSettingsForm","extends_default","isDefault","panels","field","label","help","linkWithConfirmation","priority","size","message","textBlock","tct","noMargin","map","project","key","onConfirm"],"mappings":"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","file":"OrganizationGeneralSettings.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {updateOrganization} from 'app/actionCreators/organizations';\nimport ApiMixin from 'app/mixins/apiMixin';\nimport AvatarChooser from 'app/components/avatarChooser';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport OrganizationState from 'app/mixins/organizationState';\nimport PermissionAlert from 'app/views/settings/organization/permissionAlert';\nimport organizationSettingsFields from 'app/data/forms/organizationGeneralSettings';\n\nconst OrganizationSettingsForm = createReactClass({\n  displayName: 'OrganizationSettingsForm',\n\n  propTypes: {\n    location: PropTypes.object,\n    orgId: PropTypes.string.isRequired,\n    access: PropTypes.object.isRequired,\n    initialData: PropTypes.object.isRequired,\n    onSave: PropTypes.func.isRequired,\n  },\n\n  mixins: [ApiMixin, OrganizationState],\n\n  render() {\n    const {initialData, orgId, onSave, access} = this.props;\n    const endpoint = `/organizations/${orgId}/`;\n    return (\n      <Form\n        className=\"ref-organization-settings\"\n        apiMethod=\"PUT\"\n        apiEndpoint={endpoint}\n        saveOnBlur\n        allowUndo\n        initialData={initialData}\n        onSubmitSuccess={(resp, model, fieldName, change) => {\n          // Special case for slug, need to forward to new slug\n          if (typeof onSave === 'function') {\n            onSave(initialData, model.initialData);\n          }\n        }}\n        onSubmitError={err => addErrorMessage('Unable to save change')}\n      >\n        <PermissionAlert />\n        <JsonForm\n          features={this.getFeatures()}\n          access={access}\n          location={this.props.location}\n          forms={organizationSettingsFields}\n          disabled={!access.has('org:write')}\n        />\n        <AvatarChooser\n          type=\"organization\"\n          allowGravatar={false}\n          endpoint={`${endpoint}avatar/`}\n          model={initialData}\n          onSave={updateOrganization}\n          disabled={!access.has('org:write')}\n        />\n      </Form>\n    );\n  },\n});\n\nexport default OrganizationSettingsForm;\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\n\nimport {Panel, PanelHeader} from 'app/components/panels';\nimport {addLoadingMessage} from 'app/actionCreators/indicator';\nimport {\n  changeOrganizationSlug,\n  removeAndRedirectToRemainingOrganization,\n  updateOrganization,\n} from 'app/actionCreators/organizations';\nimport {t, tct} from 'app/locale';\nimport ApiMixin from 'app/mixins/apiMixin';\nimport Field from 'app/views/settings/components/forms/field';\nimport LinkWithConfirmation from 'app/components/linkWithConfirmation';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nimport OrganizationSettingsForm from './organizationSettingsForm';\n\nconst OrganizationGeneralSettings = createReactClass({\n  displayName: 'OrganizationGeneralSettings',\n\n  propTypes: {\n    routes: PropTypes.arrayOf(PropTypes.object),\n  },\n\n  mixins: [ApiMixin],\n\n  getInitialState() {\n    return {\n      loading: true,\n      error: false,\n      data: null,\n    };\n  },\n\n  componentDidMount() {\n    Promise.all([this.fetchData()]).then(\n      ([data]) => {\n        this.setState({data, loading: false});\n      },\n      () => {\n        this.setState({error: true, loading: false});\n      }\n    );\n  },\n\n  fetchData() {\n    return new Promise((resolve, reject) => {\n      this.api.request(`/organizations/${this.props.params.orgId}/`, {\n        method: 'GET',\n        success: data => {\n          resolve(data);\n        },\n        error: () => {\n          reject();\n        },\n      });\n    });\n  },\n\n  handleRemoveOrganization() {\n    const {data} = this.state || {};\n    if (!data) {\n      return;\n    }\n\n    addLoadingMessage();\n    removeAndRedirectToRemainingOrganization(this.api, {\n      orgId: this.props.params.orgId,\n      successMessage: `${data.name} is queued for deletion.`,\n      errorMessage: `Error removing the ${data && data.name} organization`,\n    });\n  },\n\n  handleSave(prevData, data) {\n    if (data.slug && data.slug !== prevData.slug) {\n      changeOrganizationSlug(prevData, data);\n      browserHistory.replace(`/settings/${data.slug}/`);\n    } else {\n      // TODO(dcramer): this should propagate\n      this.setState({data});\n      // Ugh `data` here is different than data in OrganizationsStore\n      updateOrganization(data);\n    }\n  },\n\n  render() {\n    const {data, loading, error} = this.state;\n    const orgId = this.props.params.orgId;\n    const access = data && new Set(data.access);\n\n    const hasProjects = data && data.projects && !!data.projects.length;\n\n    return (\n      <div>\n        {error && <LoadingError />}\n        {loading && !error && <LoadingIndicator />}\n\n        {data &&\n          !loading &&\n          !error && (\n            <div>\n              <SettingsPageHeader title={t('Organization Settings')} />\n              <OrganizationSettingsForm\n                {...this.props}\n                initialData={data}\n                orgId={orgId}\n                access={access}\n                onSave={this.handleSave}\n              />\n\n              {access.has('org:admin') &&\n                !data.isDefault && (\n                  <Panel>\n                    <PanelHeader>{t('Remove Organization')}</PanelHeader>\n                    <Field\n                      label={t('Remove Organization')}\n                      help={t(\n                        'Removing this organization will delete all data including projects and their associated events.'\n                      )}\n                    >\n                      <div>\n                        <LinkWithConfirmation\n                          className=\"btn btn-danger\"\n                          priority=\"danger\"\n                          size=\"small\"\n                          title={t('Remove %s organization', data && data.name)}\n                          message={\n                            <div>\n                              <TextBlock>\n                                {tct(\n                                  'Removing the organization, [name] is permanent and cannot be undone! Are you sure you want to continue?',\n                                  {\n                                    name: data && <strong>{data.name}</strong>,\n                                  }\n                                )}\n                              </TextBlock>\n\n                              {hasProjects && (\n                                <div>\n                                  <TextBlock noMargin>\n                                    {t(\n                                      'This will also remove the following associated projects:'\n                                    )}\n                                  </TextBlock>\n                                  <ul className=\"ref-projects\">\n                                    {data.projects.map(project => (\n                                      <li key={project.slug}>{project.slug}</li>\n                                    ))}\n                                  </ul>\n                                </div>\n                              )}\n                            </div>\n                          }\n                          onConfirm={this.handleRemoveOrganization}\n                        >\n                          {t('Remove Organization')}\n                        </LinkWithConfirmation>\n                      </div>\n                    </Field>\n                  </Panel>\n                )}\n            </div>\n          )}\n      </div>\n    );\n  },\n});\n\nexport default OrganizationGeneralSettings;\n"],"sourceRoot":""}