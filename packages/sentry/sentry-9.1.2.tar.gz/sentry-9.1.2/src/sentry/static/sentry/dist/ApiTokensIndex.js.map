{"version":3,"sources":["webpack:///./app/views/settings/components/forms/textCopyInput.jsx","webpack:///./app/views/settings/account/apiTokenRow.jsx","webpack:///./app/views/settings/account/apiTokens.jsx"],"names":["StyledInput","styled","props","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","target","inputStyles","p","theme","offWhite","OverflowContainer","StyledCopyButton","Button","TextCopyInput","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","handleCopyClick","e","textRef","current","onCopy","handleSelectText","children","stopPropagation","selectText","ReactDOM","findDOMNode","React","createRef","_this$props","style","grid_emotion__WEBPACK_IMPORTED_MODULE_5__","readOnly","ref","value","onClick","app_components_clipboard__WEBPACK_IMPORTED_MODULE_13__","hideUnsupported","type","size","app_components_inlineSvg__WEBPACK_IMPORTED_MODULE_14__","src","Component","propTypes","PropTypes","string","isRequired","object","func","defaultProps","StyledPanelItem","PanelItem","Details","Flex","ScopeList","Time","Action","Box","Heading","gray3","StyledButton","ApiTokenRow","handleRemove","onRemove","token","react_default","index_es","flex","marginBottom","textCopyInput","flexValueContainer","renderer","_ref","align","getDynamicText","fixed","pl","icon","className","t","scopes","join","dateTime","date","dateCreated","Date","ApiTokens","handleRemoveToken","loadingIndicator","IndicatorStore","add","oldTokenList","state","tokenList","setState","filter","tk","api","request","method","data","success","remove","addSuccess","error","addError","loading","_this2","isEmpty","length","action","components_button","priority","to","settingsPageHeader","title","textBlock","tct","link","href","panels","disablePadding","px","emptyMessage","map","apiTokenRow","key","AsyncView"],"mappings":"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","file":"ApiTokensIndex.js","sourcesContent":["import {Flex} from 'grid-emotion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'react-emotion';\n\nimport {inputStyles} from 'app/styles/input';\nimport {selectText} from 'app/utils/selectText';\nimport Button from 'app/components/button';\nimport Clipboard from 'app/components/clipboard';\nimport InlineSvg from 'app/components/inlineSvg';\n\nconst StyledInput = styled(props => {\n  return <input {...props} />;\n})`\n  ${inputStyles};\n  background-color: ${p => p.theme.offWhite};\n  border-right-width: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.offWhite};\n    border-right-width: 0;\n  }\n`;\n\nconst OverflowContainer = styled('div')`\n  flex-grow: 1;\n  border: none;\n`;\n\nconst StyledCopyButton = styled(Button)`\n  flex-shrink: 1;\n  border-radius: 0 0.25em 0.25em 0;\n  box-shadow: none;\n`;\n\nclass TextCopyInput extends React.Component {\n  static propTypes = {\n    /**\n     * Text to copy\n     */\n    children: PropTypes.string.isRequired,\n    /**\n     * CSS style object\n     */\n    style: PropTypes.object,\n    onCopy: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onCopy: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.textRef = React.createRef();\n  }\n\n  // Select text when copy button is clicked\n  handleCopyClick = e => {\n    if (!this.textRef.current) {\n      return;\n    }\n\n    const {onCopy} = this.props;\n\n    this.handleSelectText();\n\n    onCopy(this.props.children, e);\n\n    e.stopPropagation();\n  };\n\n  handleSelectText = () => {\n    if (!this.textRef.current) {\n      return;\n    }\n\n    // We use findDOMNode here because `this.textRef` is not a dom node,\n    // it's a ref to AutoSelectText\n    selectText(ReactDOM.findDOMNode(this.textRef.current));\n  };\n\n  render() {\n    const {style, children} = this.props;\n\n    return (\n      <Flex>\n        <OverflowContainer>\n          <StyledInput\n            readOnly\n            ref={this.textRef}\n            style={style}\n            value={children}\n            onClick={this.handleSelectText}\n          />\n        </OverflowContainer>\n        <Clipboard hideUnsupported onClick={this.handleCopyClick} value={children}>\n          <StyledCopyButton type=\"button\" size=\"xsmall\" onClick={this.handleCopyClick}>\n            <InlineSvg src=\"icon-clipboard\" size=\"1.25em\" />\n          </StyledCopyButton>\n        </Clipboard>\n      </Flex>\n    );\n  }\n}\n\nexport default TextCopyInput;\n","import {Box, Flex} from 'grid-emotion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {PanelItem} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport DateTime from 'app/components/dateTime';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport getDynamicText from 'app/utils/getDynamicText';\n\nconst StyledPanelItem = styled(PanelItem)`\n  flex-direction: column;\n`;\n\nconst Details = styled(Flex)`\n  margin-top: 10px;\n`;\n\nconst ScopeList = styled.div`\n  font-size: 0.9em;\n  line-height: 1.4;\n`;\n\nconst Time = styled.time`\n  font-size: 0.9em;\n  line-height: 1.4;\n`;\n\nconst Action = styled(Box)`\n  align-self: flex-start;\n`;\n\nconst Heading = styled.div`\n  font-size: 13px;\n  text-transform: uppercase;\n  color: ${p => p.theme.gray3};\n  margin-bottom: 8px;\n`;\n\nconst StyledButton = styled(Button)`\n  /* todo(ckj): Buttons need to be refactored to be properly extended by styled.\n     For now, we'll need to use a child selector:\n  */\n\n  .button-label {\n    padding-top: 9px;\n    padding-bottom: 9px;\n  }\n`;\n\nclass ApiTokenRow extends React.Component {\n  static propTypes = {\n    token: PropTypes.object.isRequired,\n    onRemove: PropTypes.func.isRequired,\n  };\n\n  handleRemove = () => {\n    const {onRemove, token} = this.props;\n    onRemove(token);\n  };\n\n  render() {\n    const {token} = this.props;\n\n    return (\n      <StyledPanelItem p={2}>\n        <div>\n          <Flex>\n            <Box flex=\"1\">\n              <div style={{marginBottom: 5}}>\n                <small>\n                  <TextCopyInput\n                    flexValueContainer={false}\n                    renderer={({value, ref}) => (\n                      <Flex align=\"center\" ref={ref}>\n                        {value}\n                      </Flex>\n                    )}\n                  >\n                    {getDynamicText({value: token.token, fixed: 'PERCY_AUTH_TOKEN'})}\n                  </TextCopyInput>\n                </small>\n              </div>\n            </Box>\n            <Action pl={2}>\n              <StyledButton\n                size=\"small\"\n                onClick={this.handleRemove}\n                icon=\"icon-circle-subtract\"\n              >\n                <span className=\"ref-delete-api-token\">{t('Remove')}</span>\n              </StyledButton>\n            </Action>\n          </Flex>\n        </div>\n\n        <Details>\n          <Box flex=\"1\">\n            <Heading>{t('Scopes')}</Heading>\n            <ScopeList>{token.scopes.join(', ')}</ScopeList>\n          </Box>\n          <Box>\n            <Heading>{t('Created')}</Heading>\n            <Time>\n              <DateTime\n                date={getDynamicText({\n                  value: token.dateCreated,\n                  fixed: new Date(1508208080000), //National Pasta Day\n                })}\n              />\n            </Time>\n          </Box>\n        </Details>\n      </StyledPanelItem>\n    );\n  }\n}\n\nexport default ApiTokenRow;\n","import {Box, Flex} from 'grid-emotion';\nimport React from 'react';\n\nimport {t, tct} from 'app/locale';\nimport ApiTokenRow from 'app/views/settings/account/apiTokenRow';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport IndicatorStore from 'app/stores/indicatorStore';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nclass ApiTokens extends AsyncView {\n  getTitle() {\n    return 'API Tokens';\n  }\n\n  getDefaultState() {\n    return {\n      loading: true,\n      error: false,\n      tokenList: [],\n    };\n  }\n\n  getEndpoints() {\n    return [['tokenList', '/api-tokens/']];\n  }\n\n  handleRemoveToken = token => {\n    const loadingIndicator = IndicatorStore.add(t('Saving changes..'));\n    const oldTokenList = this.state.tokenList;\n\n    this.setState(\n      state => ({\n        tokenList: state.tokenList.filter(tk => tk.token !== token.token),\n      }),\n      () =>\n        this.api.request('/api-tokens/', {\n          method: 'DELETE',\n          data: {token: token.token},\n          success: data => {\n            IndicatorStore.remove(loadingIndicator);\n            IndicatorStore.addSuccess(t('Removed token'));\n          },\n          error: () => {\n            IndicatorStore.remove(loadingIndicator);\n            IndicatorStore.addError(t('Unable to remove token. Please try again.'));\n            this.setState({\n              tokenList: oldTokenList,\n            });\n          },\n        })\n    );\n  };\n\n  renderBody() {\n    const {tokenList} = this.state;\n\n    const isEmpty = tokenList.length === 0;\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        to=\"/settings/account/api/auth-tokens/new-token/\"\n        className=\"ref-create-token\"\n      >\n        {t('Create New Token')}\n      </Button>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title=\"Auth Tokens\" action={action} />\n        <TextBlock>\n          {t(\n            \"Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.\"\n          )}\n        </TextBlock>\n        <TextBlock>\n          {tct(\n            'For more information on how to use the web API, see our [link:documentation].',\n            {\n              link: <a href=\"https://docs.sentry.io/hosted/api/\" />,\n            }\n          )}\n        </TextBlock>\n        <TextBlock>\n          <small>\n            psst. Looking for the <strong>DSN</strong> for an SDK? You'll find that under{' '}\n            <strong>[Project] » Settings » Client Keys</strong>\n            .\n          </small>\n        </TextBlock>\n        <Panel>\n          <PanelHeader disablePadding>\n            <Flex align=\"center\">\n              <Box px={2} flex=\"1\">\n                {t('Auth Token')}\n              </Box>\n            </Flex>\n          </PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {t(\"You haven't created any authentication tokens yet.\")}\n              </EmptyMessage>\n            )}\n\n            {!isEmpty &&\n              tokenList.map(token => {\n                return (\n                  <ApiTokenRow\n                    key={token.token}\n                    token={token}\n                    onRemove={this.handleRemoveToken}\n                  />\n                );\n              })}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default ApiTokens;\n"],"sourceRoot":""}