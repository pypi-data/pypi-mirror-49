- name: Create /etc/puppet/hieradata
  file:
    path: /etc/puppet/hieradata
    state: directory
    mode: 0700

- name: Write hiera config
  when: (hieradata_files | length) > 0
  copy:
    mode: 0600
    dest:  /etc/puppet/hiera.yaml
    # TODO(emilien) Switch to Hiera5 format once we stop calling Hiera CLI
    # which is deprecated and should be replaced by "puppet lookup" command.
    content: |
      ---
      :backends:
        - json
      :json:
        :datadir: /etc/puppet/hieradata
      :hierarchy:
      {{ hieradata_files }}

- name: Template hieradata file
  when: hieradata_template != ""
  delegate_to: localhost
  run_once: True
  become: false
  template:
    src: "{{ hieradata_template }}"
    dest: "{{ hieradata_template ~ '.rendered' }}"
    variable_start_string: "{{ hieradata_variable_start_string }}"
    variable_end_string: "{{ hieradata_variable_end_string }}"

# hieradata_content needs to be formed an hash where each key is a datafile
# and the value is the hieradata to write in this datafile.
#
# Example:
#
# extraconfig:
#   foo: bar
#   foo2: bar2
# other_hierafile:
#   foo: bar3
- name: Copy hieradata files for all hosts
  when: not hieradata_per_host|bool
  include: all_hosts.yaml
  vars:
    hieradata_content: "{{ lookup('file', hieradata_template ~ '.rendered') | from_yaml }}"

# hieradata_content needs to be formed an hash where each key is a host composed
# of datafiles and the value for each datafile is the hieradata to write in it.
#
# Example:
#
# controller1:
#   extraconfig:
#     foo: bar
#     foo2: bar2
#   other_hierafile:
#     foo: bar3
# controller2:
#   extraconfig:
#     foo: bar2
#     foo2: bar3
#   other_hierafile:
#     foo: bar
- name: Copy hieradata files per host
  when: hieradata_per_host|bool
  include: per_host.yaml host={{ inventory_hostname }} data={{ hieradata_content[inventory_hostname] }}
  vars:
    hieradata_content: "{{ lookup('file', hieradata_template ~ '.rendered') | from_yaml }}"
