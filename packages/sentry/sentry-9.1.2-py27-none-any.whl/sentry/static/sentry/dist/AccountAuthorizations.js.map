{"version":3,"sources":["webpack:///./app/views/settings/account/accountAuthorizations.jsx"],"names":["AuthorizationRow","handleRevoke","authorization","_this","props","onRevoke","this","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","app_components_panels__WEBPACK_IMPORTED_MODULE_14__","grid_emotion__WEBPACK_IMPORTED_MODULE_5__","flex","p","direction","style","marginBottom","application","name","homepageUrl","href","color","scopes","join","align","app_components_button__WEBPACK_IMPORTED_MODULE_11__","onClick","className","React","Component","propTypes","PropTypes","object","isRequired","func","Description","styled","target","AccountAuthorizations","oldData","_this2","state","data","setState","filter","_ref","id","loadingIndicator","IndicatorStore","add","t","api","request","method","success","remove","error","addError","_this3","isEmpty","length","app_views_settings_components_settingsPageHeader__WEBPACK_IMPORTED_MODULE_15__","title","tct","link","disablePadding","px","app_views_settings_components_emptyMessage__WEBPACK_IMPORTED_MODULE_12__","map","key","AsyncView"],"mappings":"8RAaMA,qLAMJC,aAAe,WAAM,IACZC,EAAiBC,EAAKC,MAAtBF,cACPC,EAAKC,MAAMC,SAASH,4DAIpB,IAAMA,EAAgBI,KAAKF,MAAMF,cAEjC,OACEK,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,KAAD,CAAMC,KAAK,KACTL,EAAAC,EAAAC,cAACE,EAAA,KAAD,CAAME,EAAG,EAAGD,KAAK,IAAIE,UAAU,UAC7BP,EAAAC,EAAAC,cAAA,MAAIM,MAAO,CAACC,aAAc,IAAKd,EAAce,YAAYC,MACxDhB,EAAciB,aACbZ,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACC,aAAc,IACzBT,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,KAAGW,KAAMlB,EAAciB,aAAcjB,EAAciB,eAIzDZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOM,MAAO,CAACM,MAAO,SAAUnB,EAAcoB,OAAOC,KAAK,SAG9DhB,EAAAC,EAAAC,cAACE,EAAA,KAAD,CAAME,EAAG,EAAGW,MAAM,UAChBjB,EAAAC,EAAAC,cAACgB,EAAA,QAAD,CAAQC,QAASpB,KAAKL,cACpBM,EAAAC,EAAAC,cAAA,QAAMkB,UAAU,+BAhCCC,IAAMC,WAA/B7B,EACG8B,UAAY,CACjB5B,cAAe6B,IAAUC,OAAOC,WAChC5B,SAAU0B,IAAUG,KAAKD,YAsC7B,IAAME,EAAcC,kBAAH,KAAAC,OAAA,YAAGD,CAAH,uCAKXE,qLASJrC,aAAe,SAAAC,GACb,IAAMqC,EAAUC,EAAKC,MAAMC,KAE3BF,EAAKG,SACH,SAAAF,GAAK,MAAK,CACRC,KAAMD,EAAMC,KAAKE,OAAO,SAAAC,GAAA,OAAAA,EAAEC,KAAe5C,EAAc4C,OAEzD,WACE,IAAMC,EAAmBC,UAAeC,IAAIC,YAAE,qBAC9CV,EAAKW,IAAIC,QAAQ,uBAAwB,CACvCC,OAAQ,SACRX,KAAM,CAACxC,cAAeA,EAAc4C,IACpCQ,QAAS,SAAAZ,GACPM,UAAeO,OAAOR,IAExBS,MAAO,WACLhB,EAAKG,SAAS,CACZD,KAAMH,IAERS,UAAeO,OAAOR,GACtBC,UAAeS,SAASP,YAAE,kHA3BlC,MAAO,CAAC,CAAC,OAAQ,4DAIjB,MAAO,6DA8BI,IAAAQ,EAAApD,KACJoC,EAAQpC,KAAKmC,MAAbC,KACDiB,EAA0B,IAAhBjB,EAAKkB,OAErB,OACErD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoD,EAAA,QAAD,CAAoBC,MAAM,4BAC1BvD,EAAAC,EAAAC,cAAC0B,EAAD,KACG4B,cAAI,qEAAsE,CACzEC,KAAMzD,EAAAC,EAAAC,cAAA,KAAGW,KAAK,8BAIlBb,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAauD,gBAAgB,GAC3B1D,EAAAC,EAAAC,cAACE,EAAA,KAAD,CAAMa,MAAM,UACVjB,EAAAC,EAAAC,cAACE,EAAA,IAAD,CAAKuD,GAAI,EAAGtD,KAAK,KACdsC,YAAE,4BAKT3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACGiD,GACCpD,EAAAC,EAAAC,cAAC0D,EAAA,QAAD,KACGjB,YAAE,wDAILS,GACApD,EAAAC,EAAAC,cAAA,WACGiC,EAAK0B,IAAI,SAAAlE,GACR,OACEK,EAAAC,EAAAC,cAACT,EAAD,CACEqE,IAAKnE,EAAc4C,GACnB5C,cAAeA,EACfG,SAAUqD,EAAKzD,4BAxEDqE,WAqFrBhC","file":"AccountAuthorizations.js","sourcesContent":["import {Box, Flex} from 'grid-emotion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {t, tct} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport IndicatorStore from 'app/stores/indicatorStore';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nclass AuthorizationRow extends React.Component {\n  static propTypes = {\n    authorization: PropTypes.object.isRequired,\n    onRevoke: PropTypes.func.isRequired,\n  };\n\n  handleRevoke = () => {\n    const {authorization} = this.props;\n    this.props.onRevoke(authorization);\n  };\n\n  render() {\n    const authorization = this.props.authorization;\n\n    return (\n      <PanelItem>\n        <Flex flex=\"1\">\n          <Flex p={2} flex=\"1\" direction=\"column\">\n            <h5 style={{marginBottom: 5}}>{authorization.application.name}</h5>\n            {authorization.homepageUrl && (\n              <div style={{marginBottom: 5}}>\n                <small>\n                  <a href={authorization.homepageUrl}>{authorization.homepageUrl}</a>\n                </small>\n              </div>\n            )}\n            <div>\n              <small style={{color: '#999'}}>{authorization.scopes.join(', ')}</small>\n            </div>\n          </Flex>\n          <Flex p={2} align=\"center\">\n            <Button onClick={this.handleRevoke}>\n              <span className=\"icon icon-trash\" />\n            </Button>\n          </Flex>\n        </Flex>\n      </PanelItem>\n    );\n  }\n}\n\nconst Description = styled.p`\n  font-size: 0.9em;\n  margin-bottom: 30px;\n`;\n\nclass AccountAuthorizations extends AsyncView {\n  getEndpoints() {\n    return [['data', '/api-authorizations/']];\n  }\n\n  getTitle() {\n    return 'Approved Applications';\n  }\n\n  handleRevoke = authorization => {\n    const oldData = this.state.data;\n\n    this.setState(\n      state => ({\n        data: state.data.filter(({id}) => id !== authorization.id),\n      }),\n      () => {\n        const loadingIndicator = IndicatorStore.add(t('Saving changes..'));\n        this.api.request('/api-authorizations/', {\n          method: 'DELETE',\n          data: {authorization: authorization.id},\n          success: data => {\n            IndicatorStore.remove(loadingIndicator);\n          },\n          error: () => {\n            this.setState({\n              data: oldData,\n            });\n            IndicatorStore.remove(loadingIndicator);\n            IndicatorStore.addError(t('Unable to save changes. Please try again.'));\n          },\n        });\n      }\n    );\n  };\n\n  renderBody() {\n    const {data} = this.state;\n    const isEmpty = data.length === 0;\n\n    return (\n      <div>\n        <SettingsPageHeader title=\"Authorized Applications\" />\n        <Description>\n          {tct('You can manage your own applications via the [link:API dashboard].', {\n            link: <a href=\"/settings/account/api/\" />,\n          })}\n        </Description>\n\n        <Panel>\n          <PanelHeader disablePadding={true}>\n            <Flex align=\"center\">\n              <Box px={2} flex=\"1\">\n                {t('Approved Applications')}\n              </Box>\n            </Flex>\n          </PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {t(\"You haven't approved any third party applications.\")}\n              </EmptyMessage>\n            )}\n\n            {!isEmpty && (\n              <div>\n                {data.map(authorization => {\n                  return (\n                    <AuthorizationRow\n                      key={authorization.id}\n                      authorization={authorization}\n                      onRevoke={this.handleRevoke}\n                    />\n                  );\n                })}\n              </div>\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default AccountAuthorizations;\n"],"sourceRoot":""}