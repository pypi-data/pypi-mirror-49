restore
*******


Description
===========

**Deprecated.** To restore an Autonomous Data Warehouse, use the
RestoreAutonomousDatabase operation.


Usage
=====

   oci db autonomous-data-warehouse restore [OPTIONS]


Options
=======


--autonomous-data-warehouse-id [text]
-------------------------------------

The database OCID. [required]


--timestamp [datetime]
----------------------

The time to restore the database to.

The following datetime formats are supported:


UTC with milliseconds
~~~~~~~~~~~~~~~~~~~~~

Format: YYYY-MM-DDTHH:mm:ss.sssTZD

Example: 2017-09-15T20:30:00.123Z


UTC without milliseconds
~~~~~~~~~~~~~~~~~~~~~~~~

Format: YYYY-MM-DDTHH:mm:ssTZD

Example: 2017-09-15T20:30:00Z


UTC with minute precision
~~~~~~~~~~~~~~~~~~~~~~~~~

Format: YYYY-MM-DDTHH:mmTZD

Example: 2017-09-15T20:30Z


Timezone with milliseconds
~~~~~~~~~~~~~~~~~~~~~~~~~~

Format: YYYY-MM-DDTHH:mm:ssTZD

Example: 2017-09-15T12:30:00.456-08:00, 2017-09-15T12:30:00.456-0800


Timezone without milliseconds
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Format: YYYY-MM-DDTHH:mm:ssTZD

Example: 2017-09-15T12:30:00-08:00, 2017-09-15T12:30:00-0800


Timezone with minute precision
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Format: YYYY-MM-DDTHH:mmTZD

Example: 2017-09-15T12:30-08:00, 2017-09-15T12:30-0800


Short date and time
~~~~~~~~~~~~~~~~~~~

The timezone for this date and time will be taken as UTC (Needs to be
surrounded by single or double quotes) Format: 'YYYY-MM-DD HH:mm' or
"YYYY-MM-DD HH:mm" Example: '2017-09-15 17:25'


Date Only
~~~~~~~~~

This date will be taken as midnight UTC of that day

Format: YYYY-MM-DD

Example: 2017-09-15


Epoch seconds
~~~~~~~~~~~~~

Example: 1412195400
   [required]


--if-match [text]
-----------------

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource.  The resource will be
updated or deleted only if the etag you provide matches the resource's
current etag value.


--wait-for-state [PROVISIONING|AVAILABLE|STOPPING|STOPPED|STARTING|TERMINATING|TERMINATED|UNAVAILABLE|RESTORE_IN_PROGRESS|BACKUP_IN_PROGRESS|SCALE_IN_PROGRESS|AVAILABLE_NEEDS_ATTENTION]
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. If
timeout is reached, a return code of 2 is returned. For any other
error, a return code of 1 is returned.


--max-wait-seconds [integer]
----------------------------

The maximum time to wait for the resource to reach the lifecycle state
defined by --wait-for-state. Defaults to 1200 seconds.


--wait-interval-seconds [integer]
---------------------------------

Check every --wait-interval-seconds to see whether the resource to see
if it has reached the lifecycle state defined by --wait-for-state.
Defaults to 30 seconds.


--from-json [text]
------------------

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The --generate-full-command-json-input option can be used to generate
a sample json file to be used with this command option. The key names
are pre-populated and match the command option names (converted to
camelCase format, e.g. compartment-id --> compartmentId), while the
values of the keys need to be populated by the user before using the
sample file as an input to this command. For any command option that
accepts multiple values, the value of the key can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions


-?, -h, --help
--------------

For detailed help on any of these individual commands, enter <command>
--help.
