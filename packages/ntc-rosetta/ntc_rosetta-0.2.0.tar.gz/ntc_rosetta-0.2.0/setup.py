# -*- coding: utf-8 -*-
from distutils.core import setup

packages = \
['ntc_rosetta',
 'ntc_rosetta.cli',
 'ntc_rosetta.drivers',
 'ntc_rosetta.helpers',
 'ntc_rosetta.parsers',
 'ntc_rosetta.parsers.ntc',
 'ntc_rosetta.parsers.ntc.ios',
 'ntc_rosetta.parsers.ntc.ios.ntc_vlan',
 'ntc_rosetta.parsers.ntc.junos',
 'ntc_rosetta.parsers.openconfig.ios',
 'ntc_rosetta.parsers.openconfig.ios.openconfig_if_ethernet',
 'ntc_rosetta.parsers.openconfig.ios.openconfig_interfaces',
 'ntc_rosetta.parsers.openconfig.ios.openconfig_network_instance',
 'ntc_rosetta.parsers.openconfig.ios.openconfig_vlan',
 'ntc_rosetta.parsers.openconfig.junos',
 'ntc_rosetta.parsers.openconfig.junos.openconfig_if_ethernet',
 'ntc_rosetta.parsers.openconfig.junos.openconfig_interfaces',
 'ntc_rosetta.parsers.openconfig.junos.openconfig_network_instance',
 'ntc_rosetta.parsers.openconfig.junos.openconfig_vlan',
 'ntc_rosetta.translators',
 'ntc_rosetta.translators.ntc',
 'ntc_rosetta.translators.ntc.ios',
 'ntc_rosetta.translators.ntc.ios.ntc_vlan',
 'ntc_rosetta.translators.ntc.junos',
 'ntc_rosetta.translators.openconfig.ios',
 'ntc_rosetta.translators.openconfig.ios.openconfig_if_ethernet',
 'ntc_rosetta.translators.openconfig.ios.openconfig_interfaces',
 'ntc_rosetta.translators.openconfig.ios.openconfig_network_instance',
 'ntc_rosetta.translators.openconfig.ios.openconfig_vlan',
 'ntc_rosetta.translators.openconfig.junos',
 'ntc_rosetta.translators.openconfig.junos.openconfig_if_ethernet',
 'ntc_rosetta.translators.openconfig.junos.openconfig_interfaces',
 'ntc_rosetta.translators.openconfig.junos.openconfig_network_instance',
 'ntc_rosetta.translators.openconfig.junos.openconfig_vlan',
 'ntc_rosetta.yang']

package_data = \
{'': ['*'],
 'ntc_rosetta.yang': ['YangModels/standard/ietf/RFC/*',
                      'ntc-yang-models/*',
                      'ntc-yang-models/docs/*',
                      'ntc-yang-models/docs/models/*',
                      'ntc-yang-models/docs/models/dynamic/*',
                      'ntc-yang-models/models/*',
                      'ntc-yang-models/models/arp/*',
                      'ntc-yang-models/models/ietf/*',
                      'ntc-yang-models/models/system/*',
                      'ntc-yang-models/models/types/*',
                      'ntc-yang-models/models/vlan/*',
                      'ntc-yang-models/models/vrf/*',
                      'ntc-yang-models/tests/*',
                      'ntc-yang-models/tests/data/arp/*',
                      'ntc-yang-models/tests/data/vlan/*',
                      'openconfig/*',
                      'openconfig/doc/*',
                      'openconfig/doc/examples/*',
                      'openconfig/doc/img/*',
                      'openconfig/release/*',
                      'openconfig/release/models/*',
                      'openconfig/release/models/acl/*',
                      'openconfig/release/models/aft/*',
                      'openconfig/release/models/bfd/*',
                      'openconfig/release/models/bgp/*',
                      'openconfig/release/models/catalog/*',
                      'openconfig/release/models/interfaces/*',
                      'openconfig/release/models/isis/*',
                      'openconfig/release/models/lacp/*',
                      'openconfig/release/models/lldp/*',
                      'openconfig/release/models/local-routing/*',
                      'openconfig/release/models/mpls/*',
                      'openconfig/release/models/multicast/*',
                      'openconfig/release/models/network-instance/*',
                      'openconfig/release/models/openflow/*',
                      'openconfig/release/models/optical-transport/*',
                      'openconfig/release/models/ospf/*',
                      'openconfig/release/models/platform/*',
                      'openconfig/release/models/policy-forwarding/*',
                      'openconfig/release/models/policy/*',
                      'openconfig/release/models/probes/*',
                      'openconfig/release/models/qos/*',
                      'openconfig/release/models/relay-agent/*',
                      'openconfig/release/models/rib/*',
                      'openconfig/release/models/segment-routing/*',
                      'openconfig/release/models/stp/*',
                      'openconfig/release/models/system/*',
                      'openconfig/release/models/telemetry/*',
                      'openconfig/release/models/types/*',
                      'openconfig/release/models/vlan/*',
                      'openconfig/release/models/wifi/*',
                      'openconfig/release/models/wifi/access-points/*',
                      'openconfig/release/models/wifi/ap-manager/*',
                      'openconfig/release/models/wifi/mac/*',
                      'openconfig/release/models/wifi/phy/*',
                      'openconfig/release/models/wifi/types/*']}

install_requires = \
['click>=7.0,<8.0',
 'jmespath>=0.9.3,<0.10.0',
 'lxml>=4.3,<5.0',
 'yangify>=0.1.1,<0.2.0']

entry_points = \
{'console_scripts': ['ntc_rosetta = ntc_rosetta.cli:run']}

setup_kwargs = {
    'name': 'ntc-rosetta',
    'version': '0.2.0',
    'description': 'The missing bridge between industry standard CLIs and YANG',
    'long_description': '# ntc_rosetta\n\nntc_rosetta leverages [yangify](https://github.com/networktocode/yangify) to implement a set of "drivers" that can:\n\n1. Transform network devices\' native configuration/state into structured data that conform to YANG models\n2. Transform data structures that conform to YANG models into network device\'s native configuration/data structures\n3. Merge configurations\n\n## Parsing\n\n    >>> from ntc_rosetta import get_driver\n    >>>\n    >>> ios = get_driver("ios", "openconfig")\n    >>> ios_driver = ios()\n    >>> with open("data/ios/config.txt", "r") as f:\n    >>>     config = f.read()\n    >>> print(config)\n    interface FastEthernet1\n       description This is Fa1\n       shutdown\n       exit\n    !\n    vlan 10\n       name prod\n       no shutdown\n       exit\n    !\n    vlan 20\n       name dev\n       shutdown\n       exit\n    !\n    >>> parsed = ios_driver.parse(native={"dev_conf": config})\n    >>> import json\n    >>> print(json.dumps(parsed.raw_value(), indent=4))\n    {\n        "openconfig-interfaces:interfaces": {\n            "interface": [\n                {\n                    "name": "FastEthernet1",\n                    "config": {\n                        "name": "FastEthernet1",\n                        "type": "iana-if-type:ethernetCsmacd",\n                        "description": "This is Fa1",\n                        "enabled": false\n                    },\n                    "subinterfaces": {\n                        "subinterface": [\n                            {\n                                "index": 1,\n                                "config": {\n                                    "index": 1,\n                                    "description": "This is Fa1.1"\n                                }\n                            },\n                            {\n                                "index": 2,\n                                "config": {\n                                    "index": 2,\n                                    "description": "This is Fa1.2"\n                                }\n                            }\n                        ]\n                    }\n                },\n            ]\n        },\n        "openconfig-network-instance:network-instances": {\n            "network-instance": [\n                {\n                    "name": "default",\n                    "config": {\n                        "name": "default"\n                    },\n                    "vlans": {\n                        "vlan": [\n                            {\n                                "vlan-id": 10,\n                                "config": {\n                                    "vlan-id": 10,\n                                    "name": "prod",\n                                    "status": "ACTIVE"\n                                }\n                            },\n                            {\n                                "vlan-id": 20,\n                                "config": {\n                                    "vlan-id": 20,\n                                    "name": "dev",\n                                    "status": "SUSPENDED"\n                                }\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    }\n\n## Translating\n\n    >>> from ntc_rosetta import get_driver\n    >>> \n    >>> ios = get_driver("ios", "openconfig")\n    >>> ios_processor = ios()\n    >>> data = {\n    >>>     "openconfig-interfaces:interfaces": {\n    >>>         "interface": [\n    >>>             {\n    >>>                 "name": "FastEthernet1",\n    >>>                 "config": {\n    >>>                     "name": "FastEthernet1",\n    >>>                     "type": "iana-if-type:ethernetCsmacd",\n    >>>                     "description": "This is Fa1",\n    >>>                     "enabled": False\n    >>>                 },\n    >>>                 "subinterfaces": {\n    >>>                     "subinterface": [\n    >>>                         {\n    >>>                             "index": 1,\n    >>>                             "config": {\n    >>>                                 "index": 1,\n    >>>                                 "description": "This is Fa1.1"\n    >>>                             }\n    >>>                         },\n    >>>                         {\n    >>>                             "index": 2,\n    >>>                             "config": {\n    >>>                                 "index": 2,\n    >>>                                 "description": "This is Fa1.2"\n    >>>                             }\n    >>>                         }\n    >>>                     ]\n    >>>                 }\n    >>>             },\n    >>>         ]\n    >>>     },\n    >>>     "openconfig-network-instance:network-instances": {\n    >>>         "network-instance": [\n    >>>             {\n    >>>                 "name": "default",\n    >>>                 "config": {\n    >>>                     "name": "default"\n    >>>                 },\n    >>>                 "vlans": {\n    >>>                     "vlan": [\n    >>>                         {\n    >>>                             "vlan-id": 10,\n    >>>                             "config": {\n    >>>                                 "vlan-id": 10,\n    >>>                                 "name": "prod",\n    >>>                                 "status": "ACTIVE"\n    >>>                             }\n    >>>                         },\n    >>>                         {\n    >>>                             "vlan-id": 20,\n    >>>                             "config": {\n    >>>                                 "vlan-id": 20,\n    >>>                                 "name": "dev",\n    >>>                                 "status": "SUSPENDED"\n    >>>                             }\n    >>>                         }\n    >>>                     ]\n    >>>                 }\n    >>>             }\n    >>>         ]\n    >>>     }\n    >>> }\n    >>> native = ios_processor.translate(candidate=data)\n    >>> print(native)\n    interface FastEthernet1\n       description This is Fa1\n       shutdown\n       exit\n    !\n    interface FastEthernet1.1\n       description This is Fa1.1\n       exit\n    !\n    interface FastEthernet1.2\n       description This is Fa1.2\n       exit\n    !\n    interface FastEthernet3\n       description This is Fa3\n       no shutdown\n       switchport mode access\n       switchport access vlan 10\n       exit\n    !\n    interface FastEthernet4\n       shutdown\n       switchport mode trunk\n       switchport trunk allowed vlan 10,20\n       exit\n    !\n    vlan 10\n       name prod\n       no shutdown\n       exit\n    !\n    vlan 20\n       name dev\n       shutdown\n       exit\n    !\n',
    'author': 'David Barroso',
    'author_email': 'dbarrosop@dravetech.com',
    'url': None,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
