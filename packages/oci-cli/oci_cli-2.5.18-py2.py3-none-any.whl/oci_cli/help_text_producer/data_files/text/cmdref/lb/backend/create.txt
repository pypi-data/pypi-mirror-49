create
******


Description
===========

Adds a backend server to a backend set.


Usage
=====

   oci lb backend create [OPTIONS]


Options
=======


--ip-address [text]
-------------------

The IP address of the backend server.

Example: *10.0.0.3* [required]


--port [integer]
----------------

The communication port for the backend server.

Example: *8080* [required]


--load-balancer-id [text]
-------------------------

The OCID of the load balancer associated with the backend set and
servers. [required]


--backend-set-name [text]
-------------------------

The name of the backend set to add the backend server to.

Example: *example_backend_set* [required]


--weight [integer]
------------------

The load balancing policy weight assigned to the server. Backend
servers with a higher weight receive a larger proportion of incoming
traffic. For example, a server weighted '3' receives 3 times the
number of new connections as a server weighted '1'. For more
information on load balancing policies, see How Load Balancing
Policies Work.

Example: *3*


--backup [boolean]
------------------

Whether the load balancer should treat this server as a backup unit.
If *true*, the load balancer forwards no ingress traffic to this
backend server unless all other backend servers not marked as "backup"
fail the health check policy.

Example: *false*


--drain [boolean]
-----------------

Whether the load balancer should drain this server. Servers marked
"drain" receive no new incoming traffic.

Example: *false*


--offline [boolean]
-------------------

Whether the load balancer should treat this server as offline. Offline
servers receive no incoming traffic.

Example: *false*


--wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED]
--------------------------------------------------------

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.


--max-wait-seconds [integer]
----------------------------

The maximum time to wait for the work request to reach the state
defined by --wait-for-state. Defaults to 1200 seconds.


--wait-interval-seconds [integer]
---------------------------------

Check every --wait-interval-seconds to see whether the work request to
see if it has reached the state defined by --wait-for-state. Defaults
to 30 seconds.


--from-json [text]
------------------

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The --generate-full-command-json-input option can be used to generate
a sample json file to be used with this command option. The key names
are pre-populated and match the command option names (converted to
camelCase format, e.g. compartment-id --> compartmentId), while the
values of the keys need to be populated by the user before using the
sample file as an input to this command. For any command option that
accepts multiple values, the value of the key can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions


-?, -h, --help
--------------

For detailed help on any of these individual commands, enter <command>
--help.
