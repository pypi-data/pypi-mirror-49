# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkConfidenceConnectedImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkConfidenceConnectedImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkConfidenceConnectedImageFilterPython
            return _itkConfidenceConnectedImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkConfidenceConnectedImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkConfidenceConnectedImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkConfidenceConnectedImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkIndexPython
import itkOffsetPython
import itkSizePython
import pyBasePython
import itkImageToImageFilterAPython
import itkImagePython
import stdcomplexPython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkImageRegionPython
import ITKCommonBasePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkConfidenceConnectedImageFilterIF3IUS3_New():
  return itkConfidenceConnectedImageFilterIF3IUS3.New()


def itkConfidenceConnectedImageFilterIF2IUS2_New():
  return itkConfidenceConnectedImageFilterIF2IUS2.New()


def itkConfidenceConnectedImageFilterIF3IUC3_New():
  return itkConfidenceConnectedImageFilterIF3IUC3.New()


def itkConfidenceConnectedImageFilterIF2IUC2_New():
  return itkConfidenceConnectedImageFilterIF2IUC2.New()


def itkConfidenceConnectedImageFilterIF3ISS3_New():
  return itkConfidenceConnectedImageFilterIF3ISS3.New()


def itkConfidenceConnectedImageFilterIF2ISS2_New():
  return itkConfidenceConnectedImageFilterIF2ISS2.New()


def itkConfidenceConnectedImageFilterIUS3IUS3_New():
  return itkConfidenceConnectedImageFilterIUS3IUS3.New()


def itkConfidenceConnectedImageFilterIUS2IUS2_New():
  return itkConfidenceConnectedImageFilterIUS2IUS2.New()


def itkConfidenceConnectedImageFilterIUS3IUC3_New():
  return itkConfidenceConnectedImageFilterIUS3IUC3.New()


def itkConfidenceConnectedImageFilterIUS2IUC2_New():
  return itkConfidenceConnectedImageFilterIUS2IUC2.New()


def itkConfidenceConnectedImageFilterIUS3ISS3_New():
  return itkConfidenceConnectedImageFilterIUS3ISS3.New()


def itkConfidenceConnectedImageFilterIUS2ISS2_New():
  return itkConfidenceConnectedImageFilterIUS2ISS2.New()


def itkConfidenceConnectedImageFilterIUC3IUS3_New():
  return itkConfidenceConnectedImageFilterIUC3IUS3.New()


def itkConfidenceConnectedImageFilterIUC2IUS2_New():
  return itkConfidenceConnectedImageFilterIUC2IUS2.New()


def itkConfidenceConnectedImageFilterIUC3IUC3_New():
  return itkConfidenceConnectedImageFilterIUC3IUC3.New()


def itkConfidenceConnectedImageFilterIUC2IUC2_New():
  return itkConfidenceConnectedImageFilterIUC2IUC2.New()


def itkConfidenceConnectedImageFilterIUC3ISS3_New():
  return itkConfidenceConnectedImageFilterIUC3ISS3.New()


def itkConfidenceConnectedImageFilterIUC2ISS2_New():
  return itkConfidenceConnectedImageFilterIUC2ISS2.New()


def itkConfidenceConnectedImageFilterISS3IUS3_New():
  return itkConfidenceConnectedImageFilterISS3IUS3.New()


def itkConfidenceConnectedImageFilterISS2IUS2_New():
  return itkConfidenceConnectedImageFilterISS2IUS2.New()


def itkConfidenceConnectedImageFilterISS3IUC3_New():
  return itkConfidenceConnectedImageFilterISS3IUC3.New()


def itkConfidenceConnectedImageFilterISS2IUC2_New():
  return itkConfidenceConnectedImageFilterISS2IUC2.New()


def itkConfidenceConnectedImageFilterISS3ISS3_New():
  return itkConfidenceConnectedImageFilterISS3ISS3.New()


def itkConfidenceConnectedImageFilterISS2ISS2_New():
  return itkConfidenceConnectedImageFilterISS2ISS2.New()

class itkConfidenceConnectedImageFilterIF2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIF2ISS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIF2ISS2 self) -> itkConfidenceConnectedImageFilterIF2ISS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIF2ISS2 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIF2ISS2 self, itkIndex2 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIF2ISS2 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIF2ISS2 self, itkIndex2 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIF2ISS2 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIF2ISS2 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIF2ISS2 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIF2ISS2 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIF2ISS2 self, short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIF2ISS2 self) -> short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIF2ISS2 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIF2ISS2 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIF2ISS2 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIF2ISS2 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIF2ISS2 self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIF2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIF2ISS2"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIF2ISS2

        Create a new object of the class itkConfidenceConnectedImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIF2ISS2.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_Clone, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_PrintSelf, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_SetSeed, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_ClearSeeds, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_AddSeed, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_SetMultiplier, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_GetMultiplier, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_SetReplaceValue, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_GetReplaceValue, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_GetMean, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_GetVariance, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_GetSeeds, None, itkConfidenceConnectedImageFilterIF2ISS2)
itkConfidenceConnectedImageFilterIF2ISS2_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_swigregister
itkConfidenceConnectedImageFilterIF2ISS2_swigregister(itkConfidenceConnectedImageFilterIF2ISS2)

def itkConfidenceConnectedImageFilterIF2ISS2___New_orig__():
    """itkConfidenceConnectedImageFilterIF2ISS2___New_orig__() -> itkConfidenceConnectedImageFilterIF2ISS2_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2___New_orig__()

def itkConfidenceConnectedImageFilterIF2ISS2_cast(obj):
    """itkConfidenceConnectedImageFilterIF2ISS2_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIF2ISS2"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2ISS2_cast(obj)

class itkConfidenceConnectedImageFilterIF2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIF2IUC2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIF2IUC2 self) -> itkConfidenceConnectedImageFilterIF2IUC2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIF2IUC2 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIF2IUC2 self, itkIndex2 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIF2IUC2 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIF2IUC2 self, itkIndex2 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIF2IUC2 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIF2IUC2 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIF2IUC2 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIF2IUC2 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIF2IUC2 self, unsigned char const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIF2IUC2 self) -> unsigned char"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIF2IUC2 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIF2IUC2 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIF2IUC2 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIF2IUC2 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIF2IUC2 self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIF2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIF2IUC2"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIF2IUC2

        Create a new object of the class itkConfidenceConnectedImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIF2IUC2.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_Clone, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_PrintSelf, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_SetSeed, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_ClearSeeds, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_AddSeed, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_SetMultiplier, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_GetMultiplier, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_SetReplaceValue, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_GetReplaceValue, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_GetMean, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_GetVariance, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_GetSeeds, None, itkConfidenceConnectedImageFilterIF2IUC2)
itkConfidenceConnectedImageFilterIF2IUC2_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_swigregister
itkConfidenceConnectedImageFilterIF2IUC2_swigregister(itkConfidenceConnectedImageFilterIF2IUC2)

def itkConfidenceConnectedImageFilterIF2IUC2___New_orig__():
    """itkConfidenceConnectedImageFilterIF2IUC2___New_orig__() -> itkConfidenceConnectedImageFilterIF2IUC2_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2___New_orig__()

def itkConfidenceConnectedImageFilterIF2IUC2_cast(obj):
    """itkConfidenceConnectedImageFilterIF2IUC2_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIF2IUC2"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUC2_cast(obj)

class itkConfidenceConnectedImageFilterIF2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIF2IUS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIF2IUS2 self) -> itkConfidenceConnectedImageFilterIF2IUS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIF2IUS2 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIF2IUS2 self, itkIndex2 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIF2IUS2 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIF2IUS2 self, itkIndex2 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIF2IUS2 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIF2IUS2 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIF2IUS2 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIF2IUS2 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIF2IUS2 self, unsigned short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIF2IUS2 self) -> unsigned short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIF2IUS2 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIF2IUS2 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIF2IUS2 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIF2IUS2 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIF2IUS2 self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIF2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIF2IUS2"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIF2IUS2

        Create a new object of the class itkConfidenceConnectedImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIF2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIF2IUS2.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_Clone, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_PrintSelf, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_SetSeed, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_ClearSeeds, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_AddSeed, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_SetMultiplier, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_GetMultiplier, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_SetReplaceValue, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_GetReplaceValue, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_GetMean, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_GetVariance, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_GetSeeds, None, itkConfidenceConnectedImageFilterIF2IUS2)
itkConfidenceConnectedImageFilterIF2IUS2_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_swigregister
itkConfidenceConnectedImageFilterIF2IUS2_swigregister(itkConfidenceConnectedImageFilterIF2IUS2)

def itkConfidenceConnectedImageFilterIF2IUS2___New_orig__():
    """itkConfidenceConnectedImageFilterIF2IUS2___New_orig__() -> itkConfidenceConnectedImageFilterIF2IUS2_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2___New_orig__()

def itkConfidenceConnectedImageFilterIF2IUS2_cast(obj):
    """itkConfidenceConnectedImageFilterIF2IUS2_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIF2IUS2"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF2IUS2_cast(obj)

class itkConfidenceConnectedImageFilterIF3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIF3ISS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIF3ISS3 self) -> itkConfidenceConnectedImageFilterIF3ISS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIF3ISS3 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIF3ISS3 self, itkIndex3 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIF3ISS3 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIF3ISS3 self, itkIndex3 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIF3ISS3 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIF3ISS3 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIF3ISS3 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIF3ISS3 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIF3ISS3 self, short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIF3ISS3 self) -> short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIF3ISS3 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIF3ISS3 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIF3ISS3 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIF3ISS3 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIF3ISS3 self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIF3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIF3ISS3"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIF3ISS3

        Create a new object of the class itkConfidenceConnectedImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIF3ISS3.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_Clone, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_PrintSelf, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_SetSeed, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_ClearSeeds, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_AddSeed, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_SetMultiplier, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_GetMultiplier, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_SetReplaceValue, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_GetReplaceValue, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_GetMean, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_GetVariance, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_GetSeeds, None, itkConfidenceConnectedImageFilterIF3ISS3)
itkConfidenceConnectedImageFilterIF3ISS3_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_swigregister
itkConfidenceConnectedImageFilterIF3ISS3_swigregister(itkConfidenceConnectedImageFilterIF3ISS3)

def itkConfidenceConnectedImageFilterIF3ISS3___New_orig__():
    """itkConfidenceConnectedImageFilterIF3ISS3___New_orig__() -> itkConfidenceConnectedImageFilterIF3ISS3_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3___New_orig__()

def itkConfidenceConnectedImageFilterIF3ISS3_cast(obj):
    """itkConfidenceConnectedImageFilterIF3ISS3_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIF3ISS3"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3ISS3_cast(obj)

class itkConfidenceConnectedImageFilterIF3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIF3IUC3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIF3IUC3 self) -> itkConfidenceConnectedImageFilterIF3IUC3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIF3IUC3 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIF3IUC3 self, itkIndex3 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIF3IUC3 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIF3IUC3 self, itkIndex3 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIF3IUC3 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIF3IUC3 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIF3IUC3 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIF3IUC3 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIF3IUC3 self, unsigned char const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIF3IUC3 self) -> unsigned char"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIF3IUC3 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIF3IUC3 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIF3IUC3 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIF3IUC3 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIF3IUC3 self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIF3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIF3IUC3"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIF3IUC3

        Create a new object of the class itkConfidenceConnectedImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIF3IUC3.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_Clone, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_PrintSelf, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_SetSeed, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_ClearSeeds, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_AddSeed, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_SetMultiplier, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_GetMultiplier, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_SetReplaceValue, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_GetReplaceValue, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_GetMean, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_GetVariance, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_GetSeeds, None, itkConfidenceConnectedImageFilterIF3IUC3)
itkConfidenceConnectedImageFilterIF3IUC3_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_swigregister
itkConfidenceConnectedImageFilterIF3IUC3_swigregister(itkConfidenceConnectedImageFilterIF3IUC3)

def itkConfidenceConnectedImageFilterIF3IUC3___New_orig__():
    """itkConfidenceConnectedImageFilterIF3IUC3___New_orig__() -> itkConfidenceConnectedImageFilterIF3IUC3_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3___New_orig__()

def itkConfidenceConnectedImageFilterIF3IUC3_cast(obj):
    """itkConfidenceConnectedImageFilterIF3IUC3_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIF3IUC3"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUC3_cast(obj)

class itkConfidenceConnectedImageFilterIF3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIF3IUS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIF3IUS3 self) -> itkConfidenceConnectedImageFilterIF3IUS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIF3IUS3 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIF3IUS3 self, itkIndex3 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIF3IUS3 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIF3IUS3 self, itkIndex3 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIF3IUS3 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIF3IUS3 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIF3IUS3 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIF3IUS3 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIF3IUS3 self, unsigned short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIF3IUS3 self) -> unsigned short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIF3IUS3 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIF3IUS3 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIF3IUS3 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIF3IUS3 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIF3IUS3 self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIF3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIF3IUS3"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIF3IUS3

        Create a new object of the class itkConfidenceConnectedImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIF3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIF3IUS3.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_Clone, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_PrintSelf, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_SetSeed, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_ClearSeeds, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_AddSeed, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_SetMultiplier, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_GetMultiplier, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_SetReplaceValue, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_GetReplaceValue, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_GetMean, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_GetVariance, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_GetSeeds, None, itkConfidenceConnectedImageFilterIF3IUS3)
itkConfidenceConnectedImageFilterIF3IUS3_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_swigregister
itkConfidenceConnectedImageFilterIF3IUS3_swigregister(itkConfidenceConnectedImageFilterIF3IUS3)

def itkConfidenceConnectedImageFilterIF3IUS3___New_orig__():
    """itkConfidenceConnectedImageFilterIF3IUS3___New_orig__() -> itkConfidenceConnectedImageFilterIF3IUS3_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3___New_orig__()

def itkConfidenceConnectedImageFilterIF3IUS3_cast(obj):
    """itkConfidenceConnectedImageFilterIF3IUS3_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIF3IUS3"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIF3IUS3_cast(obj)

class itkConfidenceConnectedImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterISS2ISS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterISS2ISS2 self) -> itkConfidenceConnectedImageFilterISS2ISS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterISS2ISS2 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterISS2ISS2 self, itkIndex2 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterISS2ISS2 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterISS2ISS2 self, itkIndex2 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterISS2ISS2 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterISS2ISS2 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterISS2ISS2 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterISS2ISS2 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterISS2ISS2 self, short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterISS2ISS2 self) -> short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterISS2ISS2 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterISS2ISS2 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterISS2ISS2 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterISS2ISS2 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterISS2ISS2 self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterISS2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterISS2ISS2"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterISS2ISS2

        Create a new object of the class itkConfidenceConnectedImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterISS2ISS2.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_Clone, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_PrintSelf, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_SetSeed, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_ClearSeeds, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_AddSeed, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_SetMultiplier, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_GetMultiplier, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_SetReplaceValue, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_GetReplaceValue, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_GetMean, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_GetVariance, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_GetSeeds, None, itkConfidenceConnectedImageFilterISS2ISS2)
itkConfidenceConnectedImageFilterISS2ISS2_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_swigregister
itkConfidenceConnectedImageFilterISS2ISS2_swigregister(itkConfidenceConnectedImageFilterISS2ISS2)

def itkConfidenceConnectedImageFilterISS2ISS2___New_orig__():
    """itkConfidenceConnectedImageFilterISS2ISS2___New_orig__() -> itkConfidenceConnectedImageFilterISS2ISS2_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2___New_orig__()

def itkConfidenceConnectedImageFilterISS2ISS2_cast(obj):
    """itkConfidenceConnectedImageFilterISS2ISS2_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterISS2ISS2"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2ISS2_cast(obj)

class itkConfidenceConnectedImageFilterISS2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterISS2IUC2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterISS2IUC2 self) -> itkConfidenceConnectedImageFilterISS2IUC2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterISS2IUC2 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterISS2IUC2 self, itkIndex2 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterISS2IUC2 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterISS2IUC2 self, itkIndex2 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterISS2IUC2 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterISS2IUC2 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterISS2IUC2 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterISS2IUC2 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterISS2IUC2 self, unsigned char const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterISS2IUC2 self) -> unsigned char"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterISS2IUC2 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterISS2IUC2 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterISS2IUC2 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterISS2IUC2 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterISS2IUC2 self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterISS2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterISS2IUC2"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterISS2IUC2

        Create a new object of the class itkConfidenceConnectedImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterISS2IUC2.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_Clone, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_PrintSelf, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_SetSeed, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_ClearSeeds, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_AddSeed, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_SetMultiplier, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_GetMultiplier, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_SetReplaceValue, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_GetReplaceValue, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_GetMean, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_GetVariance, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_GetSeeds, None, itkConfidenceConnectedImageFilterISS2IUC2)
itkConfidenceConnectedImageFilterISS2IUC2_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_swigregister
itkConfidenceConnectedImageFilterISS2IUC2_swigregister(itkConfidenceConnectedImageFilterISS2IUC2)

def itkConfidenceConnectedImageFilterISS2IUC2___New_orig__():
    """itkConfidenceConnectedImageFilterISS2IUC2___New_orig__() -> itkConfidenceConnectedImageFilterISS2IUC2_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2___New_orig__()

def itkConfidenceConnectedImageFilterISS2IUC2_cast(obj):
    """itkConfidenceConnectedImageFilterISS2IUC2_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterISS2IUC2"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUC2_cast(obj)

class itkConfidenceConnectedImageFilterISS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterISS2IUS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterISS2IUS2 self) -> itkConfidenceConnectedImageFilterISS2IUS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterISS2IUS2 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterISS2IUS2 self, itkIndex2 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterISS2IUS2 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterISS2IUS2 self, itkIndex2 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterISS2IUS2 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterISS2IUS2 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterISS2IUS2 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterISS2IUS2 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterISS2IUS2 self, unsigned short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterISS2IUS2 self) -> unsigned short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterISS2IUS2 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterISS2IUS2 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterISS2IUS2 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterISS2IUS2 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterISS2IUS2 self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterISS2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterISS2IUS2"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterISS2IUS2

        Create a new object of the class itkConfidenceConnectedImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterISS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterISS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterISS2IUS2.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_Clone, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_PrintSelf, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_SetSeed, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_ClearSeeds, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_AddSeed, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_SetMultiplier, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_GetMultiplier, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_SetReplaceValue, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_GetReplaceValue, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_GetMean, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_GetVariance, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_GetSeeds, None, itkConfidenceConnectedImageFilterISS2IUS2)
itkConfidenceConnectedImageFilterISS2IUS2_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_swigregister
itkConfidenceConnectedImageFilterISS2IUS2_swigregister(itkConfidenceConnectedImageFilterISS2IUS2)

def itkConfidenceConnectedImageFilterISS2IUS2___New_orig__():
    """itkConfidenceConnectedImageFilterISS2IUS2___New_orig__() -> itkConfidenceConnectedImageFilterISS2IUS2_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2___New_orig__()

def itkConfidenceConnectedImageFilterISS2IUS2_cast(obj):
    """itkConfidenceConnectedImageFilterISS2IUS2_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterISS2IUS2"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS2IUS2_cast(obj)

class itkConfidenceConnectedImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterISS3ISS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterISS3ISS3 self) -> itkConfidenceConnectedImageFilterISS3ISS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterISS3ISS3 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterISS3ISS3 self, itkIndex3 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterISS3ISS3 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterISS3ISS3 self, itkIndex3 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterISS3ISS3 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterISS3ISS3 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterISS3ISS3 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterISS3ISS3 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterISS3ISS3 self, short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterISS3ISS3 self) -> short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterISS3ISS3 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterISS3ISS3 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterISS3ISS3 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterISS3ISS3 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterISS3ISS3 self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterISS3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterISS3ISS3"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterISS3ISS3

        Create a new object of the class itkConfidenceConnectedImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterISS3ISS3.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_Clone, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_PrintSelf, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_SetSeed, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_ClearSeeds, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_AddSeed, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_SetMultiplier, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_GetMultiplier, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_SetReplaceValue, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_GetReplaceValue, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_GetMean, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_GetVariance, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_GetSeeds, None, itkConfidenceConnectedImageFilterISS3ISS3)
itkConfidenceConnectedImageFilterISS3ISS3_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_swigregister
itkConfidenceConnectedImageFilterISS3ISS3_swigregister(itkConfidenceConnectedImageFilterISS3ISS3)

def itkConfidenceConnectedImageFilterISS3ISS3___New_orig__():
    """itkConfidenceConnectedImageFilterISS3ISS3___New_orig__() -> itkConfidenceConnectedImageFilterISS3ISS3_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3___New_orig__()

def itkConfidenceConnectedImageFilterISS3ISS3_cast(obj):
    """itkConfidenceConnectedImageFilterISS3ISS3_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterISS3ISS3"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3ISS3_cast(obj)

class itkConfidenceConnectedImageFilterISS3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterISS3IUC3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterISS3IUC3 self) -> itkConfidenceConnectedImageFilterISS3IUC3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterISS3IUC3 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterISS3IUC3 self, itkIndex3 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterISS3IUC3 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterISS3IUC3 self, itkIndex3 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterISS3IUC3 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterISS3IUC3 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterISS3IUC3 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterISS3IUC3 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterISS3IUC3 self, unsigned char const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterISS3IUC3 self) -> unsigned char"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterISS3IUC3 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterISS3IUC3 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterISS3IUC3 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterISS3IUC3 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterISS3IUC3 self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterISS3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterISS3IUC3"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterISS3IUC3

        Create a new object of the class itkConfidenceConnectedImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterISS3IUC3.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_Clone, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_PrintSelf, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_SetSeed, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_ClearSeeds, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_AddSeed, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_SetMultiplier, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_GetMultiplier, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_SetReplaceValue, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_GetReplaceValue, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_GetMean, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_GetVariance, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_GetSeeds, None, itkConfidenceConnectedImageFilterISS3IUC3)
itkConfidenceConnectedImageFilterISS3IUC3_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_swigregister
itkConfidenceConnectedImageFilterISS3IUC3_swigregister(itkConfidenceConnectedImageFilterISS3IUC3)

def itkConfidenceConnectedImageFilterISS3IUC3___New_orig__():
    """itkConfidenceConnectedImageFilterISS3IUC3___New_orig__() -> itkConfidenceConnectedImageFilterISS3IUC3_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3___New_orig__()

def itkConfidenceConnectedImageFilterISS3IUC3_cast(obj):
    """itkConfidenceConnectedImageFilterISS3IUC3_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterISS3IUC3"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUC3_cast(obj)

class itkConfidenceConnectedImageFilterISS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterISS3IUS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterISS3IUS3 self) -> itkConfidenceConnectedImageFilterISS3IUS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterISS3IUS3 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterISS3IUS3 self, itkIndex3 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterISS3IUS3 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterISS3IUS3 self, itkIndex3 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterISS3IUS3 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterISS3IUS3 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterISS3IUS3 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterISS3IUS3 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterISS3IUS3 self, unsigned short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterISS3IUS3 self) -> unsigned short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterISS3IUS3 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterISS3IUS3 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterISS3IUS3 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterISS3IUS3 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterISS3IUS3 self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterISS3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterISS3IUS3"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterISS3IUS3

        Create a new object of the class itkConfidenceConnectedImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterISS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterISS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterISS3IUS3.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_Clone, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_PrintSelf, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_SetSeed, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_ClearSeeds, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_AddSeed, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_SetMultiplier, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_GetMultiplier, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_SetReplaceValue, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_GetReplaceValue, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_GetMean, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_GetVariance, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_GetSeeds, None, itkConfidenceConnectedImageFilterISS3IUS3)
itkConfidenceConnectedImageFilterISS3IUS3_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_swigregister
itkConfidenceConnectedImageFilterISS3IUS3_swigregister(itkConfidenceConnectedImageFilterISS3IUS3)

def itkConfidenceConnectedImageFilterISS3IUS3___New_orig__():
    """itkConfidenceConnectedImageFilterISS3IUS3___New_orig__() -> itkConfidenceConnectedImageFilterISS3IUS3_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3___New_orig__()

def itkConfidenceConnectedImageFilterISS3IUS3_cast(obj):
    """itkConfidenceConnectedImageFilterISS3IUS3_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterISS3IUS3"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterISS3IUS3_cast(obj)

class itkConfidenceConnectedImageFilterIUC2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIUC2ISS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIUC2ISS2 self) -> itkConfidenceConnectedImageFilterIUC2ISS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIUC2ISS2 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIUC2ISS2 self, itkIndex2 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIUC2ISS2 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIUC2ISS2 self, itkIndex2 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIUC2ISS2 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIUC2ISS2 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIUC2ISS2 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIUC2ISS2 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIUC2ISS2 self, short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIUC2ISS2 self) -> short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUC2ISS2 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUC2ISS2 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIUC2ISS2 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIUC2ISS2 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIUC2ISS2 self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIUC2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUC2ISS2"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIUC2ISS2

        Create a new object of the class itkConfidenceConnectedImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIUC2ISS2.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_Clone, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_PrintSelf, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_SetSeed, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_ClearSeeds, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_AddSeed, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_SetMultiplier, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_GetMultiplier, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_SetReplaceValue, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_GetReplaceValue, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_GetMean, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_GetVariance, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_GetSeeds, None, itkConfidenceConnectedImageFilterIUC2ISS2)
itkConfidenceConnectedImageFilterIUC2ISS2_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_swigregister
itkConfidenceConnectedImageFilterIUC2ISS2_swigregister(itkConfidenceConnectedImageFilterIUC2ISS2)

def itkConfidenceConnectedImageFilterIUC2ISS2___New_orig__():
    """itkConfidenceConnectedImageFilterIUC2ISS2___New_orig__() -> itkConfidenceConnectedImageFilterIUC2ISS2_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2___New_orig__()

def itkConfidenceConnectedImageFilterIUC2ISS2_cast(obj):
    """itkConfidenceConnectedImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUC2ISS2"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2ISS2_cast(obj)

class itkConfidenceConnectedImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIUC2IUC2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIUC2IUC2 self) -> itkConfidenceConnectedImageFilterIUC2IUC2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIUC2IUC2 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIUC2IUC2 self, itkIndex2 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIUC2IUC2 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIUC2IUC2 self, itkIndex2 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIUC2IUC2 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIUC2IUC2 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIUC2IUC2 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIUC2IUC2 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIUC2IUC2 self, unsigned char const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUC2IUC2 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUC2IUC2 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIUC2IUC2 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIUC2IUC2 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIUC2IUC2 self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIUC2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUC2IUC2"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIUC2IUC2

        Create a new object of the class itkConfidenceConnectedImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIUC2IUC2.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_Clone, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_PrintSelf, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_SetSeed, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_ClearSeeds, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_AddSeed, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_SetMultiplier, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_GetMultiplier, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_SetReplaceValue, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_GetReplaceValue, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_GetMean, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_GetVariance, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_GetSeeds, None, itkConfidenceConnectedImageFilterIUC2IUC2)
itkConfidenceConnectedImageFilterIUC2IUC2_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_swigregister
itkConfidenceConnectedImageFilterIUC2IUC2_swigregister(itkConfidenceConnectedImageFilterIUC2IUC2)

def itkConfidenceConnectedImageFilterIUC2IUC2___New_orig__():
    """itkConfidenceConnectedImageFilterIUC2IUC2___New_orig__() -> itkConfidenceConnectedImageFilterIUC2IUC2_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2___New_orig__()

def itkConfidenceConnectedImageFilterIUC2IUC2_cast(obj):
    """itkConfidenceConnectedImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUC2IUC2"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUC2_cast(obj)

class itkConfidenceConnectedImageFilterIUC2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIUC2IUS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIUC2IUS2 self) -> itkConfidenceConnectedImageFilterIUC2IUS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIUC2IUS2 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIUC2IUS2 self, itkIndex2 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIUC2IUS2 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIUC2IUS2 self, itkIndex2 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIUC2IUS2 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIUC2IUS2 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIUC2IUS2 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIUC2IUS2 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIUC2IUS2 self, unsigned short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIUC2IUS2 self) -> unsigned short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUC2IUS2 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUC2IUS2 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIUC2IUS2 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIUC2IUS2 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIUC2IUS2 self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIUC2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUC2IUS2"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIUC2IUS2

        Create a new object of the class itkConfidenceConnectedImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIUC2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIUC2IUS2.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_Clone, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_PrintSelf, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_SetSeed, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_ClearSeeds, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_AddSeed, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_SetMultiplier, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_GetMultiplier, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_SetReplaceValue, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_GetReplaceValue, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_GetMean, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_GetVariance, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_GetSeeds, None, itkConfidenceConnectedImageFilterIUC2IUS2)
itkConfidenceConnectedImageFilterIUC2IUS2_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_swigregister
itkConfidenceConnectedImageFilterIUC2IUS2_swigregister(itkConfidenceConnectedImageFilterIUC2IUS2)

def itkConfidenceConnectedImageFilterIUC2IUS2___New_orig__():
    """itkConfidenceConnectedImageFilterIUC2IUS2___New_orig__() -> itkConfidenceConnectedImageFilterIUC2IUS2_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2___New_orig__()

def itkConfidenceConnectedImageFilterIUC2IUS2_cast(obj):
    """itkConfidenceConnectedImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUC2IUS2"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC2IUS2_cast(obj)

class itkConfidenceConnectedImageFilterIUC3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIUC3ISS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIUC3ISS3 self) -> itkConfidenceConnectedImageFilterIUC3ISS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIUC3ISS3 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIUC3ISS3 self, itkIndex3 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIUC3ISS3 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIUC3ISS3 self, itkIndex3 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIUC3ISS3 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIUC3ISS3 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIUC3ISS3 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIUC3ISS3 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIUC3ISS3 self, short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIUC3ISS3 self) -> short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUC3ISS3 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUC3ISS3 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIUC3ISS3 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIUC3ISS3 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIUC3ISS3 self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIUC3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUC3ISS3"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIUC3ISS3

        Create a new object of the class itkConfidenceConnectedImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIUC3ISS3.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_Clone, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_PrintSelf, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_SetSeed, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_ClearSeeds, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_AddSeed, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_SetMultiplier, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_GetMultiplier, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_SetReplaceValue, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_GetReplaceValue, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_GetMean, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_GetVariance, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_GetSeeds, None, itkConfidenceConnectedImageFilterIUC3ISS3)
itkConfidenceConnectedImageFilterIUC3ISS3_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_swigregister
itkConfidenceConnectedImageFilterIUC3ISS3_swigregister(itkConfidenceConnectedImageFilterIUC3ISS3)

def itkConfidenceConnectedImageFilterIUC3ISS3___New_orig__():
    """itkConfidenceConnectedImageFilterIUC3ISS3___New_orig__() -> itkConfidenceConnectedImageFilterIUC3ISS3_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3___New_orig__()

def itkConfidenceConnectedImageFilterIUC3ISS3_cast(obj):
    """itkConfidenceConnectedImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUC3ISS3"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3ISS3_cast(obj)

class itkConfidenceConnectedImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIUC3IUC3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIUC3IUC3 self) -> itkConfidenceConnectedImageFilterIUC3IUC3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIUC3IUC3 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIUC3IUC3 self, itkIndex3 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIUC3IUC3 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIUC3IUC3 self, itkIndex3 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIUC3IUC3 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIUC3IUC3 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIUC3IUC3 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIUC3IUC3 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIUC3IUC3 self, unsigned char const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUC3IUC3 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUC3IUC3 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIUC3IUC3 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIUC3IUC3 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIUC3IUC3 self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIUC3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUC3IUC3"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIUC3IUC3

        Create a new object of the class itkConfidenceConnectedImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIUC3IUC3.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_Clone, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_PrintSelf, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_SetSeed, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_ClearSeeds, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_AddSeed, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_SetMultiplier, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_GetMultiplier, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_SetReplaceValue, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_GetReplaceValue, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_GetMean, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_GetVariance, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_GetSeeds, None, itkConfidenceConnectedImageFilterIUC3IUC3)
itkConfidenceConnectedImageFilterIUC3IUC3_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_swigregister
itkConfidenceConnectedImageFilterIUC3IUC3_swigregister(itkConfidenceConnectedImageFilterIUC3IUC3)

def itkConfidenceConnectedImageFilterIUC3IUC3___New_orig__():
    """itkConfidenceConnectedImageFilterIUC3IUC3___New_orig__() -> itkConfidenceConnectedImageFilterIUC3IUC3_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3___New_orig__()

def itkConfidenceConnectedImageFilterIUC3IUC3_cast(obj):
    """itkConfidenceConnectedImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUC3IUC3"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUC3_cast(obj)

class itkConfidenceConnectedImageFilterIUC3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIUC3IUS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIUC3IUS3 self) -> itkConfidenceConnectedImageFilterIUC3IUS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIUC3IUS3 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIUC3IUS3 self, itkIndex3 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIUC3IUS3 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIUC3IUS3 self, itkIndex3 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIUC3IUS3 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIUC3IUS3 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIUC3IUS3 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIUC3IUS3 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIUC3IUS3 self, unsigned short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIUC3IUS3 self) -> unsigned short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUC3IUS3 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUC3IUS3 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIUC3IUS3 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIUC3IUS3 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIUC3IUS3 self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIUC3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUC3IUS3"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIUC3IUS3

        Create a new object of the class itkConfidenceConnectedImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIUC3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIUC3IUS3.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_Clone, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_PrintSelf, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_SetSeed, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_ClearSeeds, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_AddSeed, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_SetMultiplier, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_GetMultiplier, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_SetReplaceValue, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_GetReplaceValue, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_GetMean, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_GetVariance, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_GetSeeds, None, itkConfidenceConnectedImageFilterIUC3IUS3)
itkConfidenceConnectedImageFilterIUC3IUS3_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_swigregister
itkConfidenceConnectedImageFilterIUC3IUS3_swigregister(itkConfidenceConnectedImageFilterIUC3IUS3)

def itkConfidenceConnectedImageFilterIUC3IUS3___New_orig__():
    """itkConfidenceConnectedImageFilterIUC3IUS3___New_orig__() -> itkConfidenceConnectedImageFilterIUC3IUS3_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3___New_orig__()

def itkConfidenceConnectedImageFilterIUC3IUS3_cast(obj):
    """itkConfidenceConnectedImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUC3IUS3"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUC3IUS3_cast(obj)

class itkConfidenceConnectedImageFilterIUS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIUS2ISS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIUS2ISS2 self) -> itkConfidenceConnectedImageFilterIUS2ISS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIUS2ISS2 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIUS2ISS2 self, itkIndex2 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIUS2ISS2 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIUS2ISS2 self, itkIndex2 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIUS2ISS2 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIUS2ISS2 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIUS2ISS2 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIUS2ISS2 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIUS2ISS2 self, short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIUS2ISS2 self) -> short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUS2ISS2 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUS2ISS2 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIUS2ISS2 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIUS2ISS2 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIUS2ISS2 self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIUS2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUS2ISS2"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIUS2ISS2

        Create a new object of the class itkConfidenceConnectedImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIUS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIUS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIUS2ISS2.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_Clone, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_PrintSelf, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_SetSeed, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_ClearSeeds, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_AddSeed, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_SetMultiplier, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_GetMultiplier, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_SetReplaceValue, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_GetReplaceValue, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_GetMean, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_GetVariance, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_GetSeeds, None, itkConfidenceConnectedImageFilterIUS2ISS2)
itkConfidenceConnectedImageFilterIUS2ISS2_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_swigregister
itkConfidenceConnectedImageFilterIUS2ISS2_swigregister(itkConfidenceConnectedImageFilterIUS2ISS2)

def itkConfidenceConnectedImageFilterIUS2ISS2___New_orig__():
    """itkConfidenceConnectedImageFilterIUS2ISS2___New_orig__() -> itkConfidenceConnectedImageFilterIUS2ISS2_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2___New_orig__()

def itkConfidenceConnectedImageFilterIUS2ISS2_cast(obj):
    """itkConfidenceConnectedImageFilterIUS2ISS2_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUS2ISS2"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2ISS2_cast(obj)

class itkConfidenceConnectedImageFilterIUS2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIUS2IUC2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIUS2IUC2 self) -> itkConfidenceConnectedImageFilterIUS2IUC2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIUS2IUC2 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIUS2IUC2 self, itkIndex2 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIUS2IUC2 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIUS2IUC2 self, itkIndex2 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIUS2IUC2 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIUS2IUC2 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIUS2IUC2 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIUS2IUC2 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIUS2IUC2 self, unsigned char const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIUS2IUC2 self) -> unsigned char"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUS2IUC2 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUS2IUC2 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIUS2IUC2 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIUS2IUC2 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIUS2IUC2 self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIUS2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUS2IUC2"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIUS2IUC2

        Create a new object of the class itkConfidenceConnectedImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIUS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIUS2IUC2.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_Clone, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_PrintSelf, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_SetSeed, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_ClearSeeds, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_AddSeed, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_SetMultiplier, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_GetMultiplier, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_SetReplaceValue, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_GetReplaceValue, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_GetMean, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_GetVariance, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_GetSeeds, None, itkConfidenceConnectedImageFilterIUS2IUC2)
itkConfidenceConnectedImageFilterIUS2IUC2_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_swigregister
itkConfidenceConnectedImageFilterIUS2IUC2_swigregister(itkConfidenceConnectedImageFilterIUS2IUC2)

def itkConfidenceConnectedImageFilterIUS2IUC2___New_orig__():
    """itkConfidenceConnectedImageFilterIUS2IUC2___New_orig__() -> itkConfidenceConnectedImageFilterIUS2IUC2_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2___New_orig__()

def itkConfidenceConnectedImageFilterIUS2IUC2_cast(obj):
    """itkConfidenceConnectedImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUS2IUC2"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUC2_cast(obj)

class itkConfidenceConnectedImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIUS2IUS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIUS2IUS2 self) -> itkConfidenceConnectedImageFilterIUS2IUS2_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIUS2IUS2 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIUS2IUS2 self, itkIndex2 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIUS2IUS2 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIUS2IUS2 self, itkIndex2 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIUS2IUS2 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIUS2IUS2 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIUS2IUS2 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIUS2IUS2 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIUS2IUS2 self, unsigned short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIUS2IUS2 self) -> unsigned short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUS2IUS2 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUS2IUS2 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIUS2IUS2 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIUS2IUS2 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIUS2IUS2 self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIUS2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUS2IUS2"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIUS2IUS2

        Create a new object of the class itkConfidenceConnectedImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIUS2IUS2.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_Clone, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_PrintSelf, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_SetSeed, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_ClearSeeds, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_AddSeed, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_SetMultiplier, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_GetMultiplier, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_SetReplaceValue, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_GetReplaceValue, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_GetMean, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_GetVariance, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_GetSeeds, None, itkConfidenceConnectedImageFilterIUS2IUS2)
itkConfidenceConnectedImageFilterIUS2IUS2_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_swigregister
itkConfidenceConnectedImageFilterIUS2IUS2_swigregister(itkConfidenceConnectedImageFilterIUS2IUS2)

def itkConfidenceConnectedImageFilterIUS2IUS2___New_orig__():
    """itkConfidenceConnectedImageFilterIUS2IUS2___New_orig__() -> itkConfidenceConnectedImageFilterIUS2IUS2_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2___New_orig__()

def itkConfidenceConnectedImageFilterIUS2IUS2_cast(obj):
    """itkConfidenceConnectedImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUS2IUS2"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS2IUS2_cast(obj)

class itkConfidenceConnectedImageFilterIUS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIUS3ISS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIUS3ISS3 self) -> itkConfidenceConnectedImageFilterIUS3ISS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIUS3ISS3 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIUS3ISS3 self, itkIndex3 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIUS3ISS3 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIUS3ISS3 self, itkIndex3 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIUS3ISS3 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIUS3ISS3 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIUS3ISS3 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIUS3ISS3 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIUS3ISS3 self, short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIUS3ISS3 self) -> short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUS3ISS3 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUS3ISS3 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIUS3ISS3 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIUS3ISS3 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIUS3ISS3 self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIUS3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUS3ISS3"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIUS3ISS3

        Create a new object of the class itkConfidenceConnectedImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIUS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIUS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIUS3ISS3.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_Clone, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_PrintSelf, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_SetSeed, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_ClearSeeds, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_AddSeed, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_SetMultiplier, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_GetMultiplier, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_SetReplaceValue, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_GetReplaceValue, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_GetMean, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_GetVariance, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_GetSeeds, None, itkConfidenceConnectedImageFilterIUS3ISS3)
itkConfidenceConnectedImageFilterIUS3ISS3_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_swigregister
itkConfidenceConnectedImageFilterIUS3ISS3_swigregister(itkConfidenceConnectedImageFilterIUS3ISS3)

def itkConfidenceConnectedImageFilterIUS3ISS3___New_orig__():
    """itkConfidenceConnectedImageFilterIUS3ISS3___New_orig__() -> itkConfidenceConnectedImageFilterIUS3ISS3_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3___New_orig__()

def itkConfidenceConnectedImageFilterIUS3ISS3_cast(obj):
    """itkConfidenceConnectedImageFilterIUS3ISS3_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUS3ISS3"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3ISS3_cast(obj)

class itkConfidenceConnectedImageFilterIUS3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIUS3IUC3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIUS3IUC3 self) -> itkConfidenceConnectedImageFilterIUS3IUC3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIUS3IUC3 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIUS3IUC3 self, itkIndex3 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIUS3IUC3 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIUS3IUC3 self, itkIndex3 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIUS3IUC3 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIUS3IUC3 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIUS3IUC3 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIUS3IUC3 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIUS3IUC3 self, unsigned char const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIUS3IUC3 self) -> unsigned char"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUS3IUC3 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUS3IUC3 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIUS3IUC3 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIUS3IUC3 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIUS3IUC3 self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIUS3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUS3IUC3"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIUS3IUC3

        Create a new object of the class itkConfidenceConnectedImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIUS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIUS3IUC3.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_Clone, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_PrintSelf, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_SetSeed, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_ClearSeeds, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_AddSeed, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_SetMultiplier, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_GetMultiplier, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_SetReplaceValue, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_GetReplaceValue, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_GetMean, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_GetVariance, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_GetSeeds, None, itkConfidenceConnectedImageFilterIUS3IUC3)
itkConfidenceConnectedImageFilterIUS3IUC3_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_swigregister
itkConfidenceConnectedImageFilterIUS3IUC3_swigregister(itkConfidenceConnectedImageFilterIUS3IUC3)

def itkConfidenceConnectedImageFilterIUS3IUC3___New_orig__():
    """itkConfidenceConnectedImageFilterIUS3IUC3___New_orig__() -> itkConfidenceConnectedImageFilterIUS3IUC3_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3___New_orig__()

def itkConfidenceConnectedImageFilterIUS3IUC3_cast(obj):
    """itkConfidenceConnectedImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUS3IUC3"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUC3_cast(obj)

class itkConfidenceConnectedImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """


    Segment pixels with similar statistics using connectivity.

    This filter extracts a connected set of pixels whose pixel intensities
    are consistent with the pixel statistics of a seed point. The mean and
    variance across a neighborhood (8-connected, 26-connected, etc.) are
    calculated for a seed point. Then pixels connected to this seed point
    whose values are within the confidence interval for the seed point are
    grouped. The width of the confidence interval is controlled by the
    "Multiplier" variable (the confidence interval is the mean plus or
    minus the "Multiplier" times the standard deviation). If the
    intensity variations across a segment were gaussian, a "Multiplier"
    setting of 2.5 would define a confidence interval wide enough to
    capture 99% of samples in the segment.

    After this initial segmentation is calculated, the mean and variance
    are re-calculated. All the pixels in the previous segmentation are
    used to calculate the mean the standard deviation (as opposed to using
    the pixels in the neighborhood of the seed point). The segmentation is
    then recalculated using these refined estimates for the mean and
    variance of the pixel values. This process is repeated for the
    specified number of iterations. Setting the "NumberOfIterations" to
    zero stops the algorithm after the initial segmentation from the seed
    point.

    NOTE: the lower and upper threshold are restricted to lie within the
    valid numeric limits of the input data pixel type. Also, the limits
    may be adjusted to contain the seed point's intensity.

    Wiki Examples:

    All Examples

    C++ includes: itkConfidenceConnectedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkConfidenceConnectedImageFilterIUS3IUS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkConfidenceConnectedImageFilterIUS3IUS3 self) -> itkConfidenceConnectedImageFilterIUS3IUS3_Pointer"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_Clone(self)


    def PrintSelf(self, os, indent):
        """PrintSelf(itkConfidenceConnectedImageFilterIUS3IUS3 self, ostream os, itkIndent indent)"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_PrintSelf(self, os, indent)


    def SetSeed(self, seed):
        """
        SetSeed(itkConfidenceConnectedImageFilterIUS3IUS3 self, itkIndex3 seed)

        Set seed point. This method
        is deprecated, please use AddSeed() 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_SetSeed(self, seed)


    def ClearSeeds(self):
        """
        ClearSeeds(itkConfidenceConnectedImageFilterIUS3IUS3 self)

        Clear all the seeds. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_ClearSeeds(self)


    def AddSeed(self, seed):
        """
        AddSeed(itkConfidenceConnectedImageFilterIUS3IUS3 self, itkIndex3 seed)

        Add seed point. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_AddSeed(self, seed)


    def SetMultiplier(self, _arg):
        """
        SetMultiplier(itkConfidenceConnectedImageFilterIUS3IUS3 self, double const _arg)

        Set/Get the
        multiplier to define the confidence interval. Multiplier can be
        anything greater than zero. A typical value is 2.5 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_SetMultiplier(self, _arg)


    def GetMultiplier(self):
        """GetMultiplier(itkConfidenceConnectedImageFilterIUS3IUS3 self) -> double"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_GetMultiplier(self)


    def SetNumberOfIterations(self, _arg):
        """
        SetNumberOfIterations(itkConfidenceConnectedImageFilterIUS3IUS3 self, unsigned int const _arg)

        Set/Get the
        number of iterations 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self):
        """GetNumberOfIterations(itkConfidenceConnectedImageFilterIUS3IUS3 self) -> unsigned int"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_GetNumberOfIterations(self)


    def SetReplaceValue(self, _arg):
        """
        SetReplaceValue(itkConfidenceConnectedImageFilterIUS3IUS3 self, unsigned short const _arg)

        Set/Get value to
        replace thresholded pixels 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_SetReplaceValue(self, _arg)


    def GetReplaceValue(self):
        """GetReplaceValue(itkConfidenceConnectedImageFilterIUS3IUS3 self) -> unsigned short"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_GetReplaceValue(self)


    def SetInitialNeighborhoodRadius(self, _arg):
        """
        SetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUS3IUS3 self, unsigned int const _arg)

        Get/Set the radius of the neighborhood over which the statistics are
        evaluated 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_SetInitialNeighborhoodRadius(self, _arg)


    def GetInitialNeighborhoodRadius(self):
        """GetInitialNeighborhoodRadius(itkConfidenceConnectedImageFilterIUS3IUS3 self) -> unsigned int const &"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_GetInitialNeighborhoodRadius(self)


    def GetMean(self):
        """
        GetMean(itkConfidenceConnectedImageFilterIUS3IUS3 self) -> double const &

        Method to get access to the
        mean of the pixels accepted in the output region. This method should
        only be invoked after the filter has been executed using the Update()
        method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_GetMean(self)


    def GetVariance(self):
        """
        GetVariance(itkConfidenceConnectedImageFilterIUS3IUS3 self) -> double const &

        Method to get access to
        the variance of the pixels accepted in the output region. This method
        should only be invoked after the filter has been executed using the
        Update() method. 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_GetVariance(self)


    def GetSeeds(self):
        """
        GetSeeds(itkConfidenceConnectedImageFilterIUS3IUS3 self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        Method to access seed
        container 
        """
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_GetSeeds(self)

    InputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkConfidenceConnectedImageFilterPython.delete_itkConfidenceConnectedImageFilterIUS3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUS3IUS3"""
        return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConfidenceConnectedImageFilterIUS3IUS3

        Create a new object of the class itkConfidenceConnectedImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConfidenceConnectedImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConfidenceConnectedImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConfidenceConnectedImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConfidenceConnectedImageFilterIUS3IUS3.Clone = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_Clone, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.PrintSelf = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_PrintSelf, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.SetSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_SetSeed, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.ClearSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_ClearSeeds, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.AddSeed = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_AddSeed, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.SetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_SetMultiplier, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.GetMultiplier = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_GetMultiplier, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.SetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_SetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.GetNumberOfIterations = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_GetNumberOfIterations, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.SetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_SetReplaceValue, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.GetReplaceValue = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_GetReplaceValue, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.SetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_SetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.GetInitialNeighborhoodRadius = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_GetInitialNeighborhoodRadius, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.GetMean = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_GetMean, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.GetVariance = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_GetVariance, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3.GetSeeds = new_instancemethod(_itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_GetSeeds, None, itkConfidenceConnectedImageFilterIUS3IUS3)
itkConfidenceConnectedImageFilterIUS3IUS3_swigregister = _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_swigregister
itkConfidenceConnectedImageFilterIUS3IUS3_swigregister(itkConfidenceConnectedImageFilterIUS3IUS3)

def itkConfidenceConnectedImageFilterIUS3IUS3___New_orig__():
    """itkConfidenceConnectedImageFilterIUS3IUS3___New_orig__() -> itkConfidenceConnectedImageFilterIUS3IUS3_Pointer"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3___New_orig__()

def itkConfidenceConnectedImageFilterIUS3IUS3_cast(obj):
    """itkConfidenceConnectedImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkConfidenceConnectedImageFilterIUS3IUS3"""
    return _itkConfidenceConnectedImageFilterPython.itkConfidenceConnectedImageFilterIUS3IUS3_cast(obj)


def confidence_connected_image_filter(*args, **kwargs):
    """Procedural interface for ConfidenceConnectedImageFilter"""
    import itk
    instance = itk.ConfidenceConnectedImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def confidence_connected_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ConfidenceConnectedImageFilter, itkTemplate.itkTemplate):
        confidence_connected_image_filter.__doc__ = itk.ConfidenceConnectedImageFilter.values()[0].__doc__
    else:
        confidence_connected_image_filter.__doc__ = itk.ConfidenceConnectedImageFilter.__doc__




