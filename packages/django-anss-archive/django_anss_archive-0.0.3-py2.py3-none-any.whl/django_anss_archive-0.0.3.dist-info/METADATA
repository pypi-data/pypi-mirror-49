Metadata-Version: 2.1
Name: django-anss-archive
Version: 0.0.3
Summary: A Django application to archive real-time earthquake notifications from the USGS's Advanced National Seismic System
Home-page: http://www.github.com/datadesk/django-anss-archive
Author: Los Angeles Times Data Desk
Author-email: datadesk@latimes.com
License: MIT
Project-URL: Maintainer, https://github.com/datadesk
Project-URL: Source, https://github.com/datadesk/django-anss-archive
Project-URL: Tracker, https://github.com/datadesk/django-anss-archive/issues
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: License :: OSI Approved :: MIT License
Requires-Dist: requests

django-anss-archive
===================

A Django application to archive real-time earthquake notifications from the `U.S. Geological Survey's Advanced National Seismic System <https://earthquake.usgs.gov/earthquakes/feed/>`_


Requirements
------------

* The Django web framework
* A geospatial database like PostGIS


Getting started
---------------

Install the Python package.

::

    $ pipenv install django-anss-archive

Add to Django's INSTALLED_APPS. ::

    INSTALLED_APPS = (
        ...
        "anss",
    )

Run migrations to create database tables. ::

    $ python manage.py migrate

Run the archive command to save all earthquakes in the latest hour greater than 1.0 magnitude. ::

    $ python manage.py getlatestanssfeed

Start your test server and visit the admin to see the results. ::

    $ python manage.py runserver

It includes a list of all the earthquakes.

.. image:: https://raw.githubusercontent.com/datadesk/django-anss-archive/master/img/list.png

And lots of data about each one.

.. image:: https://raw.githubusercontent.com/datadesk/django-anss-archive/master/img/detail.png


Contributing
------------

Install dependencies for development. ::

    $ pipenv install --dev

Run tests. ::

    $ make test

Ship new version to PyPI. ::

    $ make ship


