list
****


Description
===========

List all the cluster objects in a compartment.


Usage
=====

   oci ce cluster list [OPTIONS]


Options
=======


--compartment-id, -c [text]
---------------------------

The OCID of the compartment. [required]


--lifecycle-state [CREATING|ACTIVE|FAILED|DELETING|DELETED|UPDATING]
--------------------------------------------------------------------

A cluster lifecycle state to filter on. Can have multiple parameters
of this name.


--name [text]
-------------

The name to filter on.


--limit [integer]
-----------------

For list pagination. The maximum number of results per page, or items
to return in a paginated "List" call. 1 is the minimum, 1000 is the
maximum. For important details about how pagination works, see List
Pagination.


--page [text]
-------------

For list pagination. The value of the *opc-next-page* response header
from the previous "List" call. For important details about how
pagination works, see List Pagination.


--sort-order [ASC|DESC]
-----------------------

The optional order in which to sort the results.


--sort-by [ID|NAME|TIME_CREATED]
--------------------------------

The optional field to sort the results by.


--all
-----

Fetches all pages of results. If you provide this option, then you
cannot provide the --limit option.


--page-size [integer]
---------------------

When fetching results, the number of results to fetch per call. Only
valid when used with --all or --limit, and ignored otherwise.


--from-json [text]
------------------

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The --generate-full-command-json-input option can be used to generate
a sample json file to be used with this command option. The key names
are pre-populated and match the command option names (converted to
camelCase format, e.g. compartment-id --> compartmentId), while the
values of the keys need to be populated by the user before using the
sample file as an input to this command. For any command option that
accepts multiple values, the value of the key can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions


-?, -h, --help
--------------

For detailed help on any of these individual commands, enter <command>
--help.
