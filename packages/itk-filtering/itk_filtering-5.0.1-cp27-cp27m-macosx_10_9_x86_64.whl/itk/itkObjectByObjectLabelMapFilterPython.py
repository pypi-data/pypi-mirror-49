# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkObjectByObjectLabelMapFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkObjectByObjectLabelMapFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkObjectByObjectLabelMapFilterPython
            return _itkObjectByObjectLabelMapFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkObjectByObjectLabelMapFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkObjectByObjectLabelMapFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkObjectByObjectLabelMapFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageSourcePython
import itkImagePython
import stdcomplexPython
import pyBasePython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import ITKCommonBasePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
import itkImageToImageFilterCommonPython
import itkLabelMapFilterPython
import itkStatisticsLabelObjectPython
import itkAffineTransformPython
import itkTransformBasePython
import itkDiffusionTensor3DPython
import itkOptimizerParametersPython
import itkArrayPython
import itkArray2DPython
import itkMatrixOffsetTransformBasePython
import itkHistogramPython
import itkSamplePython
import itkShapeLabelObjectPython
import itkLabelObjectPython
import itkLabelObjectLinePython
import ITKLabelMapBasePython

def itkObjectByObjectLabelMapFilterLM3_New():
  return itkObjectByObjectLabelMapFilterLM3.New()


def itkObjectByObjectLabelMapFilterLM2_New():
  return itkObjectByObjectLabelMapFilterLM2.New()

class itkObjectByObjectLabelMapFilterLM2(itkLabelMapFilterPython.itkLabelMapFilterLM2LM2):
    """


    ObjectByObjectLabelMapFilter applies an image pipeline to all the
    objects of a label map and produce a new label map.

    The image pipeline can simply produce a modified object or produce
    several objects from the single input object. Several options are
    provided to handle the different cases.

    KeepLabel, which defaults to true, makes the filter try to keep as
    much as possible the labels of the original objects. If an image
    pipeline produce several objects the label of the input object is
    assigned to the first output object. The other output objects get
    another label not present in the input image. When KeepLabel is set to
    false, all the objects are relabeled in the order of apparition during
    the filter process.

    BinaryInternalOutput can be set to true if the image pipeline produce
    binary output image. In that case, the objects produced are identified
    with a connected component algorithm before being reinserted in the
    output label map. InternalForegroundValue can be set to a specific
    value which represent the foreground value in the binary image.

    PadSize and ConstrainPaddingToImage can be used to extend the size of
    the image to process passed to the image pipeline. This is useful if
    the image pipeline is known to be able to enlarge the object. The
    padding can be constrained to the input label map region by setting
    ConstrainPaddingToImage to true - this parameter can make a difference
    for the algorithm with a different behavior on the border of the
    image. By default, the image is padded by 1 pixel and constrained to
    the image region.

    : When applying a single filter, input and output filters are the
    same; while applying a pipeline, input and output filters are
    different, may not even be of the same type. It is the responsibility
    of the user to connect the pipeline properly outside of this filter.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/1926/584 orhttp://www
    .insight-journal.org/browse/publication/176

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ObjectByObjectLa
    belMapFilter Apply an operation to every label object in a label map

    C++ includes: itkObjectByObjectLabelMapFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkObjectByObjectLabelMapFilterLM2_Pointer"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkObjectByObjectLabelMapFilterLM2 self) -> itkObjectByObjectLabelMapFilterLM2_Pointer"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_Clone(self)


    def SetFilter(self, filter):
        """SetFilter(itkObjectByObjectLabelMapFilterLM2 self, itkImageToImageFilterIUC2IUC2 filter)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetFilter(self, filter)


    def GetFilter(self, *args):
        """
        GetFilter(itkObjectByObjectLabelMapFilterLM2 self) -> itkImageToImageFilterIUC2IUC2
        GetFilter(itkObjectByObjectLabelMapFilterLM2 self) -> itkImageToImageFilterIUC2IUC2
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetFilter(self, *args)


    def SetInputFilter(self, filter):
        """SetInputFilter(itkObjectByObjectLabelMapFilterLM2 self, itkImageToImageFilterIUC2IUC2 filter)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetInputFilter(self, filter)


    def GetModifiableInputFilter(self):
        """GetModifiableInputFilter(itkObjectByObjectLabelMapFilterLM2 self) -> itkImageToImageFilterIUC2IUC2"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetModifiableInputFilter(self)


    def GetInputFilter(self, *args):
        """
        GetInputFilter(itkObjectByObjectLabelMapFilterLM2 self) -> itkImageToImageFilterIUC2IUC2
        GetInputFilter(itkObjectByObjectLabelMapFilterLM2 self) -> itkImageToImageFilterIUC2IUC2
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetInputFilter(self, *args)


    def SetOutputFilter(self, filter):
        """SetOutputFilter(itkObjectByObjectLabelMapFilterLM2 self, itkImageSourceIUC2 filter)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetOutputFilter(self, filter)


    def GetModifiableOutputFilter(self):
        """GetModifiableOutputFilter(itkObjectByObjectLabelMapFilterLM2 self) -> itkImageSourceIUC2"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetModifiableOutputFilter(self)


    def GetOutputFilter(self, *args):
        """
        GetOutputFilter(itkObjectByObjectLabelMapFilterLM2 self) -> itkImageSourceIUC2
        GetOutputFilter(itkObjectByObjectLabelMapFilterLM2 self) -> itkImageSourceIUC2
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetOutputFilter(self, *args)


    def SetKeepLabels(self, _arg):
        """
        SetKeepLabels(itkObjectByObjectLabelMapFilterLM2 self, bool const _arg)

        If KeepLabels is set
        to true, the filter will do its best to reuse the labels of the input
        objects in the output ones. However, this is possible only if the
        internal pipeline produce a single object - the other labels will be
        taken as they come. If KeepLabels is false, no care is made of the
        input labels, and a new label is produced for all the objects using
        LabelMap::PushLabelObject(). 
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetKeepLabels(self, _arg)


    def GetKeepLabels(self):
        """GetKeepLabels(itkObjectByObjectLabelMapFilterLM2 self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetKeepLabels(self)


    def KeepLabelsOn(self):
        """KeepLabelsOn(itkObjectByObjectLabelMapFilterLM2 self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_KeepLabelsOn(self)


    def KeepLabelsOff(self):
        """KeepLabelsOff(itkObjectByObjectLabelMapFilterLM2 self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_KeepLabelsOff(self)


    def SetPadSize(self, _arg):
        """
        SetPadSize(itkObjectByObjectLabelMapFilterLM2 self, itkSize2 _arg)

        If PadSize is not zero,
        the image produce for each object will be padded. The default value is
        1 on all the dimensions. 
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetPadSize(self, _arg)


    def GetPadSize(self):
        """GetPadSize(itkObjectByObjectLabelMapFilterLM2 self) -> itkSize2"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetPadSize(self)


    def SetConstrainPaddingToImage(self, _arg):
        """
        SetConstrainPaddingToImage(itkObjectByObjectLabelMapFilterLM2 self, bool const _arg)

        Padding
        by PadSize will be constrained to the input image region if
        ConstrainPaddingToImage is true, and won't be constrained if it is set
        to false. Default value is true. 
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetConstrainPaddingToImage(self, _arg)


    def GetConstrainPaddingToImage(self):
        """GetConstrainPaddingToImage(itkObjectByObjectLabelMapFilterLM2 self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetConstrainPaddingToImage(self)


    def ConstrainPaddingToImageOn(self):
        """ConstrainPaddingToImageOn(itkObjectByObjectLabelMapFilterLM2 self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_ConstrainPaddingToImageOn(self)


    def ConstrainPaddingToImageOff(self):
        """ConstrainPaddingToImageOff(itkObjectByObjectLabelMapFilterLM2 self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_ConstrainPaddingToImageOff(self)


    def SetBinaryInternalOutput(self, _arg):
        """
        SetBinaryInternalOutput(itkObjectByObjectLabelMapFilterLM2 self, bool const _arg)

        Set/Get
        whether the internal image produced by OutputFilter should be
        interpreted as a binary image in which the filter have to search for
        connected components. If set to false, the filter consider the image
        as a label image. Default is false. 
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetBinaryInternalOutput(self, _arg)


    def GetBinaryInternalOutput(self):
        """GetBinaryInternalOutput(itkObjectByObjectLabelMapFilterLM2 self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetBinaryInternalOutput(self)


    def BinaryInternalOutputOn(self):
        """BinaryInternalOutputOn(itkObjectByObjectLabelMapFilterLM2 self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_BinaryInternalOutputOn(self)


    def BinaryInternalOutputOff(self):
        """BinaryInternalOutputOff(itkObjectByObjectLabelMapFilterLM2 self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_BinaryInternalOutputOff(self)


    def SetInternalForegroundValue(self, _arg):
        """
        SetInternalForegroundValue(itkObjectByObjectLabelMapFilterLM2 self, unsigned char const _arg)

        The
        foreground value used internally to represent the object in the image
        passed to InputFilter, and to read the data produced by OutputFilter,
        if BinaryInternalOutput is true 
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetInternalForegroundValue(self, _arg)


    def GetInternalForegroundValue(self):
        """GetInternalForegroundValue(itkObjectByObjectLabelMapFilterLM2 self) -> unsigned char"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetInternalForegroundValue(self)


    def GetLabel(self):
        """
        GetLabel(itkObjectByObjectLabelMapFilterLM2 self) -> unsigned long

        The label of the object
        currently processed by the filter. This is intended to be used with
        the IterationEvent sent before the processing of each object. It
        contains a relevant value only during the filter update. 
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetLabel(self)

    __swig_destroy__ = _itkObjectByObjectLabelMapFilterPython.delete_itkObjectByObjectLabelMapFilterLM2

    def cast(obj):
        """cast(itkLightObject obj) -> itkObjectByObjectLabelMapFilterLM2"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkObjectByObjectLabelMapFilterLM2

        Create a new object of the class itkObjectByObjectLabelMapFilterLM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkObjectByObjectLabelMapFilterLM2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkObjectByObjectLabelMapFilterLM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkObjectByObjectLabelMapFilterLM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkObjectByObjectLabelMapFilterLM2.Clone = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_Clone, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.SetFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetFilter, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.GetFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetFilter, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.SetInputFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetInputFilter, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.GetModifiableInputFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetModifiableInputFilter, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.GetInputFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetInputFilter, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.SetOutputFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetOutputFilter, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.GetModifiableOutputFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetModifiableOutputFilter, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.GetOutputFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetOutputFilter, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.SetKeepLabels = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetKeepLabels, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.GetKeepLabels = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetKeepLabels, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.KeepLabelsOn = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_KeepLabelsOn, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.KeepLabelsOff = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_KeepLabelsOff, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.SetPadSize = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetPadSize, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.GetPadSize = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetPadSize, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.SetConstrainPaddingToImage = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetConstrainPaddingToImage, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.GetConstrainPaddingToImage = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetConstrainPaddingToImage, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.ConstrainPaddingToImageOn = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_ConstrainPaddingToImageOn, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.ConstrainPaddingToImageOff = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_ConstrainPaddingToImageOff, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.SetBinaryInternalOutput = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetBinaryInternalOutput, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.GetBinaryInternalOutput = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetBinaryInternalOutput, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.BinaryInternalOutputOn = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_BinaryInternalOutputOn, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.BinaryInternalOutputOff = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_BinaryInternalOutputOff, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.SetInternalForegroundValue = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetInternalForegroundValue, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.GetInternalForegroundValue = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetInternalForegroundValue, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2.GetLabel = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetLabel, None, itkObjectByObjectLabelMapFilterLM2)
itkObjectByObjectLabelMapFilterLM2_swigregister = _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_swigregister
itkObjectByObjectLabelMapFilterLM2_swigregister(itkObjectByObjectLabelMapFilterLM2)

def itkObjectByObjectLabelMapFilterLM2___New_orig__():
    """itkObjectByObjectLabelMapFilterLM2___New_orig__() -> itkObjectByObjectLabelMapFilterLM2_Pointer"""
    return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2___New_orig__()

def itkObjectByObjectLabelMapFilterLM2_cast(obj):
    """itkObjectByObjectLabelMapFilterLM2_cast(itkLightObject obj) -> itkObjectByObjectLabelMapFilterLM2"""
    return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_cast(obj)

class itkObjectByObjectLabelMapFilterLM3(itkLabelMapFilterPython.itkLabelMapFilterLM3LM3):
    """


    ObjectByObjectLabelMapFilter applies an image pipeline to all the
    objects of a label map and produce a new label map.

    The image pipeline can simply produce a modified object or produce
    several objects from the single input object. Several options are
    provided to handle the different cases.

    KeepLabel, which defaults to true, makes the filter try to keep as
    much as possible the labels of the original objects. If an image
    pipeline produce several objects the label of the input object is
    assigned to the first output object. The other output objects get
    another label not present in the input image. When KeepLabel is set to
    false, all the objects are relabeled in the order of apparition during
    the filter process.

    BinaryInternalOutput can be set to true if the image pipeline produce
    binary output image. In that case, the objects produced are identified
    with a connected component algorithm before being reinserted in the
    output label map. InternalForegroundValue can be set to a specific
    value which represent the foreground value in the binary image.

    PadSize and ConstrainPaddingToImage can be used to extend the size of
    the image to process passed to the image pipeline. This is useful if
    the image pipeline is known to be able to enlarge the object. The
    padding can be constrained to the input label map region by setting
    ConstrainPaddingToImage to true - this parameter can make a difference
    for the algorithm with a different behavior on the border of the
    image. By default, the image is padded by 1 pixel and constrained to
    the image region.

    : When applying a single filter, input and output filters are the
    same; while applying a pipeline, input and output filters are
    different, may not even be of the same type. It is the responsibility
    of the user to connect the pipeline properly outside of this filter.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/1926/584 orhttp://www
    .insight-journal.org/browse/publication/176

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ObjectByObjectLa
    belMapFilter Apply an operation to every label object in a label map

    C++ includes: itkObjectByObjectLabelMapFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkObjectByObjectLabelMapFilterLM3_Pointer"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkObjectByObjectLabelMapFilterLM3 self) -> itkObjectByObjectLabelMapFilterLM3_Pointer"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_Clone(self)


    def SetFilter(self, filter):
        """SetFilter(itkObjectByObjectLabelMapFilterLM3 self, itkImageToImageFilterIUC3IUC3 filter)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetFilter(self, filter)


    def GetFilter(self, *args):
        """
        GetFilter(itkObjectByObjectLabelMapFilterLM3 self) -> itkImageToImageFilterIUC3IUC3
        GetFilter(itkObjectByObjectLabelMapFilterLM3 self) -> itkImageToImageFilterIUC3IUC3
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetFilter(self, *args)


    def SetInputFilter(self, filter):
        """SetInputFilter(itkObjectByObjectLabelMapFilterLM3 self, itkImageToImageFilterIUC3IUC3 filter)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetInputFilter(self, filter)


    def GetModifiableInputFilter(self):
        """GetModifiableInputFilter(itkObjectByObjectLabelMapFilterLM3 self) -> itkImageToImageFilterIUC3IUC3"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetModifiableInputFilter(self)


    def GetInputFilter(self, *args):
        """
        GetInputFilter(itkObjectByObjectLabelMapFilterLM3 self) -> itkImageToImageFilterIUC3IUC3
        GetInputFilter(itkObjectByObjectLabelMapFilterLM3 self) -> itkImageToImageFilterIUC3IUC3
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetInputFilter(self, *args)


    def SetOutputFilter(self, filter):
        """SetOutputFilter(itkObjectByObjectLabelMapFilterLM3 self, itkImageSourceIUC3 filter)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetOutputFilter(self, filter)


    def GetModifiableOutputFilter(self):
        """GetModifiableOutputFilter(itkObjectByObjectLabelMapFilterLM3 self) -> itkImageSourceIUC3"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetModifiableOutputFilter(self)


    def GetOutputFilter(self, *args):
        """
        GetOutputFilter(itkObjectByObjectLabelMapFilterLM3 self) -> itkImageSourceIUC3
        GetOutputFilter(itkObjectByObjectLabelMapFilterLM3 self) -> itkImageSourceIUC3
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetOutputFilter(self, *args)


    def SetKeepLabels(self, _arg):
        """
        SetKeepLabels(itkObjectByObjectLabelMapFilterLM3 self, bool const _arg)

        If KeepLabels is set
        to true, the filter will do its best to reuse the labels of the input
        objects in the output ones. However, this is possible only if the
        internal pipeline produce a single object - the other labels will be
        taken as they come. If KeepLabels is false, no care is made of the
        input labels, and a new label is produced for all the objects using
        LabelMap::PushLabelObject(). 
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetKeepLabels(self, _arg)


    def GetKeepLabels(self):
        """GetKeepLabels(itkObjectByObjectLabelMapFilterLM3 self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetKeepLabels(self)


    def KeepLabelsOn(self):
        """KeepLabelsOn(itkObjectByObjectLabelMapFilterLM3 self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_KeepLabelsOn(self)


    def KeepLabelsOff(self):
        """KeepLabelsOff(itkObjectByObjectLabelMapFilterLM3 self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_KeepLabelsOff(self)


    def SetPadSize(self, _arg):
        """
        SetPadSize(itkObjectByObjectLabelMapFilterLM3 self, itkSize3 _arg)

        If PadSize is not zero,
        the image produce for each object will be padded. The default value is
        1 on all the dimensions. 
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetPadSize(self, _arg)


    def GetPadSize(self):
        """GetPadSize(itkObjectByObjectLabelMapFilterLM3 self) -> itkSize3"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetPadSize(self)


    def SetConstrainPaddingToImage(self, _arg):
        """
        SetConstrainPaddingToImage(itkObjectByObjectLabelMapFilterLM3 self, bool const _arg)

        Padding
        by PadSize will be constrained to the input image region if
        ConstrainPaddingToImage is true, and won't be constrained if it is set
        to false. Default value is true. 
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetConstrainPaddingToImage(self, _arg)


    def GetConstrainPaddingToImage(self):
        """GetConstrainPaddingToImage(itkObjectByObjectLabelMapFilterLM3 self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetConstrainPaddingToImage(self)


    def ConstrainPaddingToImageOn(self):
        """ConstrainPaddingToImageOn(itkObjectByObjectLabelMapFilterLM3 self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_ConstrainPaddingToImageOn(self)


    def ConstrainPaddingToImageOff(self):
        """ConstrainPaddingToImageOff(itkObjectByObjectLabelMapFilterLM3 self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_ConstrainPaddingToImageOff(self)


    def SetBinaryInternalOutput(self, _arg):
        """
        SetBinaryInternalOutput(itkObjectByObjectLabelMapFilterLM3 self, bool const _arg)

        Set/Get
        whether the internal image produced by OutputFilter should be
        interpreted as a binary image in which the filter have to search for
        connected components. If set to false, the filter consider the image
        as a label image. Default is false. 
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetBinaryInternalOutput(self, _arg)


    def GetBinaryInternalOutput(self):
        """GetBinaryInternalOutput(itkObjectByObjectLabelMapFilterLM3 self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetBinaryInternalOutput(self)


    def BinaryInternalOutputOn(self):
        """BinaryInternalOutputOn(itkObjectByObjectLabelMapFilterLM3 self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_BinaryInternalOutputOn(self)


    def BinaryInternalOutputOff(self):
        """BinaryInternalOutputOff(itkObjectByObjectLabelMapFilterLM3 self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_BinaryInternalOutputOff(self)


    def SetInternalForegroundValue(self, _arg):
        """
        SetInternalForegroundValue(itkObjectByObjectLabelMapFilterLM3 self, unsigned char const _arg)

        The
        foreground value used internally to represent the object in the image
        passed to InputFilter, and to read the data produced by OutputFilter,
        if BinaryInternalOutput is true 
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetInternalForegroundValue(self, _arg)


    def GetInternalForegroundValue(self):
        """GetInternalForegroundValue(itkObjectByObjectLabelMapFilterLM3 self) -> unsigned char"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetInternalForegroundValue(self)


    def GetLabel(self):
        """
        GetLabel(itkObjectByObjectLabelMapFilterLM3 self) -> unsigned long

        The label of the object
        currently processed by the filter. This is intended to be used with
        the IterationEvent sent before the processing of each object. It
        contains a relevant value only during the filter update. 
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetLabel(self)

    __swig_destroy__ = _itkObjectByObjectLabelMapFilterPython.delete_itkObjectByObjectLabelMapFilterLM3

    def cast(obj):
        """cast(itkLightObject obj) -> itkObjectByObjectLabelMapFilterLM3"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkObjectByObjectLabelMapFilterLM3

        Create a new object of the class itkObjectByObjectLabelMapFilterLM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkObjectByObjectLabelMapFilterLM3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkObjectByObjectLabelMapFilterLM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkObjectByObjectLabelMapFilterLM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkObjectByObjectLabelMapFilterLM3.Clone = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_Clone, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.SetFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetFilter, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.GetFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetFilter, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.SetInputFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetInputFilter, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.GetModifiableInputFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetModifiableInputFilter, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.GetInputFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetInputFilter, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.SetOutputFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetOutputFilter, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.GetModifiableOutputFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetModifiableOutputFilter, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.GetOutputFilter = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetOutputFilter, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.SetKeepLabels = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetKeepLabels, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.GetKeepLabels = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetKeepLabels, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.KeepLabelsOn = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_KeepLabelsOn, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.KeepLabelsOff = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_KeepLabelsOff, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.SetPadSize = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetPadSize, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.GetPadSize = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetPadSize, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.SetConstrainPaddingToImage = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetConstrainPaddingToImage, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.GetConstrainPaddingToImage = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetConstrainPaddingToImage, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.ConstrainPaddingToImageOn = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_ConstrainPaddingToImageOn, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.ConstrainPaddingToImageOff = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_ConstrainPaddingToImageOff, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.SetBinaryInternalOutput = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetBinaryInternalOutput, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.GetBinaryInternalOutput = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetBinaryInternalOutput, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.BinaryInternalOutputOn = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_BinaryInternalOutputOn, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.BinaryInternalOutputOff = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_BinaryInternalOutputOff, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.SetInternalForegroundValue = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetInternalForegroundValue, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.GetInternalForegroundValue = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetInternalForegroundValue, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3.GetLabel = new_instancemethod(_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetLabel, None, itkObjectByObjectLabelMapFilterLM3)
itkObjectByObjectLabelMapFilterLM3_swigregister = _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_swigregister
itkObjectByObjectLabelMapFilterLM3_swigregister(itkObjectByObjectLabelMapFilterLM3)

def itkObjectByObjectLabelMapFilterLM3___New_orig__():
    """itkObjectByObjectLabelMapFilterLM3___New_orig__() -> itkObjectByObjectLabelMapFilterLM3_Pointer"""
    return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3___New_orig__()

def itkObjectByObjectLabelMapFilterLM3_cast(obj):
    """itkObjectByObjectLabelMapFilterLM3_cast(itkLightObject obj) -> itkObjectByObjectLabelMapFilterLM3"""
    return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_cast(obj)


def object_by_object_label_map_filter(*args, **kwargs):
    """Procedural interface for ObjectByObjectLabelMapFilter"""
    import itk
    instance = itk.ObjectByObjectLabelMapFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def object_by_object_label_map_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ObjectByObjectLabelMapFilter, itkTemplate.itkTemplate):
        object_by_object_label_map_filter.__doc__ = itk.ObjectByObjectLabelMapFilter.values()[0].__doc__
    else:
        object_by_object_label_map_filter.__doc__ = itk.ObjectByObjectLabelMapFilter.__doc__




