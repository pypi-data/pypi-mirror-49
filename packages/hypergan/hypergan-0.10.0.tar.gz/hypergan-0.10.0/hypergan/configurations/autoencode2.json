{
  "description":"Autoencoder (skip connections)",
  "publication":"N/A",
  "encoder": 
  {
      "class": "class:hypergan.discriminators.configurable_discriminator.ConfigurableDiscriminator",
      "defaults":{
        "activation": "relu",
        "initializer": "he_normal",
        "filter": [3,3],
        "stride": [1,1],
        "avg_pool": [2,2]
      },
      "layers":[
        "identity name=c",
        "conv 32",
        "identity name=l1",
        "conv 64 ",
        "identity name=l2",
        "conv 128",
        "identity name=l3",
        "conv 256",
        "identity name=l4",
        "conv 512",
        "identity name=l5",
        "layer l3"
      ]

  },
  "discriminator": 
  {
      "class": "class:hypergan.discriminators.configurable_discriminator.ConfigurableDiscriminator",
      "defaults":{
        "activation": "relu",
        "initializer": "he_normal",
        "filter": [3,3],
        "stride": [1,1],
        "avg_pool": [2,2]
      },
      "layers":[
        [["layer l1 src=encoder", "layer l1 src=reencode",0],"conv 32"],
        [["layer l2 src=encoder", "layer l2 src=reencode",0],"conv 64 "],
        [["layer l3 src=encoder", "layer l3 src=reencode",0],"conv 128"],
        [["layer l4 src=encoder", "layer l4 src=reencode",0],"conv 256"],
        [["layer l5 src=encoder", "layer l5 src=reencode",0],"conv 512"],
        "conv 512",
        "linear 1 activation=null"
      ]

  },
  "generator": {
    "class": "class:hypergan.discriminators.configurable_discriminator.ConfigurableDiscriminator",
    "initializer": "he_normal",
    "random_stddev": 0.00001,
    "orthogonal_gain": 1.0,
    "defaults": {
      "activation": "relu",
      "relu_activation": "relu",
      "initializer": "he_normal",
      "filter": [3,3],
      "stride": [2,2],
      "avg_pool": [2,2]
    },
    "layers": [
      "layer l5 src=encoder",
      "deconv 256 avg_pool=1",
      ["identity", "layer l4 src=encoder"],
      "deconv 128 avg_pool=1",
      ["identity", "layer l3 src=encoder"],
      "deconv 92 avg_pool=1",
      ["identity", "layer l2 src=encoder"],
      "deconv 64 avg_pool=1",
      ["identity", "layer l1 src=encoder"],
      "deconv 3 avg_pool=1 activation=null"
    ]
  },
  "latent": {
    "class": "function:hypergan.distributions.uniform_distribution.UniformDistribution",
    "max": 1,
    "min": -1,
    "projections": [
      "function:hypergan.distributions.uniform_distribution.identity"
    ],
    "z": 128
  },
  "loss": {
    "type": "wasserstein",
    "class": "function:hypergan.losses.ali_loss.AliLoss",
    "reduce": "reduce_mean"
  },
  "trainer": {
    "class": "function:hypergan.trainers.simultaneous_trainer.SimultaneousTrainer",
    "optimizer": {
      "class": "function:hypergan.optimizers.curl_optimizer.CurlOptimizer",
      "learn_rate": 0.00001,
      "d_rho": 1.0,
      "g_rho": 1.0,

      "optimizer": {

        "class": "function:hypergan.optimizers.elastic_weight_consolidation_optimizer.ElasticWeightConsolidationOptimizer",
        "f_decay": 0.85,
        "initial_constraint": 0.1,
        "add_ewc_loss_gradients": true,
        "gradient_scale": 1.0,
        "lam": 20.0,
 
        "optimizer": {
          "class": "function:hypergan.optimizers.experimental.negative_momentum_optimizer.NegativeMomentumOptimizer",
          "decay": 1.0,
          "alpha": 0.5,
          "beta": 0.66,

          "optimizer": {
            "class": "function:hypergan.optimizers.giga_wolf_optimizer.GigaWolfOptimizer",
              "learn_rate": 1e-4,
              "optimizer": {
                "class": "function:tensorflow.python.training.adam.AdamOptimizer",
                "learn_rate": 1e-4,
                "beta1":0.0,
                "beta2":0.999
              },
              "optimizer2": {
                "class": "function:tensorflow.python.training.adam.AdamOptimizer",
                "learn_rate": 3e-5,
                "beta1":0.0,
                "beta2":0.999
             }
          }
        }
      }
    },
    "hooks":[
      {
        "class": "function:hypergan.train_hooks.weight_penalty_train_hook.WeightPenaltyTrainHook",
        "constraints": ["l2nn"],
        "l2nn_penalty": 1.0,
        "iterations": 1,
        "constraint_every": 1
      },
      {
        "class": "function:hypergan.train_hooks.experimental.match_support_train_hook.MatchSupportTrainHook",
        "variables": ["generator"],
        "loss_threshold": 1.0,
        "loss": "fixed2",
        "max_steps": 100000,
        "max_depth": 1,
        "reset_optimizer": true,

        "optimizer": {
          "class": "function:tensorflow.python.training.rmsprop.RMSPropOptimizer",
          "learn_rate": 0.0005
        }
        },
      {
        "class": "function:hypergan.train_hooks.experimental.input_fitness_train_hook.InputFitnessTrainHook",
        "heuristic": 0,
        "search_steps": 100000
      }
    ]
  },
  "fixed_input": true,
  "reencode": true,
  "class": "class:hypergan.gans.ali_gan.AliGAN"
}
