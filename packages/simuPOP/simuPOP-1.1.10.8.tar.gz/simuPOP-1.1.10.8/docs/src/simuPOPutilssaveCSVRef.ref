
Function saveCSV
----------------


.. function:: saveCSV(pop, filename='', infoFields=[], loci=True, header=True, subPops=ALL_AVAIL, genoFormatter=None, infoFormatter=None, sexFormatter={1: 'M', 2: 'F'}, affectionFormatter={True: 'A', False: 'U'}, sep=', ', **kwargs)

   This function is deprecated. Please use ``export(format='csv')`` instead.
   Save a simuPOP population ``pop`` in csv format. Columns of this
   file is arranged in the order of information fields (``infoFields``),
   sex (if ``sexFormatter`` is not ``None``), affection status (if
   ``affectionFormatter`` is not ``None``), and genotype (if ``genoFormatter`` is
   not ``None``). This function only output individuals in the present
   generation of population ``pop``. This function accepts the following
   parameters:
   
   pop
       A simuPOP population object.
   
   filename
       Output filename. Leading '>' characters are ignored. However, if the first
       character of this filename is '!', the rest of the name will be evalulated
       in the population's local namespace. If ``filename`` is empty, the content
       will be written to the standard output.
   
   infoFileds
       Information fields to be outputted. Default to none.
   
   loci
       If a list of loci is given, only genotype at these loci will be
       written. Default to ``ALL_AVAIL``, meaning all available loci. You can
       set this parameter to ``[]`` if you do not want to output any genotype.
   
   header
       Whether or not a header should be written. These headers will include
       information fields, sex (if ``sexFormatter`` is not ``None``), affection
       status (if ``affectionFormatter`` is not ``None``) and loci names. If
       genotype at a locus needs more than one column, ``_1``, ``_2`` etc will
       be appended to loci names. Alternatively, a complete header (a string)
       or a list of column names could be specified directly.
   
   subPops
       A list of (virtual) subpopulations. If specified, only individuals
       from these subpopulations will be outputed.
   
   infoFormatter
       A format string that is used to format all information fields. If
       unspecified, ``str(value)`` will be used for each information field.
   
   genoFormatter
       How to output genotype at specified loci. Acceptable values include
       ``None`` (output allele names), a dictionary with genotype as keys,
       (e.g. ``genoFormatter={(0,0):1, (0,1):2, (1,0):2, (1,1):3}``, or a function
       with genotype (as a tuple of integers) as inputs. The dictionary value
       or the return value of this function can be a single or a list of
       number or strings.
   
   sexFormatter
       How to output individual sex. Acceptable values include ``None`` (no
       output) or a dictionary with keys ``MALE`` and ``FEMALE``.
   
   affectionFormatter
       How to output individual affection status. Acceptable values include
       ``None`` (no output) or a dictionary with keys ``True`` and ``False``.
   
   Parameters ``genoCode``, ``sexCode``, and ``affectionCode`` from version
   1.0.0 have been renamed to ``genoFormatter``, ``sexFormatter`` and 
   ``affectionFormatter`` but can still be used.
