
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA CONSTANT DATETIME FLOAT FUNCTION INTEGER IPV4 IPV6 LBRACK LPAREN OP_AND OP_AND_P OP_DIVIDE OP_EQ OP_EXISTS OP_GE OP_GT OP_IN OP_IS OP_LE OP_LIKE OP_LT OP_MINUS OP_MODULO OP_NE OP_NOT OP_OR OP_OR_P OP_PLUS OP_TIMES OP_XOR OP_XOR_P RBRACK RPAREN TIMEDELTA VARIABLEexpression : xor_expression OP_OR expression\n                      | xor_expressionxor_expression : and_expression OP_XOR xor_expression\n                          | and_expressionand_expression : or_p_expression OP_AND and_expression\n                          | or_p_expressionor_p_expression : xor_p_expression OP_OR_P or_p_expression\n                      | xor_p_expressionxor_p_expression : and_p_expression OP_XOR_P xor_p_expression\n                          | and_p_expressionand_p_expression : not_expression OP_AND_P and_p_expression\n                          | not_expressionnot_expression : OP_NOT ex_expression\n                          | ex_expressionex_expression : OP_EXISTS cmp_expression\n                         | cmp_expressioncmp_expression : term OP_LIKE cmp_expression\n                          | term OP_IN cmp_expression\n                          | term OP_IS cmp_expression\n                          | term OP_EQ cmp_expression\n                          | term OP_NE cmp_expression\n                          | term OP_GT cmp_expression\n                          | term OP_GE cmp_expression\n                          | term OP_LT cmp_expression\n                          | term OP_LE cmp_expression\n                          | termterm : factor OP_PLUS term\n                | factor OP_MINUS term\n                | factor OP_TIMES term\n                | factor OP_DIVIDE term\n                | factor OP_MODULO term\n                | factorfactor : IPV4\n                  | IPV6\n                  | DATETIME\n                  | TIMEDELTA\n                  | INTEGER\n                  | FLOAT\n                  | VARIABLE\n                  | CONSTANT\n                  | FUNCTION RPAREN\n                  | FUNCTION expression RPAREN\n                  | LBRACK list RBRACK\n                  | LPAREN expression RPARENlist : IPV4\n                | IPV6\n                | DATETIME\n                | TIMEDELTA\n                | INTEGER\n                | FLOAT\n                | VARIABLE\n                | CONSTANT\n                | IPV4 COMMA list\n                | IPV6 COMMA list\n                | DATETIME COMMA list\n                | TIMEDELTA COMMA list\n                | INTEGER COMMA list\n                | FLOAT COMMA list\n                | VARIABLE COMMA list\n                | CONSTANT COMMA list'
    
_lr_action_items = {'OP_AND_P':([2,3,5,9,12,14,15,16,17,19,21,23,24,25,28,53,59,68,73,74,75,76,77,78,79,80,81,84,85,86,87,88,89,],[-35,-34,-14,-16,-40,-36,-38,-33,-39,-26,51,-32,-37,-15,-13,-41,-44,-43,-20,-23,-18,-24,-21,-17,-19,-22,-25,-42,-30,-29,-28,-31,-27,]),'OP_DIVIDE':([2,3,12,14,15,16,17,23,24,53,59,68,84,],[-35,-34,-40,-36,-38,-33,-39,54,-37,-41,-44,-43,-42,]),'OP_MODULO':([2,3,12,14,15,16,17,23,24,53,59,68,84,],[-35,-34,-40,-36,-38,-33,-39,57,-37,-41,-44,-43,-42,]),'OP_OR_P':([2,3,5,7,9,12,14,15,16,17,19,20,21,23,24,25,28,53,59,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,],[-35,-34,-14,27,-16,-40,-36,-38,-33,-39,-26,-10,-12,-32,-37,-15,-13,-41,-44,-43,-20,-23,-18,-24,-21,-17,-19,-22,-25,-9,-11,-42,-30,-29,-28,-31,-27,]),'OP_MINUS':([2,3,12,14,15,16,17,23,24,53,59,68,84,],[-35,-34,-40,-36,-38,-33,-39,56,-37,-41,-44,-43,-42,]),'DATETIME':([0,1,4,8,13,22,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,63,64,65,66,67,69,70,71,],[2,2,2,2,33,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,33,33,33,33,33,33,33,33,]),'IPV6':([0,1,4,8,13,22,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,63,64,65,66,67,69,70,71,],[3,3,3,3,32,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,32,32,32,32,32,32,32,32,]),'VARIABLE':([0,1,4,8,13,22,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,63,64,65,66,67,69,70,71,],[17,17,17,17,34,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,34,34,34,34,34,34,34,34,]),'OP_EQ':([2,3,12,14,15,16,17,19,23,24,53,59,68,84,85,86,87,88,89,],[-35,-34,-40,-36,-38,-33,-39,41,-32,-37,-41,-44,-43,-42,-30,-29,-28,-31,-27,]),'OP_PLUS':([2,3,12,14,15,16,17,23,24,53,59,68,84,],[-35,-34,-40,-36,-38,-33,-39,58,-37,-41,-44,-43,-42,]),'OP_IN':([2,3,12,14,15,16,17,19,23,24,53,59,68,84,85,86,87,88,89,],[-35,-34,-40,-36,-38,-33,-39,43,-32,-37,-41,-44,-43,-42,-30,-29,-28,-31,-27,]),'OP_AND':([2,3,5,7,9,12,14,15,16,17,18,19,20,21,23,24,25,28,53,59,60,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,],[-35,-34,-14,-8,-16,-40,-36,-38,-33,-39,40,-26,-10,-12,-32,-37,-15,-13,-41,-44,-7,-43,-20,-23,-18,-24,-21,-17,-19,-22,-25,-9,-11,-42,-30,-29,-28,-31,-27,]),'OP_LE':([2,3,12,14,15,16,17,19,23,24,53,59,68,84,85,86,87,88,89,],[-35,-34,-40,-36,-38,-33,-39,49,-32,-37,-41,-44,-43,-42,-30,-29,-28,-31,-27,]),'OP_LIKE':([2,3,12,14,15,16,17,19,23,24,53,59,68,84,85,86,87,88,89,],[-35,-34,-40,-36,-38,-33,-39,46,-32,-37,-41,-44,-43,-42,-30,-29,-28,-31,-27,]),'OP_XOR_P':([2,3,5,9,12,14,15,16,17,19,20,21,23,24,25,28,53,59,68,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,],[-35,-34,-14,-16,-40,-36,-38,-33,-39,-26,50,-12,-32,-37,-15,-13,-41,-44,-43,-20,-23,-18,-24,-21,-17,-19,-22,-25,-11,-42,-30,-29,-28,-31,-27,]),'OP_LT':([2,3,12,14,15,16,17,19,23,24,53,59,68,84,85,86,87,88,89,],[-35,-34,-40,-36,-38,-33,-39,44,-32,-37,-41,-44,-43,-42,-30,-29,-28,-31,-27,]),'OP_NOT':([0,4,22,27,29,30,40,50,51,],[8,8,8,8,8,8,8,8,8,]),'IPV4':([0,1,4,8,13,22,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,63,64,65,66,67,69,70,71,],[16,16,16,16,35,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,35,35,35,35,35,35,35,35,]),'OP_GT':([2,3,12,14,15,16,17,19,23,24,53,59,68,84,85,86,87,88,89,],[-35,-34,-40,-36,-38,-33,-39,48,-32,-37,-41,-44,-43,-42,-30,-29,-28,-31,-27,]),'CONSTANT':([0,1,4,8,13,22,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,63,64,65,66,67,69,70,71,],[12,12,12,12,31,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,31,31,31,31,31,31,31,31,]),'$end':([2,3,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,28,53,59,60,61,62,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,],[-35,-34,-14,0,-8,-16,-2,-4,-40,-36,-38,-33,-39,-6,-26,-10,-12,-32,-37,-15,-13,-41,-44,-7,-1,-3,-43,-5,-20,-23,-18,-24,-21,-17,-19,-22,-25,-9,-11,-42,-30,-29,-28,-31,-27,]),'OP_XOR':([2,3,5,7,9,11,12,14,15,16,17,18,19,20,21,23,24,25,28,53,59,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,],[-35,-34,-14,-8,-16,30,-40,-36,-38,-33,-39,-6,-26,-10,-12,-32,-37,-15,-13,-41,-44,-7,-43,-5,-20,-23,-18,-24,-21,-17,-19,-22,-25,-9,-11,-42,-30,-29,-28,-31,-27,]),'OP_TIMES':([2,3,12,14,15,16,17,23,24,53,59,68,84,],[-35,-34,-40,-36,-38,-33,-39,55,-37,-41,-44,-43,-42,]),'OP_NE':([2,3,12,14,15,16,17,19,23,24,53,59,68,84,85,86,87,88,89,],[-35,-34,-40,-36,-38,-33,-39,45,-32,-37,-41,-44,-43,-42,-30,-29,-28,-31,-27,]),'OP_GE':([2,3,12,14,15,16,17,19,23,24,53,59,68,84,85,86,87,88,89,],[-35,-34,-40,-36,-38,-33,-39,42,-32,-37,-41,-44,-43,-42,-30,-29,-28,-31,-27,]),'COMMA':([31,32,33,34,35,37,38,39,],[63,64,65,66,67,69,70,71,]),'RPAREN':([2,3,5,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,52,53,59,60,61,62,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,],[-35,-34,-14,-8,-16,-2,-4,-40,-36,-38,-33,-39,-6,-26,-10,-12,53,-32,-37,-15,59,-13,84,-41,-44,-7,-1,-3,-43,-5,-20,-23,-18,-24,-21,-17,-19,-22,-25,-9,-11,-42,-30,-29,-28,-31,-27,]),'LBRACK':([0,1,4,8,22,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'RBRACK':([31,32,33,34,35,36,37,38,39,90,91,92,93,94,95,96,97,],[-52,-46,-47,-51,-45,68,-48,-50,-49,-60,-54,-55,-59,-53,-56,-58,-57,]),'OP_EXISTS':([0,4,8,22,27,29,30,40,50,51,],[1,1,1,1,1,1,1,1,1,1,]),'LPAREN':([0,1,4,8,22,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'FUNCTION':([0,1,4,8,22,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'OP_OR':([2,3,5,7,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,28,53,59,60,62,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,],[-35,-34,-14,-8,-16,29,-4,-40,-36,-38,-33,-39,-6,-26,-10,-12,-32,-37,-15,-13,-41,-44,-7,-3,-43,-5,-20,-23,-18,-24,-21,-17,-19,-22,-25,-9,-11,-42,-30,-29,-28,-31,-27,]),'TIMEDELTA':([0,1,4,8,13,22,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,63,64,65,66,67,69,70,71,],[14,14,14,14,37,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,37,37,37,37,37,37,37,37,]),'FLOAT':([0,1,4,8,13,22,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,63,64,65,66,67,69,70,71,],[15,15,15,15,38,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,38,38,38,38,38,38,38,38,]),'INTEGER':([0,1,4,8,13,22,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,63,64,65,66,67,69,70,71,],[24,24,24,24,39,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,39,39,39,39,39,39,39,39,]),'OP_IS':([2,3,12,14,15,16,17,19,23,24,53,59,68,84,85,86,87,88,89,],[-35,-34,-40,-36,-38,-33,-39,47,-32,-37,-41,-44,-43,-42,-30,-29,-28,-31,-27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'xor_expression':([0,4,22,29,30,],[10,10,10,10,62,]),'and_p_expression':([0,4,22,27,29,30,40,50,51,],[20,20,20,20,20,20,20,20,83,]),'and_expression':([0,4,22,29,30,40,],[11,11,11,11,11,72,]),'not_expression':([0,4,22,27,29,30,40,50,51,],[21,21,21,21,21,21,21,21,21,]),'ex_expression':([0,4,8,22,27,29,30,40,50,51,],[5,5,28,5,5,5,5,5,5,5,]),'term':([0,1,4,8,22,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,85,86,87,88,89,]),'expression':([0,4,22,29,],[6,26,52,61,]),'list':([13,63,64,65,66,67,69,70,71,],[36,90,91,92,93,94,95,96,97,]),'factor':([0,1,4,8,22,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'or_p_expression':([0,4,22,27,29,30,40,],[18,18,18,60,18,18,18,]),'cmp_expression':([0,1,4,8,22,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,],[9,25,9,9,9,9,9,9,9,73,74,75,76,77,78,79,80,81,9,9,]),'xor_p_expression':([0,4,22,27,29,30,40,50,],[7,7,7,7,7,7,7,82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> xor_expression OP_OR expression','expression',3,'p_expression','gparser.py',272),
  ('expression -> xor_expression','expression',1,'p_expression','gparser.py',273),
  ('xor_expression -> and_expression OP_XOR xor_expression','xor_expression',3,'p_xor_expression','gparser.py',281),
  ('xor_expression -> and_expression','xor_expression',1,'p_xor_expression','gparser.py',282),
  ('and_expression -> or_p_expression OP_AND and_expression','and_expression',3,'p_and_expression','gparser.py',290),
  ('and_expression -> or_p_expression','and_expression',1,'p_and_expression','gparser.py',291),
  ('or_p_expression -> xor_p_expression OP_OR_P or_p_expression','or_p_expression',3,'p_or_p_expression','gparser.py',299),
  ('or_p_expression -> xor_p_expression','or_p_expression',1,'p_or_p_expression','gparser.py',300),
  ('xor_p_expression -> and_p_expression OP_XOR_P xor_p_expression','xor_p_expression',3,'p_xor_p_expression','gparser.py',308),
  ('xor_p_expression -> and_p_expression','xor_p_expression',1,'p_xor_p_expression','gparser.py',309),
  ('and_p_expression -> not_expression OP_AND_P and_p_expression','and_p_expression',3,'p_and_p_expression','gparser.py',318),
  ('and_p_expression -> not_expression','and_p_expression',1,'p_and_p_expression','gparser.py',319),
  ('not_expression -> OP_NOT ex_expression','not_expression',2,'p_not_expression','gparser.py',327),
  ('not_expression -> ex_expression','not_expression',1,'p_not_expression','gparser.py',328),
  ('ex_expression -> OP_EXISTS cmp_expression','ex_expression',2,'p_ex_expression','gparser.py',336),
  ('ex_expression -> cmp_expression','ex_expression',1,'p_ex_expression','gparser.py',337),
  ('cmp_expression -> term OP_LIKE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',346),
  ('cmp_expression -> term OP_IN cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',347),
  ('cmp_expression -> term OP_IS cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',348),
  ('cmp_expression -> term OP_EQ cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',349),
  ('cmp_expression -> term OP_NE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',350),
  ('cmp_expression -> term OP_GT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',351),
  ('cmp_expression -> term OP_GE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',352),
  ('cmp_expression -> term OP_LT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',353),
  ('cmp_expression -> term OP_LE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',354),
  ('cmp_expression -> term','cmp_expression',1,'p_cmp_expression','gparser.py',355),
  ('term -> factor OP_PLUS term','term',3,'p_term','gparser.py',363),
  ('term -> factor OP_MINUS term','term',3,'p_term','gparser.py',364),
  ('term -> factor OP_TIMES term','term',3,'p_term','gparser.py',365),
  ('term -> factor OP_DIVIDE term','term',3,'p_term','gparser.py',366),
  ('term -> factor OP_MODULO term','term',3,'p_term','gparser.py',367),
  ('term -> factor','term',1,'p_term','gparser.py',368),
  ('factor -> IPV4','factor',1,'p_factor','gparser.py',376),
  ('factor -> IPV6','factor',1,'p_factor','gparser.py',377),
  ('factor -> DATETIME','factor',1,'p_factor','gparser.py',378),
  ('factor -> TIMEDELTA','factor',1,'p_factor','gparser.py',379),
  ('factor -> INTEGER','factor',1,'p_factor','gparser.py',380),
  ('factor -> FLOAT','factor',1,'p_factor','gparser.py',381),
  ('factor -> VARIABLE','factor',1,'p_factor','gparser.py',382),
  ('factor -> CONSTANT','factor',1,'p_factor','gparser.py',383),
  ('factor -> FUNCTION RPAREN','factor',2,'p_factor','gparser.py',384),
  ('factor -> FUNCTION expression RPAREN','factor',3,'p_factor','gparser.py',385),
  ('factor -> LBRACK list RBRACK','factor',3,'p_factor','gparser.py',386),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','gparser.py',387),
  ('list -> IPV4','list',1,'p_list','gparser.py',398),
  ('list -> IPV6','list',1,'p_list','gparser.py',399),
  ('list -> DATETIME','list',1,'p_list','gparser.py',400),
  ('list -> TIMEDELTA','list',1,'p_list','gparser.py',401),
  ('list -> INTEGER','list',1,'p_list','gparser.py',402),
  ('list -> FLOAT','list',1,'p_list','gparser.py',403),
  ('list -> VARIABLE','list',1,'p_list','gparser.py',404),
  ('list -> CONSTANT','list',1,'p_list','gparser.py',405),
  ('list -> IPV4 COMMA list','list',3,'p_list','gparser.py',406),
  ('list -> IPV6 COMMA list','list',3,'p_list','gparser.py',407),
  ('list -> DATETIME COMMA list','list',3,'p_list','gparser.py',408),
  ('list -> TIMEDELTA COMMA list','list',3,'p_list','gparser.py',409),
  ('list -> INTEGER COMMA list','list',3,'p_list','gparser.py',410),
  ('list -> FLOAT COMMA list','list',3,'p_list','gparser.py',411),
  ('list -> VARIABLE COMMA list','list',3,'p_list','gparser.py',412),
  ('list -> CONSTANT COMMA list','list',3,'p_list','gparser.py',413),
]
