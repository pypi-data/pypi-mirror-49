# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DatasetRequestDto(Model):
    """DatasetRequestDto.

    :param data_path:
    :type data_path: ~_restclient.models.DataPathDto
    :param include_path:
    :type include_path: bool
    :param day_first:
    :type day_first: bool
    :param name:
    :type name: str
    :param description:
    :type description: str
    :param tags:
    :type tags: dict[str, str]
    :param is_visible:
    :type is_visible: bool
    :param default_compute:
    :type default_compute: str
    """

    _attribute_map = {
        'data_path': {'key': 'dataPath', 'type': 'DataPathDto'},
        'include_path': {'key': 'includePath', 'type': 'bool'},
        'day_first': {'key': 'dayFirst', 'type': 'bool'},
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'is_visible': {'key': 'isVisible', 'type': 'bool'},
        'default_compute': {'key': 'defaultCompute', 'type': 'str'},
    }

    def __init__(self, data_path=None, include_path=None, day_first=None, name=None, description=None, tags=None, is_visible=None, default_compute=None):
        super(DatasetRequestDto, self).__init__()
        self.data_path = data_path
        self.include_path = include_path
        self.day_first = day_first
        self.name = name
        self.description = description
        self.tags = tags
        self.is_visible = is_visible
        self.default_compute = default_compute
