{"version":3,"sources":["webpack:///./app/views/projectSavedSearches.jsx"],"names":["InputColumn","props","react__WEBPACK_IMPORTED_MODULE_10___default","a","createElement","grid_emotion__WEBPACK_IMPORTED_MODULE_8__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_7___default","flex","justify","SearchTitle","styled","target","SavedSearchRow","handleRemove","_this$props","_this","data","onRemove","handleDefault","_this$props2","onDefault","isDefault","handleUserDefault","_this$props3","onUserDefault","isUserDefault","_this$props4","this","canModify","deleteDisabled","isPrivate","app_components_panels__WEBPACK_IMPORTED_MODULE_12__","p","py","align","px","direction","name","query","type","checked","onChange","disabled","app_components_confirm__WEBPACK_IMPORTED_MODULE_16__","message","t","onConfirm","app_components_button__WEBPACK_IMPORTED_MODULE_15__","size","icon","React","Component","propTypes","PropTypes","object","isRequired","bool","func","ProjectSavedSearches","handleUpdate","params","_this2$props$params","_this2","orgId","projectId","loadingIndicator","IndicatorStore","add","key","savedSearchList","state","newSearchList","map","search","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","id","setState","api","request","concat","method","error","addError","complete","remove","handleRemovedSearch","_this2$props$params2","filter","_this$props$params","app_components_emptyStateWarning__WEBPACK_IMPORTED_MODULE_17__","_this3","_this$props$params2","organization","context","access","Set","has","Fragment","hasResults","length","app_views_settings_components_settingsPageHeader__WEBPACK_IMPORTED_MODULE_21__","title","disablePadding","renderResults","renderEmpty","AsyncView","contextTypes","SentryTypes","Organization","ProjectSavedSearchContainer","features","includes","app_components_errors_notFound__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"ProjectSavedSearches.js","sourcesContent":["import {Flex} from 'grid-emotion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport IndicatorStore from 'app/stores/indicatorStore';\nimport NotFound from 'app/components/errors/notFound';\nimport SentryTypes from 'app/sentryTypes';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nconst InputColumn = props => <Flex flex=\"1\" justify=\"center\" {...props} />;\n\nconst SearchTitle = styled.div`\n  font-size: 18px;\n  margin-bottom: 5px;\n`;\n\nclass SavedSearchRow extends React.Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired,\n    canModify: PropTypes.bool.isRequired,\n    onDefault: PropTypes.func.isRequired,\n    onUserDefault: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n  };\n\n  handleRemove = () => {\n    const {data, onRemove} = this.props;\n    onRemove({data});\n  };\n\n  handleDefault = () => {\n    const {data, onDefault} = this.props;\n    onDefault({\n      data,\n      isDefault: true,\n    });\n  };\n\n  handleUserDefault = () => {\n    const {data, onUserDefault} = this.props;\n    onUserDefault({\n      data,\n      isUserDefault: true,\n    });\n  };\n\n  render() {\n    const {data, canModify} = this.props;\n    const deleteDisabled = !canModify && !data.isPrivate;\n\n    return (\n      <PanelItem p={0} py={2} align=\"center\">\n        <Flex flex=\"1\" px={2} direction=\"column\">\n          <SearchTitle>{data.name}</SearchTitle>\n          <code>{data.query}</code>\n        </Flex>\n        <Flex flex=\"1\">\n          <InputColumn>\n            <input\n              type=\"radio\"\n              name=\"userDefault\"\n              checked={data.isUserDefault}\n              onChange={this.handleUserDefault}\n            />\n          </InputColumn>\n\n          {canModify && (\n            <InputColumn>\n              <input\n                type=\"radio\"\n                name=\"default\"\n                checked={data.isDefault}\n                onChange={this.handleDefault}\n                disabled={data.isPrivate}\n              />\n            </InputColumn>\n          )}\n\n          <InputColumn>\n            <Confirm\n              message={t('Are you sure you want to remove this?')}\n              onConfirm={this.handleRemove}\n              disabled={deleteDisabled}\n            >\n              <Button size=\"small\" icon=\"icon-trash\" />\n            </Confirm>\n          </InputColumn>\n        </Flex>\n      </PanelItem>\n    );\n  }\n}\n\nclass ProjectSavedSearches extends AsyncView {\n  getTitle() {\n    return t('Saved Searches');\n  }\n\n  static contextTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  getEndpoints() {\n    const {orgId, projectId} = this.props.params;\n    return [['savedSearchList', `/projects/${orgId}/${projectId}/searches/`]];\n  }\n\n  handleUpdate = params => {\n    const {orgId, projectId} = this.props.params;\n    const loadingIndicator = IndicatorStore.add(t('Saving changes..'));\n    const {data, isDefault, isUserDefault} = params;\n    const key = typeof isDefault !== 'undefined' ? 'isDefault' : 'isUserDefault';\n    const {savedSearchList} = this.state;\n    const newSearchList = savedSearchList.map(search => ({\n      ...search,\n      [key]: data.id === search.id,\n    }));\n\n    this.setState(\n      {\n        savedSearchList: newSearchList,\n      },\n      () => {\n        this.api.request(`/projects/${orgId}/${projectId}/searches/${data.id}/`, {\n          method: 'PUT',\n          data: {\n            isDefault,\n            isUserDefault,\n          },\n          error: () => {\n            this.setState({\n              savedSearchList,\n            });\n            IndicatorStore.addError(t('Error updating search'));\n          },\n          complete: () => {\n            IndicatorStore.remove(loadingIndicator);\n          },\n        });\n      }\n    );\n  };\n\n  handleRemovedSearch = params => {\n    const {orgId, projectId} = this.props.params;\n    const loadingIndicator = IndicatorStore.add(t('Saving changes..'));\n    const {data} = params;\n    const {savedSearchList} = this.state;\n    const newSearchList = savedSearchList.filter(search => {\n      return search.id !== data.id;\n    });\n\n    this.setState(\n      {\n        savedSearchList: newSearchList,\n      },\n      () => {\n        this.api.request(`/projects/${orgId}/${projectId}/searches/${data.id}/`, {\n          method: 'DELETE',\n          error: () => {\n            this.setState({\n              savedSearchList,\n            });\n            IndicatorStore.addError(t('Error removing search'));\n          },\n          complete: () => IndicatorStore.remove(loadingIndicator),\n        });\n      }\n    );\n  };\n\n  renderEmpty() {\n    return (\n      <EmptyStateWarning>\n        <p>{t('There are no saved searches for this project.')}</p>\n      </EmptyStateWarning>\n    );\n  }\n\n  renderResults() {\n    const {orgId, projectId} = this.props.params;\n    const {organization} = this.context;\n    const access = organization && new Set(organization.access);\n    const canModify = (organization && access.has('project:write')) || false;\n\n    return (\n      <React.Fragment>\n        {this.state.savedSearchList.map(search => {\n          return (\n            <SavedSearchRow\n              access={access}\n              key={search.id}\n              canModify={canModify}\n              orgId={orgId}\n              projectId={projectId}\n              data={search}\n              onUserDefault={this.handleUpdate}\n              onDefault={this.handleUpdate}\n              onRemove={this.handleRemovedSearch}\n            />\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n\n  renderBody() {\n    const {organization} = this.context;\n    const access = organization && new Set(organization.access);\n    const canModify = (organization && access.has('project:write')) || false;\n    const hasResults = this.state.savedSearchList.length > 0;\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Saved Searches')} />\n        <Panel>\n          <PanelHeader disablePadding>\n            <Flex flex=\"1\">\n              <Flex flex=\"1\" px={2}>\n                {t('Search')}\n              </Flex>\n              <Flex flex=\"1\">\n                <InputColumn>{t('My Default')}</InputColumn>\n                {canModify && <InputColumn>{t('Team Default')}</InputColumn>}\n                {<InputColumn>{t('Remove')}</InputColumn>}\n              </Flex>\n            </Flex>\n          </PanelHeader>\n          <PanelBody>{hasResults ? this.renderResults() : this.renderEmpty()}</PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nconst ProjectSavedSearchContainer = function(props, context) {\n  const hasSavedSearch = context.organization.features.includes('org-saved-searches');\n  if (hasSavedSearch) {\n    return <NotFound />;\n  }\n  return <ProjectSavedSearches {...props} />;\n};\n\nProjectSavedSearchContainer.contextTypes = {\n  organization: SentryTypes.Organization,\n};\n\nexport default ProjectSavedSearchContainer;\nexport {SavedSearchRow};\n"],"sourceRoot":""}