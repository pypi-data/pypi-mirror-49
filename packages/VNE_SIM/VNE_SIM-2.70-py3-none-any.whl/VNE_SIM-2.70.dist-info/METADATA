Metadata-Version: 2.1
Name: VNE-SIM
Version: 2.70
Summary: virtual network embedding
Home-page: UNKNOWN
Author: UNKNOWN
Author-email: 15@qq.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Framework :: IPython
Classifier: Development Status :: 4 - Beta
Classifier: Topic :: Education :: Testing
Classifier: Operating System :: OS Independent
Classifier: License :: Public Domain
Classifier: Environment :: Win32 (MS Windows)
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: Implementation
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Requires-Dist: numpy
Requires-Dist: networkx
Requires-Dist: scipy
Requires-Dist: xlwt
Requires-Dist: matplotlib

========================================================================
virtual network embdding
========================================================================
run method

from VNE_SIM.VNR import *

from VNE_SIM.SN import *

import VNE_SIM.algorithm as alg

SNpath='topology\\sn\\sub100-570.txt'

vnrpath='topology\\newr-2000-0-20-0-25'

vnrnumber=2000

timeframe=2000

mysimulation=simulation(5,SNpath,vnrpath,vnrnumber)

mysimulation.init(timeframe)

def my_vne_alg():

    v2sindex=[[v1,s1]]

    ve2seindex=[[s1,s2,...]]

    return True|False,v2sindex,ve2seindex

mysimulation.simulation_run(EA_VNR.EA_VNR_alg,EA_VNR.EA_VNR_ALG_NAME)

mysimulation.draw()

#####################################

zzu@1402



