{"version":3,"sources":["webpack:///./app/views/settings/organizationRateLimits/organizationRateLimits.jsx","webpack:///./app/views/settings/organizationRateLimits/index.jsx"],"names":["ACCOUNT_RATE_LIMIT_VALUES","steps","i","push","getRateLimitValues","OrganizationRateLimit","handleSubmitSucces","organization","this","props","quota","maxRate","maxRateInterval","initialData","projectRateLimit","projectLimit","accountRateLimit","accountLimit","react_default","a","createElement","settingsPageHeader","title","t","panels","disablePadding","dist_index_es","px","flex","type","forms_form","data-test-id","saveOnBlur","allowUndo","apiMethod","apiEndpoint","concat","slug","field","label","help","textBlock","className","Object","index_es","marginBottom","tct","rangeField","name","min","max","allowedValues","placeholder","formatLabel","value","number","toLocaleString","step","dangerouslySetInnerHTML","__html","React","Component","propTypes","PropTypes","object","isRequired","OrganizationRateLimitsContainer","createReactClass","displayName","routes","array","mixins","OrganizationState","render","context","organizationRateLimits_OrganizationRateLimit","extends_default"],"mappings":"4UA6BMA,EAjBqB,WAGzB,IAFA,IAAMC,EAAQ,GACVC,EAAI,EACDA,GAAK,KACVD,EAAME,KAAKD,GAETA,GADEA,EAAI,IACD,IACIA,EAAI,IACR,IAEA,IAGT,OAAOD,EAIyBG,GAEbC,qLAKnBC,mBAAqB,qEAIZ,IACAC,EAAgBC,KAAKC,MAArBF,aACAG,EAASH,EAATG,MACAC,EAAwDD,EAAxDC,QAASC,EAA+CF,EAA/CE,gBACVC,EAAc,CAClBC,iBAF6DJ,EAA9BK,cAEG,IAClCC,iBAH6DN,EAAhBO,cAM/C,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAAoBC,MAAOC,YAAE,iBAE7BL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAaC,gBAAc,GACzBP,EAAAC,EAAAC,cAACM,EAAA,IAAD,CAAKC,GAAI,EAAGC,KAAK,KACdL,YAAE,mBAGPL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYK,KAAK,QACdN,YAAC,6MAKJL,EAAAC,EAAAC,cAACU,EAAA,QAAD,CACEC,eAAa,oBACbC,YAAU,EACVC,WAAS,EACTC,UAAU,MACVC,YAAW,kBAAAC,OAAoB7B,EAAa8B,KAAjC,KACXxB,YAAaA,GAEXF,EAoBAO,EAAAC,EAAAC,cAACkB,EAAA,QAAD,CACEC,MAAOhB,YAAE,iBACTiB,KAAMjB,YACJ,4EAGFL,EAAAC,EAAAC,cAACqB,EAAA,QAAD,CAAAC,UAAAC,OAAAC,EAAA,IAAAD,CAAgB,CAACE,aAAc,KAC5BC,cACC,0FACA,CACEnC,UACAC,sBA9BRM,EAAAC,EAAAC,cAAC2B,EAAA,QAAD,CACEC,KAAK,mBACLT,MAAOhB,YAAE,iBACT0B,IAAK,EACLC,IAAK,IACLC,cAAenD,EACfwC,KAAMjB,YACJ,2EAEF6B,YAAY,WACZC,YAAa,SAAAC,GACX,OAAQA,EAEJR,cAAI,oBAAqB,CACvBS,OAAQD,EAAME,mBAFhBjC,YAAE,eAwBZL,EAAAC,EAAAC,cAAC2B,EAAA,QAAD,CACEC,KAAK,mBACLT,MAAOhB,YAAE,qBACTiB,KAAMjB,YACJ,mGAEFkC,KAAM,EACNR,IAAK,GACLC,IAAK,IACLG,YAAa,SAAAC,GACX,OAAiB,MAAVA,EAAA,GAAAlB,OACFkB,EADE,KAGLpC,EAAAC,EAAAC,cAAA,QACEsC,wBAAyB,CAACC,OAAM,GAAAvB,OAAKb,YAAE,YAAP,kCA9FHqC,IAAMC,WAApCxD,EACZyD,UAAY,CACjBvD,aAAcwD,IAAUC,OAAOC,YCzBnC,IAAMC,EAAkCC,IAAiB,CACvDC,YAAa,yBACbN,UAAW,CACTO,OAAQN,IAAUO,OAEpBC,OAAQ,CAACC,KAETC,OAPuD,WAQrD,OAAKjE,KAAKkE,QAAQnE,aAKhBW,EAAAC,EAAAC,cAACuD,EAADC,IAAA,GAA4BpE,KAAKC,MAAjC,CAAwCF,aAAcC,KAAKkE,QAAQnE,gBAJ5D,QASE2D","file":"OrganizationRateLimits.js","sourcesContent":["import {Box} from 'grid-emotion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t, tct} from 'app/locale';\nimport Field from 'app/views/settings/components/forms/field';\nimport Form from 'app/views/settings/components/forms/form';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport RangeField from 'app/views/settings/components/forms/rangeField';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nconst getRateLimitValues = () => {\n  const steps = [];\n  let i = 0;\n  while (i <= 1000000) {\n    steps.push(i);\n    if (i < 10000) {\n      i += 1000;\n    } else if (i < 100000) {\n      i += 10000;\n    } else {\n      i += 100000;\n    }\n  }\n  return steps;\n};\n\n// We can just generate this once\nconst ACCOUNT_RATE_LIMIT_VALUES = getRateLimitValues();\n\nexport default class OrganizationRateLimit extends React.Component {\n  static propTypes = {\n    organization: PropTypes.object.isRequired,\n  };\n\n  handleSubmitSucces = () => {\n    // TODO(billy): Update organization.quota in organizationStore with new values\n  };\n\n  render() {\n    const {organization} = this.props;\n    const {quota} = organization;\n    const {maxRate, maxRateInterval, projectLimit, accountLimit} = quota;\n    const initialData = {\n      projectRateLimit: projectLimit || 100,\n      accountRateLimit: accountLimit,\n    };\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Rate Limits')} />\n\n        <Panel>\n          <PanelHeader disablePadding>\n            <Box px={2} flex=\"1\">\n              {t('Adjust Limits')}\n            </Box>\n          </PanelHeader>\n          <PanelBody>\n            <PanelAlert type=\"info\">\n              {t(`Rate limits allow you to control how much data is stored for this\n                organization. When a rate is exceeded the system will begin discarding\n                data until the next interval.`)}\n            </PanelAlert>\n\n            <Form\n              data-test-id=\"rate-limit-editor\"\n              saveOnBlur\n              allowUndo\n              apiMethod=\"PUT\"\n              apiEndpoint={`/organizations/${organization.slug}/`}\n              initialData={initialData}\n            >\n              {!maxRate ? (\n                <RangeField\n                  name=\"accountRateLimit\"\n                  label={t('Account Limit')}\n                  min={0}\n                  max={1000000}\n                  allowedValues={ACCOUNT_RATE_LIMIT_VALUES}\n                  help={t(\n                    'The maximum number of events to accept across this entire organization.'\n                  )}\n                  placeholder=\"e.g. 500\"\n                  formatLabel={value => {\n                    return !value\n                      ? t('No Limit')\n                      : tct('[number] per hour', {\n                          number: value.toLocaleString(),\n                        });\n                  }}\n                />\n              ) : (\n                <Field\n                  label={t('Account Limit')}\n                  help={t(\n                    'The maximum number of events to accept across this entire organization.'\n                  )}\n                >\n                  <TextBlock css={{marginBottom: 0}}>\n                    {tct(\n                      'Your account is limited to a maximum of [maxRate] events per [maxRateInterval] seconds.',\n                      {\n                        maxRate,\n                        maxRateInterval,\n                      }\n                    )}\n                  </TextBlock>\n                </Field>\n              )}\n              <RangeField\n                name=\"projectRateLimit\"\n                label={t('Per-Project Limit')}\n                help={t(\n                  'The maximum percentage of the account limit (set above) that an individual project can consume.'\n                )}\n                step={5}\n                min={50}\n                max={100}\n                formatLabel={value => {\n                  return value !== 100 ? (\n                    `${value}%`\n                  ) : (\n                    <span\n                      dangerouslySetInnerHTML={{__html: `${t('No Limit')} &mdash; 100%`}}\n                    />\n                  );\n                }}\n              />\n            </Form>\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\n\nimport OrganizationState from 'app/mixins/organizationState';\n\nimport OrganizationRateLimits from './organizationRateLimits';\n\nconst OrganizationRateLimitsContainer = createReactClass({\n  displayName: 'OrganizationRateLimits',\n  propTypes: {\n    routes: PropTypes.array,\n  },\n  mixins: [OrganizationState],\n\n  render() {\n    if (!this.context.organization) {\n      return null;\n    }\n\n    return (\n      <OrganizationRateLimits {...this.props} organization={this.context.organization} />\n    );\n  },\n});\n\nexport default OrganizationRateLimitsContainer;\n"],"sourceRoot":""}