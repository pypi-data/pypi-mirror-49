create
******


Description
===========

Creates a new cross-connect. Oracle recommends you create each cross-
connect in a CrossConnectGroup so you can use link aggregation with
the connection.

After creating the *CrossConnect* object, you need to go the
FastConnect location and request to have the physical cable installed.
For more information, see FastConnect Overview.

For the purposes of access control, you must provide the OCID of the
compartment where you want the cross-connect to reside. If you're not
sure which compartment to use, put the cross-connect in the same
compartment with your VCN. For more information about compartments and
access control, see Overview of the IAM Service. For information about
OCIDs, see Resource Identifiers.

You may optionally specify a *display name* for the cross-connect. It
does not have to be unique, and you can change it. Avoid entering
confidential information.


Usage
=====

   oci network cross-connect create [OPTIONS]


Options
=======


--compartment-id, -c [text]
---------------------------

The OCID of the compartment to contain the cross-connect. [required]


--location-name [text]
----------------------

The name of the FastConnect location where this cross-connect will be
installed. To get a list of the available locations, see
ListCrossConnectLocations.

Example: *CyrusOne, Chandler, AZ* [required]


--port-speed-shape-name [text]
------------------------------

The port speed for this cross-connect. To get a list of the available
port speeds, see ListCrossConnectPortSpeedShapes.

Example: *10 Gbps* [required]


--cross-connect-group-id [text]
-------------------------------

The OCID of the cross-connect group to put this cross-connect in.


--display-name [text]
---------------------

A user-friendly name. Does not have to be unique, and it's changeable.
Avoid entering confidential information.


--far-cross-connect-or-cross-connect-group-id [text]
----------------------------------------------------

If you already have an existing cross-connect or cross-connect group
at this FastConnect location, and you want this new cross-connect to
be on a different router (for the purposes of redundancy), provide the
OCID of that existing cross-connect or cross-connect group.


--near-cross-connect-or-cross-connect-group-id [text]
-----------------------------------------------------

If you already have an existing cross-connect or cross-connect group
at this FastConnect location, and you want this new cross-connect to
be on the same router, provide the OCID of that existing cross-connect
or cross-connect group.


--customer-reference-name [text]
--------------------------------

A reference name or identifier for the physical fiber connection that
this cross-connect uses.


--wait-for-state [PENDING_CUSTOMER|PROVISIONING|PROVISIONED|INACTIVE|TERMINATING|TERMINATED]
--------------------------------------------------------------------------------------------

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. If
timeout is reached, a return code of 2 is returned. For any other
error, a return code of 1 is returned.


--max-wait-seconds [integer]
----------------------------

The maximum time to wait for the resource to reach the lifecycle state
defined by --wait-for-state. Defaults to 1200 seconds.


--wait-interval-seconds [integer]
---------------------------------

Check every --wait-interval-seconds to see whether the resource to see
if it has reached the lifecycle state defined by --wait-for-state.
Defaults to 30 seconds.


--from-json [text]
------------------

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The --generate-full-command-json-input option can be used to generate
a sample json file to be used with this command option. The key names
are pre-populated and match the command option names (converted to
camelCase format, e.g. compartment-id --> compartmentId), while the
values of the keys need to be populated by the user before using the
sample file as an input to this command. For any command option that
accepts multiple values, the value of the key can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions


-?, -h, --help
--------------

For detailed help on any of these individual commands, enter <command>
--help.
