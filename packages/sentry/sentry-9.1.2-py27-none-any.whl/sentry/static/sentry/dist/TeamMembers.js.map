{"version":3,"sources":["webpack:///./app/views/settings/organizationTeams/teamMembers.jsx"],"names":["TeamMembers","createReactClass","displayName","mixins","ApiMixin","OrganizationState","getInitialState","loading","error","dropdownBusy","teamMemberList","orgMemberList","componentWillMount","this","fetchData","componentWillReceiveProps","nextProps","params","props","teamId","orgId","setState","debouncedFetchMembersRequest","lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default","query","_this","fetchMembersRequest","removeMember","member","_this2","leaveTeam","api","memberId","id","success","state","filter","m","IndicatorStore","add","t","duration","_this3","request","concat","data","_this4","addTeamMember","selection","_this5","joinTeam","value","orgMember","find","handleMemberFilterChange","e","target","renderDropdown","access","_this6","has","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","app_components_dropdownButton__WEBPACK_IMPORTED_MODULE_10__","disabled","title","isOpen","size","existingMembers","Set","map","items","searchKey","name","email","label","StyledUserListElement","StyledAvatar","user","className","StyledNameOrEmail","menuHeader","StyledMembersLabel","StyledCreateMemberLink","to","app_components_dropdownAutoComplete__WEBPACK_IMPORTED_MODULE_9__","onSelect","emptyMessage","onChange","busy","onClose","_ref","selectedItem","removeButton","app_components_button__WEBPACK_IMPORTED_MODULE_7__","onClick","bind","app_components_inlineSvg__WEBPACK_IMPORTED_MODULE_17__","src","style","marginRight","space","render","_this7","app_components_loadingIndicator__WEBPACK_IMPORTED_MODULE_14__","app_components_loadingError__WEBPACK_IMPORTED_MODULE_13__","onRetry","getAccess","app_components_panels__WEBPACK_IMPORTED_MODULE_16__","hasButtons","textTransform","length","StyledMemberContainer","key","app_components_idBadge__WEBPACK_IMPORTED_MODULE_5__","avatarSize","useLink","app_views_settings_components_emptyMessage__WEBPACK_IMPORTED_MODULE_18__","icon","styled","p","theme","borderLight","overflowEllipsis","app_components_avatar__WEBPACK_IMPORTED_MODULE_6__","Link"],"mappings":"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","file":"TeamMembers.js","sourcesContent":["import {debounce} from 'lodash';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport styled from 'react-emotion';\n\nimport ApiMixin from 'app/mixins/apiMixin';\nimport IdBadge from 'app/components/idBadge';\nimport Avatar from 'app/components/avatar';\nimport Button from 'app/components/button';\nimport Link from 'app/components/link';\nimport DropdownAutoComplete from 'app/components/dropdownAutoComplete';\nimport DropdownButton from 'app/components/dropdownButton';\nimport IndicatorStore from 'app/stores/indicatorStore';\nimport {joinTeam, leaveTeam} from 'app/actionCreators/teams';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport OrganizationState from 'app/mixins/organizationState';\nimport {Panel, PanelHeader} from 'app/components/panels';\nimport InlineSvg from 'app/components/inlineSvg';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\n\nconst TeamMembers = createReactClass({\n  displayName: 'TeamMembers',\n  mixins: [ApiMixin, OrganizationState],\n\n  getInitialState() {\n    return {\n      loading: true,\n      error: false,\n      dropdownBusy: false,\n      teamMemberList: null,\n      orgMemberList: null,\n    };\n  },\n\n  componentWillMount() {\n    this.fetchData();\n  },\n\n  componentWillReceiveProps(nextProps) {\n    const params = this.props.params;\n    if (\n      nextProps.params.teamId !== params.teamId ||\n      nextProps.params.orgId !== params.orgId\n    ) {\n      this.setState(\n        {\n          loading: true,\n          error: false,\n        },\n        this.fetchData\n      );\n    }\n  },\n\n  debouncedFetchMembersRequest: debounce(function(query) {\n    this.setState(\n      {\n        dropdownBusy: true,\n      },\n      () => this.fetchMembersRequest(query)\n    );\n  }, 200),\n\n  removeMember(member) {\n    const {params} = this.props;\n    leaveTeam(\n      this.api,\n      {\n        orgId: params.orgId,\n        teamId: params.teamId,\n        memberId: member.id,\n      },\n      {\n        success: () => {\n          this.setState({\n            teamMemberList: this.state.teamMemberList.filter(m => {\n              return m.id !== member.id;\n            }),\n          });\n          IndicatorStore.add(t('Successfully removed member from team.'), 'success', {\n            duration: 2000,\n          });\n        },\n        error: () => {\n          IndicatorStore.add(\n            t('There was an error while trying to remove a member from the team.'),\n            'error',\n            {duration: 2000}\n          );\n        },\n      }\n    );\n  },\n\n  fetchMembersRequest(query) {\n    const {orgId} = this.props.params;\n    return this.api.request(`/organizations/${orgId}/members/`, {\n      query: {\n        query,\n      },\n      success: data => {\n        this.setState({\n          orgMemberList: data,\n          dropdownBusy: false,\n        });\n      },\n      error: () => {\n        IndicatorStore.add(t('Unable to load organization members.'), 'error', {\n          duration: 2000,\n        });\n        this.setState({\n          dropdownBusy: false,\n        });\n      },\n    });\n  },\n\n  fetchData() {\n    const params = this.props.params;\n\n    this.api.request(`/teams/${params.orgId}/${params.teamId}/members/`, {\n      success: data => {\n        this.setState({\n          teamMemberList: data,\n          loading: false,\n          error: false,\n        });\n      },\n      error: () => {\n        this.setState({\n          loading: false,\n          error: true,\n        });\n      },\n    });\n\n    this.fetchMembersRequest('');\n  },\n\n  addTeamMember(selection) {\n    const params = this.props.params;\n\n    this.setState({\n      loading: true,\n    });\n\n    // Reset members list after adding member to team\n    this.debouncedFetchMembersRequest('');\n\n    joinTeam(\n      this.api,\n      {\n        orgId: params.orgId,\n        teamId: params.teamId,\n        memberId: selection.value,\n      },\n      {\n        success: () => {\n          const orgMember = this.state.orgMemberList.find(member => {\n            return member.id === selection.value;\n          });\n          this.setState({\n            loading: false,\n            error: false,\n            teamMemberList: this.state.teamMemberList.concat([orgMember]),\n          });\n          IndicatorStore.add(t('Successfully added member to team.'), 'success', {\n            duration: 2000,\n          });\n        },\n        error: () => {\n          this.setState({\n            loading: false,\n          });\n          IndicatorStore.add(t('Unable to add team member.'), 'error', {duration: 2000});\n        },\n      }\n    );\n  },\n\n  /**\n * We perform an API request to support orgs with > 100 members (since that's the max API returns)\n *\n * @param {Event} e React Event when member filter input changes\n */\n  handleMemberFilterChange(e) {\n    this.setState({dropdownBusy: true});\n    this.debouncedFetchMembersRequest(e.target.value);\n  },\n\n  renderDropdown(access) {\n    const {params} = this.props;\n\n    if (!access.has('org:write')) {\n      return (\n        <DropdownButton\n          disabled={true}\n          title={t('You do not have enough permission to add new members')}\n          isOpen={false}\n          size=\"xsmall\"\n        >\n          {t('Add Member')}\n        </DropdownButton>\n      );\n    }\n\n    const existingMembers = new Set(this.state.teamMemberList.map(member => member.id));\n\n    const items = (this.state.orgMemberList || [])\n      .filter(m => !existingMembers.has(m.id))\n      .map(m => {\n        return {\n          searchKey: `${m.name} ${m.email}`,\n          value: m.id,\n          label: (\n            <StyledUserListElement>\n              <StyledAvatar user={m} size={24} className=\"avatar\" />\n              <StyledNameOrEmail>{m.name || m.email}</StyledNameOrEmail>\n            </StyledUserListElement>\n          ),\n        };\n      });\n\n    const menuHeader = (\n      <StyledMembersLabel>\n        {t('Members')}\n        <StyledCreateMemberLink to={`/settings/${params.orgId}/members/new/`}>\n          {t('Add Member')}\n        </StyledCreateMemberLink>\n      </StyledMembersLabel>\n    );\n\n    return (\n      <DropdownAutoComplete\n        items={items}\n        onSelect={this.addTeamMember}\n        menuHeader={menuHeader}\n        emptyMessage={t('No members')}\n        onChange={this.handleMemberFilterChange}\n        busy={this.state.dropdownBusy}\n        onClose={() => this.debouncedFetchMembersRequest('')}\n      >\n        {({isOpen, selectedItem}) => (\n          <DropdownButton isOpen={isOpen} size=\"xsmall\">\n            {t('Add Member')}\n          </DropdownButton>\n        )}\n      </DropdownAutoComplete>\n    );\n  },\n\n  removeButton(member) {\n    return (\n      <Button size=\"small\" onClick={this.removeMember.bind(this, member)}>\n        <InlineSvg\n          src=\"icon-circle-subtract\"\n          size=\"1.25em\"\n          style={{marginRight: space(1)}}\n        />\n        {t('Remove')}\n      </Button>\n    );\n  },\n\n  render() {\n    if (this.state.loading) {\n      return <LoadingIndicator />;\n    } else if (this.state.error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    const {params} = this.props;\n\n    const access = this.getAccess();\n\n    return (\n      <Panel>\n        <PanelHeader hasButtons>\n          <div>{t('Members')}</div>\n          <div style={{textTransform: 'none'}}>{this.renderDropdown(access)}</div>\n        </PanelHeader>\n        {this.state.teamMemberList.length ? (\n          this.state.teamMemberList.map(member => (\n            <StyledMemberContainer key={member.id}>\n              <IdBadge avatarSize={36} member={member} useLink orgId={params.orgId} />\n              {access.has('org:write') && this.removeButton(member)}\n            </StyledMemberContainer>\n          ))\n        ) : (\n          <EmptyMessage icon=\"icon-user\" size=\"large\">\n            {t('Your Team is Empty')}\n          </EmptyMessage>\n        )}\n      </Panel>\n    );\n  },\n});\n\nconst StyledMemberContainer = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  padding: ${space(2)};\n  border-bottom: 1px solid ${p => p.theme.borderLight};\n`;\n\nconst StyledUserListElement = styled('div')`\n  font-size: 0.875em;\n  display: flex;\n  align-items: center;\n  padding: ${space(0.5)};\n`;\n\nconst StyledNameOrEmail = styled('div')`\n  flex-shrink: 1;\n  min-width: 0;\n  ${overflowEllipsis};\n`;\n\nconst StyledAvatar = styled(props => <Avatar {...props} />)`\n  min-width: 1.75em;\n  min-height: 1.75em;\n  width: 1.5em;\n  height: 1.5em;\n  margin-right: ${space(0.5)};\n`;\n\nconst StyledMembersLabel = styled('div')`\n  width: 250px;\n  font-size: 0.875em;\n  padding: ${space(1)} 0;\n  text-transform: uppercase;\n`;\n\nconst StyledCreateMemberLink = styled(Link)`\n  float: right;\n  text-transform: none;\n`;\n\nexport default TeamMembers;\n"],"sourceRoot":""}