# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from needlestack.apis import collections_pb2 as needlestack_dot_apis_dot_collections__pb2
from needlestack.apis import servicers_pb2 as needlestack_dot_apis_dot_servicers__pb2


class MergerStub(object):
  """*******************

  Servicers

  ******************

  Main entrypoint for external clients to run distributed kNN searches 
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Search = channel.unary_unary(
        '/Merger/Search',
        request_serializer=needlestack_dot_apis_dot_servicers__pb2.SearchRequest.SerializeToString,
        response_deserializer=needlestack_dot_apis_dot_servicers__pb2.SearchResponse.FromString,
        )
    self.SearchStream = channel.unary_stream(
        '/Merger/SearchStream',
        request_serializer=needlestack_dot_apis_dot_servicers__pb2.SearchRequest.SerializeToString,
        response_deserializer=needlestack_dot_apis_dot_servicers__pb2.SearchResultItem.FromString,
        )
    self.Retrieve = channel.unary_unary(
        '/Merger/Retrieve',
        request_serializer=needlestack_dot_apis_dot_servicers__pb2.RetrieveRequest.SerializeToString,
        response_deserializer=needlestack_dot_apis_dot_servicers__pb2.RetrieveResponse.FromString,
        )
    self.CollectionConfiguration = channel.unary_unary(
        '/Merger/CollectionConfiguration',
        request_serializer=needlestack_dot_apis_dot_collections__pb2.CollectionConfigurationRequest.SerializeToString,
        response_deserializer=needlestack_dot_apis_dot_collections__pb2.CollectionConfigurationResponse.FromString,
        )
    self.GetCollections = channel.unary_unary(
        '/Merger/GetCollections',
        request_serializer=needlestack_dot_apis_dot_collections__pb2.CollectionsRequest.SerializeToString,
        response_deserializer=needlestack_dot_apis_dot_collections__pb2.CollectionsResponse.FromString,
        )


class MergerServicer(object):
  """*******************

  Servicers

  ******************

  Main entrypoint for external clients to run distributed kNN searches 
  """

  def Search(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SearchStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Retrieve(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CollectionConfiguration(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCollections(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MergerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Search': grpc.unary_unary_rpc_method_handler(
          servicer.Search,
          request_deserializer=needlestack_dot_apis_dot_servicers__pb2.SearchRequest.FromString,
          response_serializer=needlestack_dot_apis_dot_servicers__pb2.SearchResponse.SerializeToString,
      ),
      'SearchStream': grpc.unary_stream_rpc_method_handler(
          servicer.SearchStream,
          request_deserializer=needlestack_dot_apis_dot_servicers__pb2.SearchRequest.FromString,
          response_serializer=needlestack_dot_apis_dot_servicers__pb2.SearchResultItem.SerializeToString,
      ),
      'Retrieve': grpc.unary_unary_rpc_method_handler(
          servicer.Retrieve,
          request_deserializer=needlestack_dot_apis_dot_servicers__pb2.RetrieveRequest.FromString,
          response_serializer=needlestack_dot_apis_dot_servicers__pb2.RetrieveResponse.SerializeToString,
      ),
      'CollectionConfiguration': grpc.unary_unary_rpc_method_handler(
          servicer.CollectionConfiguration,
          request_deserializer=needlestack_dot_apis_dot_collections__pb2.CollectionConfigurationRequest.FromString,
          response_serializer=needlestack_dot_apis_dot_collections__pb2.CollectionConfigurationResponse.SerializeToString,
      ),
      'GetCollections': grpc.unary_unary_rpc_method_handler(
          servicer.GetCollections,
          request_deserializer=needlestack_dot_apis_dot_collections__pb2.CollectionsRequest.FromString,
          response_serializer=needlestack_dot_apis_dot_collections__pb2.CollectionsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Merger', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class SearcherStub(object):
  """Worker used by `Merger` to perform single-node kNN search 
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Search = channel.unary_unary(
        '/Searcher/Search',
        request_serializer=needlestack_dot_apis_dot_servicers__pb2.SearchRequest.SerializeToString,
        response_deserializer=needlestack_dot_apis_dot_servicers__pb2.SearchResponse.FromString,
        )
    self.SearchStream = channel.unary_stream(
        '/Searcher/SearchStream',
        request_serializer=needlestack_dot_apis_dot_servicers__pb2.SearchRequest.SerializeToString,
        response_deserializer=needlestack_dot_apis_dot_servicers__pb2.SearchResultItem.FromString,
        )
    self.Retrieve = channel.unary_unary(
        '/Searcher/Retrieve',
        request_serializer=needlestack_dot_apis_dot_servicers__pb2.RetrieveRequest.SerializeToString,
        response_deserializer=needlestack_dot_apis_dot_servicers__pb2.RetrieveResponse.FromString,
        )
    self.CollectionLoad = channel.unary_unary(
        '/Searcher/CollectionLoad',
        request_serializer=needlestack_dot_apis_dot_collections__pb2.CollectionLoadRequest.SerializeToString,
        response_deserializer=needlestack_dot_apis_dot_collections__pb2.CollectionLoadResponse.FromString,
        )


class SearcherServicer(object):
  """Worker used by `Merger` to perform single-node kNN search 
  """

  def Search(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SearchStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Retrieve(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CollectionLoad(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SearcherServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Search': grpc.unary_unary_rpc_method_handler(
          servicer.Search,
          request_deserializer=needlestack_dot_apis_dot_servicers__pb2.SearchRequest.FromString,
          response_serializer=needlestack_dot_apis_dot_servicers__pb2.SearchResponse.SerializeToString,
      ),
      'SearchStream': grpc.unary_stream_rpc_method_handler(
          servicer.SearchStream,
          request_deserializer=needlestack_dot_apis_dot_servicers__pb2.SearchRequest.FromString,
          response_serializer=needlestack_dot_apis_dot_servicers__pb2.SearchResultItem.SerializeToString,
      ),
      'Retrieve': grpc.unary_unary_rpc_method_handler(
          servicer.Retrieve,
          request_deserializer=needlestack_dot_apis_dot_servicers__pb2.RetrieveRequest.FromString,
          response_serializer=needlestack_dot_apis_dot_servicers__pb2.RetrieveResponse.SerializeToString,
      ),
      'CollectionLoad': grpc.unary_unary_rpc_method_handler(
          servicer.CollectionLoad,
          request_deserializer=needlestack_dot_apis_dot_collections__pb2.CollectionLoadRequest.FromString,
          response_serializer=needlestack_dot_apis_dot_collections__pb2.CollectionLoadResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Searcher', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
