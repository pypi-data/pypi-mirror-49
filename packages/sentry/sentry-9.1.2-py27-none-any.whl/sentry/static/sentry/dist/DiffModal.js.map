{"version":3,"sources":["webpack:///./app/components/issueDiff.jsx","webpack:///./app/components/modals/diffModal.jsx"],"names":["IssueDiff","_getPrototypeOf2","_this","classCallCheck_default","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","state","loading","baseEvent","targetEvent","SplitDiffAsync","_this2","_this$props","props","baseIssueId","targetIssueId","baseEventId","targetEventId","Promise","all","__webpack_require__","e","then","bind","fetchData","_ref","_ref2","slicedToArray_default","default","setState","getException","catch","addErrorMessage","t","event","entries","exc","find","_ref3","type","msg","_ref4","data","message","values","filter","value","stacktrace","map","rawStacktraceContent","platform","reduce","acc","issueId","eventId","_this$props2","orgId","projectId","api","requestPromise","getEndpoint","_this3","className","DiffComponent","diffReady","react_default","a","createElement","StyledIssueDiff","loadingIndicator","i","key","base","target","React","Component","propTypes","PropTypes","object","string","isRequired","defaultProps","IssueDiffContainer","createReactClass","displayName","mixins","ApiMixin","render","issueDiff_IssueDiff","extends_default","getLoadingStyle","p","css","styled","DiffModal","Body","issueDiff","func"],"mappings":"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","file":"DiffModal.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport styled, {css} from 'react-emotion';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport ApiMixin from 'app/mixins/apiMixin';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport rawStacktraceContent from 'app/components/events/interfaces/rawStacktraceContent';\n\nclass IssueDiff extends React.Component {\n  static propTypes = {\n    api: PropTypes.object,\n    baseIssueId: PropTypes.string.isRequired,\n    targetIssueId: PropTypes.string.isRequired,\n    baseEventId: PropTypes.string.isRequired,\n    targetEventId: PropTypes.string.isRequired,\n    orgId: PropTypes.string.isRequired,\n    projectId: PropTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    baseEventId: 'latest',\n    targetEventId: 'latest',\n  };\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      baseEvent: {},\n      targetEvent: {},\n\n      // `SplitDiffAsync` is an async-loaded component\n      // This will eventually contain a reference to the exported component from `./splitDiff`\n      SplitDiffAsync: null,\n    };\n  }\n\n  componentDidMount() {\n    const {baseIssueId, targetIssueId, baseEventId, targetEventId} = this.props;\n\n    // Fetch component and event data\n    Promise.all([\n      import(/* webpackChunkName: \"splitDiff\" */ './splitDiff'),\n      this.fetchData(baseIssueId, baseEventId),\n      this.fetchData(targetIssueId, targetEventId),\n    ])\n      .then(([{default: SplitDiffAsync}, baseEvent, targetEvent]) => {\n        this.setState({\n          SplitDiffAsync,\n          baseEvent: this.getException(baseEvent),\n          targetEvent: this.getException(targetEvent),\n          loading: false,\n        });\n      })\n      .catch(() => {\n        addErrorMessage(t('Error loading events'));\n      });\n  }\n\n  getException(event) {\n    if (!event || !event.entries) {\n      return [];\n    }\n\n    // TODO(billyvg): This only accounts for the first exception, will need navigation to be able to\n    // diff multiple exceptions\n    //\n    // See: https://github.com/getsentry/sentry/issues/6055\n    const exc = event.entries.find(({type}) => type === 'exception');\n\n    if (!exc) {\n      // Look for a message if not an exception\n      const msg = event.entries.find(({type}) => type === 'message');\n      if (!msg) {\n        return [];\n      }\n\n      return msg.data && msg.data.message && [msg.data.message];\n    }\n\n    if (!exc.data) {\n      return [];\n    }\n\n    return exc.data.values\n      .filter(value => !!value.stacktrace)\n      .map(value => rawStacktraceContent(value.stacktrace, event.platform, value))\n      .reduce((acc, value) => {\n        return acc.concat(value);\n      }, []);\n  }\n\n  getEndpoint(issueId, eventId) {\n    const {orgId, projectId} = this.props;\n\n    if (eventId !== 'latest') {\n      return `/projects/${orgId}/${projectId}/events/${eventId}/`;\n    }\n\n    return `/issues/${issueId}/events/${eventId}/`;\n  }\n\n  fetchData(issueId, eventId) {\n    return this.props.api.requestPromise(this.getEndpoint(issueId, eventId));\n  }\n\n  render() {\n    const {className} = this.props;\n    const DiffComponent = this.state.SplitDiffAsync;\n    const diffReady = !this.state.loading && !!DiffComponent;\n\n    return (\n      <StyledIssueDiff className={className} loading={this.state.loading}>\n        {this.state.loading && <LoadingIndicator />}\n        {diffReady &&\n          this.state.baseEvent.map((value, i) => (\n            <DiffComponent\n              key={i}\n              base={value}\n              target={this.state.targetEvent[i] || ''}\n              type=\"words\"\n            />\n          ))}\n      </StyledIssueDiff>\n    );\n  }\n}\n\nconst IssueDiffContainer = createReactClass({\n  displayName: 'IssueDiffContainer',\n  mixins: [ApiMixin],\n  render() {\n    return <IssueDiff {...this.props} api={this.api} />;\n  },\n});\n\nexport default IssueDiffContainer;\nexport {IssueDiff};\n\nconst getLoadingStyle = p =>\n  (p.loading &&\n    css`\n      background-color: white;\n      justify-content: center;\n    `) ||\n  '';\n\nconst StyledIssueDiff = styled('div')`\n  background-color: #f7f8f9;\n  overflow: auto;\n  padding: 10px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  ${getLoadingStyle};\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport IssueDiff from 'app/components/issueDiff';\n\nclass DiffModal extends React.Component {\n  static propTypes = {\n    Body: PropTypes.func,\n  };\n\n  render() {\n    const {className, Body} = this.props;\n\n    return (\n      <Body>\n        <IssueDiff className={className} {...this.props} />\n      </Body>\n    );\n  }\n}\n\nexport default DiffModal;\n"],"sourceRoot":""}