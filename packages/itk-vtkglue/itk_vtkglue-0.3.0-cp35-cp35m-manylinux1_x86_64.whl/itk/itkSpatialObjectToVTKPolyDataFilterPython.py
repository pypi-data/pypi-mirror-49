# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import vtk
import ctypes
import os
if os.name != 'nt':
  _vtk_major_version = str(vtk.vtkVersion.GetVTKMajorVersion())
  _vtk_minor_version = str(vtk.vtkVersion.GetVTKMinorVersion())
  _vtkIOlib = 'libvtkIO-' + _vtk_major_version + '.' + _vtk_minor_version + '.so.1'
  ctypes.CDLL(_vtkIOlib, ctypes.RTLD_GLOBAL)
  _vtkInteractionlib = 'libvtkInteraction-' + _vtk_major_version + '.' + _vtk_minor_version + '.so.1'
  ctypes.CDLL(_vtkInteractionlib, ctypes.RTLD_GLOBAL)
  _vtkOpenGLlib = 'libvtkOpenGL-' + _vtk_major_version + '.' + _vtk_minor_version + '.so.1'
  ctypes.CDLL(_vtkOpenGLlib, ctypes.RTLD_GLOBAL)
  import sys
  _vtkWrappinglib = 'libvtkWrappingPython' + str(sys.version_info[0]) + str(sys.version_info[1]) + 'Core-' + _vtk_major_version + '.'  + _vtk_minor_version + '.so.1'
  ctypes.CDLL(_vtkWrappinglib, ctypes.RTLD_GLOBAL)





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkSpatialObjectToVTKPolyDataFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSpatialObjectToVTKPolyDataFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkSpatialObjectToVTKPolyDataFilterPython
            return _itkSpatialObjectToVTKPolyDataFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSpatialObjectToVTKPolyDataFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSpatialObjectToVTKPolyDataFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSpatialObjectToVTKPolyDataFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSpatialObjectBasePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import pyBasePython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import ITKCommonBasePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkMatrixPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import itkAffineTransformPython
import itkTransformBasePython
import itkArray2DPython
import itkVariableLengthVectorPython
import itkSymmetricSecondRankTensorPython
import itkDiffusionTensor3DPython
import itkArrayPython
import itkOptimizerParametersPython
import itkMatrixOffsetTransformBasePython
import itkImageRegionPython

def itkSpatialObjectToVTKPolyDataFilter3_New():
  return itkSpatialObjectToVTKPolyDataFilter3.New()


def itkSpatialObjectToVTKPolyDataFilter2_New():
  return itkSpatialObjectToVTKPolyDataFilter2.New()

class itkSpatialObjectToVTKPolyDataFilter2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkSpatialObjectToVTKPolyDataFilter2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpatialObjectToVTKPolyDataFilter2_Pointer":
        """__New_orig__() -> itkSpatialObjectToVTKPolyDataFilter2_Pointer"""
        return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpatialObjectToVTKPolyDataFilter2_Pointer":
        """Clone(itkSpatialObjectToVTKPolyDataFilter2 self) -> itkSpatialObjectToVTKPolyDataFilter2_Pointer"""
        return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter2_Clone(self)


    def GetOutput(self) -> "vtkPolyData *":
        """GetOutput(itkSpatialObjectToVTKPolyDataFilter2 self) -> vtkPolyData *"""
        return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter2_GetOutput(self)


    def SetInput(self, arg0: 'itkSpatialObject2') -> "void":
        """SetInput(itkSpatialObjectToVTKPolyDataFilter2 self, itkSpatialObject2 arg0)"""
        return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter2_SetInput(self, arg0)


    def GetInput(self, *args) -> "itkSpatialObject2 const *":
        """
        GetInput(itkSpatialObjectToVTKPolyDataFilter2 self) -> itkSpatialObject2
        GetInput(itkSpatialObjectToVTKPolyDataFilter2 self, unsigned int idx) -> itkSpatialObject2
        """
        return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter2_GetInput(self, *args)

    __swig_destroy__ = _itkSpatialObjectToVTKPolyDataFilterPython.delete_itkSpatialObjectToVTKPolyDataFilter2

    def cast(obj: 'itkLightObject') -> "itkSpatialObjectToVTKPolyDataFilter2 *":
        """cast(itkLightObject obj) -> itkSpatialObjectToVTKPolyDataFilter2"""
        return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToVTKPolyDataFilter2

        Create a new object of the class itkSpatialObjectToVTKPolyDataFilter2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToVTKPolyDataFilter2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToVTKPolyDataFilter2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpatialObjectToVTKPolyDataFilter2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpatialObjectToVTKPolyDataFilter2.Clone = new_instancemethod(_itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter2_Clone, None, itkSpatialObjectToVTKPolyDataFilter2)
itkSpatialObjectToVTKPolyDataFilter2.GetOutput = new_instancemethod(_itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter2_GetOutput, None, itkSpatialObjectToVTKPolyDataFilter2)
itkSpatialObjectToVTKPolyDataFilter2.SetInput = new_instancemethod(_itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter2_SetInput, None, itkSpatialObjectToVTKPolyDataFilter2)
itkSpatialObjectToVTKPolyDataFilter2.GetInput = new_instancemethod(_itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter2_GetInput, None, itkSpatialObjectToVTKPolyDataFilter2)
itkSpatialObjectToVTKPolyDataFilter2_swigregister = _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter2_swigregister
itkSpatialObjectToVTKPolyDataFilter2_swigregister(itkSpatialObjectToVTKPolyDataFilter2)

def itkSpatialObjectToVTKPolyDataFilter2___New_orig__() -> "itkSpatialObjectToVTKPolyDataFilter2_Pointer":
    """itkSpatialObjectToVTKPolyDataFilter2___New_orig__() -> itkSpatialObjectToVTKPolyDataFilter2_Pointer"""
    return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter2___New_orig__()

def itkSpatialObjectToVTKPolyDataFilter2_cast(obj: 'itkLightObject') -> "itkSpatialObjectToVTKPolyDataFilter2 *":
    """itkSpatialObjectToVTKPolyDataFilter2_cast(itkLightObject obj) -> itkSpatialObjectToVTKPolyDataFilter2"""
    return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter2_cast(obj)

class itkSpatialObjectToVTKPolyDataFilter3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkSpatialObjectToVTKPolyDataFilter3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpatialObjectToVTKPolyDataFilter3_Pointer":
        """__New_orig__() -> itkSpatialObjectToVTKPolyDataFilter3_Pointer"""
        return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpatialObjectToVTKPolyDataFilter3_Pointer":
        """Clone(itkSpatialObjectToVTKPolyDataFilter3 self) -> itkSpatialObjectToVTKPolyDataFilter3_Pointer"""
        return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter3_Clone(self)


    def GetOutput(self) -> "vtkPolyData *":
        """GetOutput(itkSpatialObjectToVTKPolyDataFilter3 self) -> vtkPolyData *"""
        return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter3_GetOutput(self)


    def SetInput(self, arg0: 'itkSpatialObject3') -> "void":
        """SetInput(itkSpatialObjectToVTKPolyDataFilter3 self, itkSpatialObject3 arg0)"""
        return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter3_SetInput(self, arg0)


    def GetInput(self, *args) -> "itkSpatialObject3 const *":
        """
        GetInput(itkSpatialObjectToVTKPolyDataFilter3 self) -> itkSpatialObject3
        GetInput(itkSpatialObjectToVTKPolyDataFilter3 self, unsigned int idx) -> itkSpatialObject3
        """
        return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter3_GetInput(self, *args)

    __swig_destroy__ = _itkSpatialObjectToVTKPolyDataFilterPython.delete_itkSpatialObjectToVTKPolyDataFilter3

    def cast(obj: 'itkLightObject') -> "itkSpatialObjectToVTKPolyDataFilter3 *":
        """cast(itkLightObject obj) -> itkSpatialObjectToVTKPolyDataFilter3"""
        return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToVTKPolyDataFilter3

        Create a new object of the class itkSpatialObjectToVTKPolyDataFilter3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToVTKPolyDataFilter3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToVTKPolyDataFilter3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpatialObjectToVTKPolyDataFilter3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpatialObjectToVTKPolyDataFilter3.Clone = new_instancemethod(_itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter3_Clone, None, itkSpatialObjectToVTKPolyDataFilter3)
itkSpatialObjectToVTKPolyDataFilter3.GetOutput = new_instancemethod(_itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter3_GetOutput, None, itkSpatialObjectToVTKPolyDataFilter3)
itkSpatialObjectToVTKPolyDataFilter3.SetInput = new_instancemethod(_itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter3_SetInput, None, itkSpatialObjectToVTKPolyDataFilter3)
itkSpatialObjectToVTKPolyDataFilter3.GetInput = new_instancemethod(_itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter3_GetInput, None, itkSpatialObjectToVTKPolyDataFilter3)
itkSpatialObjectToVTKPolyDataFilter3_swigregister = _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter3_swigregister
itkSpatialObjectToVTKPolyDataFilter3_swigregister(itkSpatialObjectToVTKPolyDataFilter3)

def itkSpatialObjectToVTKPolyDataFilter3___New_orig__() -> "itkSpatialObjectToVTKPolyDataFilter3_Pointer":
    """itkSpatialObjectToVTKPolyDataFilter3___New_orig__() -> itkSpatialObjectToVTKPolyDataFilter3_Pointer"""
    return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter3___New_orig__()

def itkSpatialObjectToVTKPolyDataFilter3_cast(obj: 'itkLightObject') -> "itkSpatialObjectToVTKPolyDataFilter3 *":
    """itkSpatialObjectToVTKPolyDataFilter3_cast(itkLightObject obj) -> itkSpatialObjectToVTKPolyDataFilter3"""
    return _itkSpatialObjectToVTKPolyDataFilterPython.itkSpatialObjectToVTKPolyDataFilter3_cast(obj)


def spatial_object_to_vtk_poly_data_filter(*args, **kwargs):
    """Procedural interface for SpatialObjectToVTKPolyDataFilter"""
    import itk
    instance = itk.SpatialObjectToVTKPolyDataFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def spatial_object_to_vtk_poly_data_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.SpatialObjectToVTKPolyDataFilter, itkTemplate.itkTemplate):
        spatial_object_to_vtk_poly_data_filter.__doc__ = itk.SpatialObjectToVTKPolyDataFilter.values()[0].__doc__
    else:
        spatial_object_to_vtk_poly_data_filter.__doc__ = itk.SpatialObjectToVTKPolyDataFilter.__doc__




