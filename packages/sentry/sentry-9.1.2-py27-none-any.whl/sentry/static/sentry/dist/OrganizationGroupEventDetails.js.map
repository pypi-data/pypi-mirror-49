{"version":3,"sources":["webpack:///./app/views/groupDetails/organization/groupEventDetails.jsx"],"names":["withGlobalSelection","props","selection","otherProps","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","environments","OrganizationEnvironmentStore","getActive","filter","env","includes","name","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_shared_groupEventDetails__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"oLAMeA,sBAAoB,SAAAC,GAAS,IACnCC,EAA4BD,EAA5BC,UAAcC,EADqBC,IACPH,EADO,eAEpCI,EAAeC,IAA6BC,YAAYC,OAAO,SAAAC,GAAG,OACtEP,EAAUG,aAAaK,SAASD,EAAIE,QAGtC,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAADC,IAAA,GAAuBb,EAAvB,CAAmCE,aAAcA","file":"OrganizationGroupEventDetails.js","sourcesContent":["import React from 'react';\nimport withGlobalSelection from 'app/utils/withGlobalSelection';\nimport OrganizationEnvironmentStore from 'app/stores/organizationEnvironmentsStore';\n\nimport GroupEventDetails from '../shared/groupEventDetails';\n\nexport default withGlobalSelection(props => {\n  const {selection, ...otherProps} = props;\n  const environments = OrganizationEnvironmentStore.getActive().filter(env =>\n    selection.environments.includes(env.name)\n  );\n\n  return <GroupEventDetails {...otherProps} environments={environments} />;\n});\n"],"sourceRoot":""}