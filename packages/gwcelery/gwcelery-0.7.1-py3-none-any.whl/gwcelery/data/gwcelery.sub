#!/usr/bin/env condor_submit
accounting_group = ligo.dev.o2.cbc.pe.bayestar
accounting_group_user = leo.singer
universe = local
getenv = true
environment = "CELERY_BROKER_URL=redis+socket://$ENV(PWD)/redis.sock"
executable = /usr/bin/env
log = gwcelery-condor.log
on_exit_remove = false
JobBatchName = gwcelery

arguments = "redis-server --loglevel verbose --port 0 --unixsocket redis.sock --unixsocketperm 700 --appendonly yes --client-output-buffer-limit normal 0 0 0 --client-output-buffer-limit slave 256mb 64mb 60 --client-output-buffer-limit pubsub 256mb 64mb 60"
description = redis-server
error =
output = gwcelery-redis.log
queue

arguments = "gwcelery beat"
description = gwcelery-beat
error = gwcelery-beat.log
output =
queue

arguments = "gwcelery worker -l info -n gwcelery-worker -Q celery --lvalert"
description = gwcelery-worker
error = gwcelery-worker.log
output =
queue

arguments = "gwcelery worker -l info -n gwcelery-openmp-worker -Q openmp -c 1"
description = gwcelery-openmp-worker
error = gwcelery-openmp-worker.log
output =
queue

arguments = "gwcelery worker -l info -n gwcelery-exttrig-worker -Q exttrig -c 1"
description = gwcelery-exttrig-worker
error = gwcelery-exttrig-worker.log
output =
queue

arguments = "gwcelery worker -l info -n gwcelery-superevent-worker -Q superevent -c 1"
description = gwcelery-superevent-worker
error = gwcelery-superevent-worker.log
output =
queue

arguments = "gwcelery worker -l info -n gwcelery-voevent-worker -Q voevent -P solo"
description = gwcelery-voevent-worker
error = gwcelery-voevent-worker.log
output =
queue

arguments = "gwcelery flask run --with-threads --host 127.0.0.1"
description = gwcelery-flask
error = gwcelery-flask.log
output =
queue

arguments = "gwcelery flower --address=127.0.0.1"
description = gwcelery-flower
error = gwcelery-flower.log
output =
queue
