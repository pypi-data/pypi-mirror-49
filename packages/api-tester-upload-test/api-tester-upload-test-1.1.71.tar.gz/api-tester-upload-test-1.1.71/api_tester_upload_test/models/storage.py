# -*- coding: utf-8 -*-

"""
    api_tester_upload_test

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Storage(object):

    """Implementation of the 'storage' model.

    TODO: type model description here.

    Attributes:
        usage (string): TODO: type description here.
        limit (string): TODO: type description here.
        otl (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "usage":'usage',
        "limit":'limit',
        "otl":'otl'
    }

    def __init__(self,
                 usage=None,
                 limit=None,
                 otl=None):
        """Constructor for the Storage class"""

        # Initialize members of the class
        self.usage = usage
        self.limit = limit
        self.otl = otl


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        usage = dictionary.get('usage')
        limit = dictionary.get('limit')
        otl = dictionary.get('otl')

        # Return an object of this model
        return cls(usage,
                   limit,
                   otl)


