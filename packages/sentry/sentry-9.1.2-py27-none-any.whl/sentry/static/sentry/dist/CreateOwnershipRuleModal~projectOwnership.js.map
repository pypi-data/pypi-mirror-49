{"version":3,"sources":["webpack:///./app/components/forms/multiSelectControl.jsx","webpack:///./app/views/settings/project/projectOwnership/selectOwners.jsx","webpack:///./app/views/settings/project/projectOwnership/ruleBuilder.jsx","webpack:///./app/views/settings/project/projectOwnership/ownerInput.jsx"],"names":["MultiSelectControl","react_default","a","createElement","selectControl","extends_default","this","props","multiple","React","Component","ValueComponent","handleClick","_this","onRemove","value","onClick","actorAvatar","actor","size","propTypes","PropTypes","object","func","getSearchKeyForUser","user","concat","email","toLowerCase","name","SelectOwners","_getPrototypeOf3","_this2","classCallCheck_default","_len2","arguments","length","args","Array","_key2","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","state","loading","inputValue","renderUserBadge","idBadge","avatarSize","hideEmail","useLink","createMentionableUser","buildUserId","id","label","searchKey","type","createUnmentionableUser","_ref","objectSpread_default","disabled","DisabledLabel","tooltip","tooltipOptions","container","placement","title","t","createMentionableTeam","team","buildTeamId","slug","createUnmentionableTeam","canAddTeam","organization","access","includes","index_es","justify","AddToProjectButton","borderless","handleAddTeamToProject","bind","assertThisInitialized_default","inlineSvg","src","handleChange","newValue","onChange","handleInputChange","setState","onInputChange","queryMembers","debounce_default","query","cb","api","requestPromise","then","data","err","handleLoadOptions","usersInProject","getMentionableUsers","teamsInProject","getMentionableTeams","teamsNotInProject","getTeamsNotInProject","usersInProjectById","map","_ref2","Promise","resolve","reject","result","members","filter","_ref3","indexOf","options","toConsumableArray_default","Client","projectsStoreMixin","Reflux","listenTo","ProjectsStore","closeSelectMenu","componentDidMount","componentWillUnmount","MemberListStore","getAll","project","projectData","getBySlug","teams","undefined","TeamStore","excludedTeamIds","_ref4","selectRef","input","ReactDOM","findDOMNode","querySelector","blur","oldValue","addTeamToProject","_this3","multiSelectControl_MultiSelectControl","filterOptions","filterText","_ref5","ref","loadOptions","defaultOptions","async","clearable","cache","valueComponent","placeholder","className","Object","emotion_dist_index_es","width","SentryTypes","Project","Organization","array","bool","styled","target","Button","initialState","text","owners","isValid","RuleBuilder","checkIsValid","handleTypeChange","val","handleChangeValue","e","handleChangeOwners","handleAddRule","_this$state","ownerText","owner","memberListStore","getById","join","rule","onAddRule","addErrorMessage","handleSelectCandidate","_this$props","urls","paths","_this$state2","Fragment","Candidates","v","RuleCandidate","key","AddIcon","StyledTextOverflow","TypeHint","BuilderBar","BuilderSelect","showSearch","style","BuilderInput","controlled","Divider","flex","align","mr","selectOwners_SelectOwners","AddButton","priority","icon","arrayOf","string","p","theme","borderDark","TextOverflow","familyMono","InlineSvg","space","SelectField","Input","OwnerInput","handleUpdateOwnership","error","request","method","raw","addSuccessMessage","initialText","catch","responseJSON","status","startsWith","InvalidOwners","SyntaxOverlay","line","match","member","display","_this$props2","ruleBuilder","position","onKeyDown","metaKey","StyledTextArea","spellCheck","autoComplete","autoCorrect","autoCapitalize","parseError","SaveButton","components_button","inputStyles","TextareaAutosize"],"mappings":"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","file":"CreateOwnershipRuleModal~projectOwnership.js","sourcesContent":["import React from 'react';\n\nimport SelectControl from 'app/components/forms/selectControl';\n\nexport default class MultiSelectControl extends React.Component {\n  render() {\n    return <SelectControl {...this.props} multiple={true} />;\n  }\n}\n","import {debounce} from 'lodash';\nimport {Flex} from 'grid-emotion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Reflux from 'reflux';\nimport styled from 'react-emotion';\n\nimport {addTeamToProject} from 'app/actionCreators/projects';\nimport {t} from 'app/locale';\nimport {buildUserId, buildTeamId} from 'app/utils';\nimport {Client} from 'app/api';\nimport MemberListStore from 'app/stores/memberListStore';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport TeamStore from 'app/stores/teamStore';\nimport IdBadge from 'app/components/idBadge';\nimport MultiSelectControl from 'app/components/forms/multiSelectControl';\nimport ActorAvatar from 'app/components/actorAvatar';\nimport SentryTypes from 'app/sentryTypes';\nimport Button from 'app/components/button';\nimport InlineSvg from 'app/components/inlineSvg';\nimport Tooltip from 'app/components/tooltip';\n\nclass ValueComponent extends React.Component {\n  static propTypes = {\n    value: PropTypes.object,\n    onRemove: PropTypes.func,\n  };\n\n  handleClick = () => {\n    this.props.onRemove(this.props.value);\n  };\n\n  render() {\n    return (\n      <a onClick={this.handleClick}>\n        <ActorAvatar actor={this.props.value.actor} size={28} />\n      </a>\n    );\n  }\n}\n\nconst getSearchKeyForUser = user =>\n  `${user.email && user.email.toLowerCase()} ${user.name && user.name.toLowerCase()}`;\n\nexport default class SelectOwners extends React.Component {\n  static propTypes = {\n    project: SentryTypes.Project,\n    organization: SentryTypes.Organization,\n    value: PropTypes.array,\n    onChange: PropTypes.func,\n    onInputChange: PropTypes.func,\n    disabled: PropTypes.bool,\n  };\n\n  constructor(...args) {\n    super(...args);\n    this.api = new Client();\n\n    // See comments in `handleAddTeamToProject` for why we close the menu this way\n    this.projectsStoreMixin = Reflux.listenTo(ProjectsStore, () => {\n      this.closeSelectMenu();\n    });\n  }\n\n  state = {\n    loading: false,\n    inputValue: '',\n  };\n\n  componentDidMount() {\n    if (this.projectsStoreMixin) {\n      this.projectsStoreMixin.componentDidMount();\n    }\n  }\n\n  componentWillUnmount() {\n    this.api = null;\n\n    if (this.projectsStoreMixin) {\n      this.projectsStoreMixin.componentWillUnmount();\n    }\n  }\n\n  renderUserBadge = user => {\n    return <IdBadge avatarSize={24} user={user} hideEmail useLink={false} />;\n  };\n\n  createMentionableUser = user => {\n    return {\n      value: buildUserId(user.id),\n      label: this.renderUserBadge(user),\n      searchKey: getSearchKeyForUser(user),\n      actor: {\n        type: 'user',\n        id: user.id,\n        name: user.name,\n      },\n    };\n  };\n\n  createUnmentionableUser = ({user}) => {\n    return {\n      ...this.createMentionableUser(user),\n      disabled: true,\n      label: (\n        <DisabledLabel>\n          <Tooltip\n            tooltipOptions={{container: 'body', placement: 'left'}}\n            title={t('%s is not a member of project', user.name || user.email)}\n          >\n            {this.renderUserBadge(user)}\n          </Tooltip>\n        </DisabledLabel>\n      ),\n    };\n  };\n\n  createMentionableTeam = team => {\n    return {\n      value: buildTeamId(team.id),\n      label: <IdBadge team={team} />,\n      searchKey: `#${team.slug}`,\n      actor: {\n        type: 'team',\n        id: team.id,\n        name: team.slug,\n      },\n    };\n  };\n\n  createUnmentionableTeam = team => {\n    const {organization} = this.props;\n    const canAddTeam = organization.access.includes('project:write');\n\n    return {\n      ...this.createMentionableTeam(team),\n      disabled: true,\n      label: (\n        <Flex justify=\"space-between\">\n          <DisabledLabel>\n            <Tooltip\n              tooltipOptions={{container: 'body', placement: 'left'}}\n              title={t('%s is not a member of project', `#${team.slug}`)}\n            >\n              <IdBadge team={team} />\n            </Tooltip>\n          </DisabledLabel>\n          <Tooltip\n            title={\n              canAddTeam\n                ? t('Add %s to project', `#${team.slug}`)\n                : t('You do not have permission to add team to project.')\n            }\n          >\n            <AddToProjectButton\n              size=\"zero\"\n              borderless\n              disabled={!canAddTeam}\n              onClick={this.handleAddTeamToProject.bind(this, team)}\n            >\n              <InlineSvg src=\"icon-circle-add\" />\n            </AddToProjectButton>\n          </Tooltip>\n        </Flex>\n      ),\n    };\n  };\n\n  getMentionableUsers() {\n    return MemberListStore.getAll().map(this.createMentionableUser);\n  }\n\n  getMentionableTeams() {\n    const {project} = this.props;\n    const projectData = ProjectsStore.getBySlug(project.slug);\n\n    if (!projectData) {\n      return [];\n    }\n\n    return projectData.teams.map(this.createMentionableTeam);\n  }\n\n  /**\n   * Get list of teams that are not in the current project, for use in `MultiSelectMenu`\n   *\n   * @param {Team[]} teamsInProject A list of teams that are in the current project\n   */\n  getTeamsNotInProject(teamsInProject = []) {\n    const teams = TeamStore.getAll() || [];\n    const excludedTeamIds = teamsInProject.map(({actor}) => actor.id);\n\n    return teams\n      .filter(team => excludedTeamIds.indexOf(team.id) === -1)\n      .map(this.createUnmentionableTeam);\n  }\n\n  /**\n   * Closes the select menu by blurring input if possible since that seems to be the only\n   * way to close it.\n   */\n  closeSelectMenu() {\n    // Close select menu\n    if (this.selectRef) {\n      const input = ReactDOM.findDOMNode(this.selectRef).querySelector(\n        '.Select-input input'\n      );\n      if (input) {\n        // I don't think there's another way to close `react-select`\n        input.blur();\n      }\n    }\n  }\n\n  async handleAddTeamToProject(team) {\n    const {organization, project, value} = this.props;\n    // Copy old value\n    const oldValue = [...value];\n\n    // Optimistic update\n    this.props.onChange([...this.props.value, this.createMentionableTeam(team)]);\n\n    try {\n      // Try to add team to project\n      // Note: we can't close select menu here because we have to wait for ProjectsStore to update first\n      // The reason for this is because we have little control over `react-select`'s `AsyncSelect`\n      // We can't control when `handleLoadOptions` gets called, but it gets called when select closes, so\n      // wait for store to update before closing the menu. Otherwise, we'll have stale items in the select menu\n      await addTeamToProject(this.api, organization.slug, project.slug, team);\n    } catch (err) {\n      // Unable to add team to project, revert select menu value\n      this.props.onChange(oldValue);\n      this.closeSelectMenu();\n    }\n  }\n\n  handleChange = newValue => {\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = inputValue => {\n    this.setState({inputValue});\n\n    if (this.props.onInputChange) {\n      this.props.onInputChange(inputValue);\n    }\n  };\n\n  queryMembers = debounce((query, cb) => {\n    const {organization} = this.props;\n\n    // Because this function is debounced, the component can potentially be\n    // unmounted before this fires, in which case, `this.api` is null\n    if (!this.api) {\n      return null;\n    }\n\n    return this.api\n      .requestPromise(`/organizations/${organization.slug}/members/`, {\n        query: {query},\n      })\n      .then(data => cb(null, data), err => cb(err));\n  }, 250);\n\n  handleLoadOptions = () => {\n    const usersInProject = this.getMentionableUsers();\n    const teamsInProject = this.getMentionableTeams();\n    const teamsNotInProject = this.getTeamsNotInProject(teamsInProject);\n    const usersInProjectById = usersInProject.map(({actor}) => actor.id);\n\n    // Return a promise for `react-select`\n    return new Promise((resolve, reject) => {\n      this.queryMembers(this.state.inputValue, (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(result);\n        }\n      });\n    })\n      .then(members => {\n        // Be careful here as we actually want the `users` object, otherwise it means user\n        // has not registered for sentry yet, but has been invited\n        return members\n          ? members\n              .filter(({user}) => user && usersInProjectById.indexOf(user.id) === -1)\n              .map(this.createUnmentionableUser)\n          : [];\n      })\n      .then(members => {\n        return {\n          options: [\n            ...usersInProject,\n            ...teamsInProject,\n            ...teamsNotInProject,\n            ...members,\n          ],\n        };\n      });\n  };\n\n  render() {\n    return (\n      <MultiSelectControl\n        filterOptions={(options, filterText) => {\n          return options.filter(({searchKey}) => searchKey.indexOf(filterText) > -1);\n        }}\n        ref={ref => (this.selectRef = ref)}\n        loadOptions={this.handleLoadOptions}\n        defaultOptions\n        async\n        clearable\n        disabled={this.props.disabled}\n        cache={false}\n        valueComponent={ValueComponent}\n        placeholder={t('Add Owners')}\n        onInputChange={this.handleInputChange}\n        onChange={this.handleChange}\n        value={this.props.value}\n        css={{width: 200}}\n      />\n    );\n  }\n}\n\nconst DisabledLabel = styled('div')`\n  opacity: 0.5;\n  overflow: hidden; /* Needed so that \"Add to team\" button can fit */\n`;\n\nconst AddToProjectButton = styled(Button)`\n  flex-shrink: 0;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\nimport {Flex} from 'grid-emotion';\n\nimport {t} from 'app/locale';\nimport memberListStore from 'app/stores/memberListStore';\nimport Button from 'app/components/button';\nimport SelectField from 'app/components/forms/selectField';\nimport TextOverflow from 'app/components/textOverflow';\nimport InlineSvg from 'app/components/inlineSvg';\nimport Input from 'app/views/settings/components/forms/controls/input';\nimport SentryTypes from 'app/sentryTypes';\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport SelectOwners from 'app/views/settings/project/projectOwnership/selectOwners';\nimport space from 'app/styles/space';\n\nconst initialState = {\n  text: '',\n  type: 'path',\n  owners: [],\n  isValid: false,\n};\n\nclass RuleBuilder extends React.Component {\n  static propTypes = {\n    project: SentryTypes.Project,\n    organization: SentryTypes.Organization,\n    onAddRule: PropTypes.func,\n    urls: PropTypes.arrayOf(PropTypes.string),\n    paths: PropTypes.arrayOf(PropTypes.string),\n    disabled: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  checkIsValid = () => {\n    this.setState(state => ({\n      isValid: !!state.text && state.owners && !!state.owners.length,\n    }));\n  };\n\n  handleTypeChange = val => {\n    this.setState({type: val});\n    this.checkIsValid();\n  };\n\n  handleChangeValue = e => {\n    this.setState({text: e.target.value});\n    this.checkIsValid();\n  };\n\n  handleChangeOwners = owners => {\n    this.setState({owners});\n    this.checkIsValid();\n  };\n\n  handleAddRule = () => {\n    const {type, text, owners, isValid} = this.state;\n\n    if (!isValid) {\n      addErrorMessage('A Rule needs a type, a value, and one or more owners.');\n      return;\n    }\n\n    const ownerText = owners\n      .map(\n        owner =>\n          owner.actor.type === 'team'\n            ? `#${owner.actor.name}`\n            : memberListStore.getById(owner.actor.id).email\n      )\n      .join(' ');\n\n    const rule = `${type}:${text} ${ownerText}`;\n    this.props.onAddRule(rule);\n    this.setState(initialState);\n  };\n\n  handleSelectCandidate = (text, type) => {\n    this.setState({text, type});\n    this.checkIsValid();\n  };\n\n  render() {\n    const {urls, paths, disabled, project, organization} = this.props;\n    const {type, text, owners, isValid} = this.state;\n\n    return (\n      <React.Fragment>\n        {(paths || urls) && (\n          <Candidates>\n            {paths &&\n              paths.map(v => (\n                <RuleCandidate\n                  key={v}\n                  onClick={() => this.handleSelectCandidate(v, 'path')}\n                >\n                  <AddIcon src=\"icon-circle-add\" />\n                  <StyledTextOverflow>{v}</StyledTextOverflow>\n                  <TypeHint>[PATH]</TypeHint>\n                </RuleCandidate>\n              ))}\n            {urls &&\n              urls.map(v => (\n                <RuleCandidate\n                  key={v}\n                  onClick={() => this.handleSelectCandidate(v, 'url')}\n                >\n                  <AddIcon src=\"icon-circle-add\" />\n                  <StyledTextOverflow>{v}</StyledTextOverflow>\n                  <TypeHint>[URL]</TypeHint>\n                </RuleCandidate>\n              ))}\n          </Candidates>\n        )}\n        <BuilderBar>\n          <BuilderSelect\n            name=\"select-type\"\n            value={type}\n            showSearch={false}\n            onChange={this.handleTypeChange}\n            options={[{value: 'path', label: t('Path')}, {value: 'url', label: t('URL')}]}\n            style={{width: 140}}\n            clearable={false}\n            disabled={disabled}\n          />\n          <BuilderInput\n            controlled\n            value={text}\n            onChange={this.handleChangeValue}\n            disabled={disabled}\n            placeholder={\n              type === 'path' ? 'src/example/*' : 'https://example.com/settings/*'\n            }\n          />\n          <Divider src=\"icon-chevron-right\" />\n          <Flex flex=\"1\" align=\"center\" mr={1}>\n            <SelectOwners\n              organization={organization}\n              project={project}\n              value={owners}\n              onChange={this.handleChangeOwners}\n              disabled={disabled}\n            />\n          </Flex>\n\n          <AddButton\n            priority=\"primary\"\n            disabled={!isValid}\n            onClick={this.handleAddRule}\n            icon=\"icon-circle-add\"\n            size=\"small\"\n          />\n        </BuilderBar>\n      </React.Fragment>\n    );\n  }\n}\nconst Candidates = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst TypeHint = styled.div`\n  color: ${p => p.theme.borderDark};\n`;\n\nconst StyledTextOverflow = styled(TextOverflow)`\n  flex: 1;\n`;\n\nconst RuleCandidate = styled.div`\n  font-family: ${p => p.theme.text.familyMono};\n  border: 1px solid ${p => p.theme.borderDark};\n  background-color: #f8fafd;\n  padding-left: 5px;\n  margin-bottom: 3px;\n  cursor: pointer;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n`;\n\nconst AddIcon = styled(InlineSvg)`\n  color: ${p => p.theme.borderDark};\n  margin-right: 5px;\n  flex-shrink: 0;\n`;\n\nconst BuilderBar = styled.div`\n  display: flex;\n  height: 40px;\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n\nconst BuilderSelect = styled(SelectField)`\n  margin-right: 10px;\n  width: 80px;\n  flex-shrink: 0;\n`;\n\nconst BuilderInput = styled(Input)`\n  padding: ${space(1)};\n  line-height: 19px;\n  margin-right: 5px;\n`;\n\nconst Divider = styled(InlineSvg)`\n  color: ${p => p.theme.borderDark};\n  flex-shrink: 0;\n  margin-right: 5px;\n`;\n\nconst AddButton = styled(Button)`\n  padding: ${space(0.5)}; /* this sizes the button up to align with the inputs */\n`;\n\nexport default RuleBuilder;\n","import {Flex} from 'grid-emotion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\nimport TextareaAutosize from 'react-autosize-textarea';\n\nimport {Client} from 'app/api';\nimport memberListStore from 'app/stores/memberListStore';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport Button from 'app/components/button';\nimport SentryTypes from 'app/sentryTypes';\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport {inputStyles} from 'app/styles/input';\nimport RuleBuilder from 'app/views/settings/project/projectOwnership/ruleBuilder';\n\nclass OwnerInput extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n    project: SentryTypes.Project,\n    initialText: PropTypes.string,\n    urls: PropTypes.arrayOf(PropTypes.string),\n    paths: PropTypes.arrayOf(PropTypes.string),\n    disabled: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: props.initialText,\n      initialText: props.initialText,\n      error: null,\n    };\n  }\n\n  componentWillReceiveProps({initialText}) {\n    if (initialText != this.state.initialText) {\n      this.setState({initialText});\n    }\n  }\n\n  parseError(error) {\n    const text = error && error.raw && error.raw[0];\n    if (!text) {\n      return null;\n    }\n\n    if (text.startsWith('Invalid rule owners:')) {\n      return <InvalidOwners>{text}</InvalidOwners>;\n    } else {\n      return <SyntaxOverlay line={text.match(/line (\\d*),/)[1] - 1} />;\n    }\n  }\n\n  handleUpdateOwnership = () => {\n    const {organization, project} = this.props;\n    const {text} = this.state;\n    this.setState({error: null});\n\n    const api = new Client();\n    const request = api.requestPromise(\n      `/projects/${organization.slug}/${project.slug}/ownership/`,\n      {\n        method: 'PUT',\n        data: {raw: text || ''},\n      }\n    );\n\n    request\n      .then(() => {\n        addSuccessMessage(t('Updated ownership rules'));\n        this.setState({\n          initialText: text,\n        });\n      })\n      .catch(error => {\n        this.setState({error: error.responseJSON});\n        if (error.status === 403) {\n          addErrorMessage(\n            t(\"You don't have permission to modify ownership rules for this project\")\n          );\n        } else if (\n          error.status === 400 &&\n          error.responseJSON.raw &&\n          error.responseJSON.raw[0].startsWith('Invalid rule owners:')\n        ) {\n          addErrorMessage(\n            t('Unable to save ownership rules changes: ' + error.responseJSON.raw[0])\n          );\n        } else {\n          addErrorMessage(t('Unable to save ownership rules changes'));\n        }\n      });\n\n    return request;\n  };\n\n  mentionableUsers() {\n    return memberListStore.getAll().map(member => ({\n      id: member.id,\n      display: member.email,\n      email: member.email,\n    }));\n  }\n\n  mentionableTeams() {\n    const {project} = this.props;\n    return (ProjectsStore.getBySlug(project.slug) || {\n      teams: [],\n    }).teams.map(team => ({\n      id: team.id,\n      display: `#${team.slug}`,\n      email: team.id,\n    }));\n  }\n\n  handleChange = e => {\n    this.setState({text: e.target.value});\n  };\n\n  handleAddRule = rule => {\n    this.setState(\n      ({text}) => ({\n        text: text + '\\n' + rule,\n      }),\n      this.handleUpdateOwnership\n    );\n  };\n\n  render() {\n    const {project, organization, disabled, urls, paths} = this.props;\n    const {text, error, initialText} = this.state;\n\n    return (\n      <React.Fragment>\n        <RuleBuilder\n          urls={urls}\n          paths={paths}\n          organization={organization}\n          project={project}\n          onAddRule={this.handleAddRule.bind(this)}\n          disabled={disabled}\n        />\n        <div\n          style={{position: 'relative'}}\n          onKeyDown={e => {\n            if (e.metaKey && e.key == 'Enter') {\n              this.handleUpdateOwnership();\n            }\n          }}\n        >\n          <StyledTextArea\n            placeholder={\n              '#example usage\\npath:src/example/pipeline/* person@sentry.io #infra\\nurl:http://example.com/settings/* #product'\n            }\n            onChange={this.handleChange}\n            disabled={disabled}\n            value={text}\n            spellCheck=\"false\"\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n          />\n          <Flex align=\"center\" justify=\"space-between\">\n            <div>{this.parseError(error)}</div>\n            <SaveButton>\n              <Button\n                size=\"small\"\n                priority=\"primary\"\n                onClick={this.handleUpdateOwnership}\n                disabled={disabled || text === initialText}\n              >\n                {t('Save Changes')}\n              </Button>\n            </SaveButton>\n          </Flex>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst TEXTAREA_PADDING = 4;\nconst TEXTAREA_LINE_HEIGHT = 24;\n\nconst SyntaxOverlay = styled.div`\n  ${inputStyles};\n  width: 100%;\n  height: ${TEXTAREA_LINE_HEIGHT}px;\n  background-color: red;\n  opacity: 0.1;\n  pointer-events: none;\n  position: absolute;\n  top: ${({line}) => TEXTAREA_PADDING + line * 24}px;\n`;\n\nconst SaveButton = styled.div`\n  text-align: end;\n  padding-top: 10px;\n`;\n\nconst StyledTextArea = styled(TextareaAutosize)`\n  ${inputStyles};\n  min-height: 140px;\n  overflow: auto;\n  outline: 0;\n  width: 100%;\n  resize: none;\n  margin: 0;\n  font-family: ${p => p.theme.text.familyMono};\n  word-break: break-all;\n  white-space: pre-wrap;\n  padding-top: ${TEXTAREA_PADDING}px;\n  line-height: ${TEXTAREA_LINE_HEIGHT}px;\n`;\n\nconst InvalidOwners = styled('div')`\n  color: ${p => p.theme.error};\n  font-weight: bold;\n  margin-top: 12px;\n`;\n\nexport default OwnerInput;\n"],"sourceRoot":""}