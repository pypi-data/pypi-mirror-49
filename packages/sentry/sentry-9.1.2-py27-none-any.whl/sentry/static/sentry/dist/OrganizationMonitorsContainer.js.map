{"version":3,"sources":["webpack:///./app/views/organizationMonitors/index.jsx"],"names":["Body","styled","target","p","theme","whiteDark","OrganizationMonitorsContainer","_this$props","this","props","organization","children","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","app_components_acl_feature__WEBPACK_IMPORTED_MODULE_7__","features","renderDisabled","app_components_organizations_globalSelectionHeader__WEBPACK_IMPORTED_MODULE_8__","showEnvironmentSelector","showDateSelector","resetParamsOnChange","app_styles_organization__WEBPACK_IMPORTED_MODULE_9__","React","Component","propTypes","SentryTypes","Organization","withOrganization","withGlobalSelection"],"mappings":"6TAWMA,EAAOC,kBAAO,MAAV,CAAAC,OAAA,aAAGD,CAAH,oBACY,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,WADzB,kCAMJC,2IAKK,IAAAC,EAC0BC,KAAKC,MAA/BC,EADAH,EACAG,aAAcC,EADdJ,EACcI,SAErB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,SAAU,CAAC,YAAaC,gBAAc,GAC7CL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACER,aAAcA,EACdS,yBAAyB,EACzBC,kBAAkB,EAClBC,oBAAqB,CAAC,YAExBT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACd,EAAD,KAAOW,YAjB2BY,IAAMC,WAA5ClB,EACGmB,UAAY,CACjBf,aAAcgB,UAAYC,cAsBfC,sBAAiBC,YAAoBvB","file":"OrganizationMonitorsContainer.js","sourcesContent":["import React from 'react';\nimport styled from 'react-emotion';\n\nimport Feature from 'app/components/acl/feature';\nimport GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';\nimport {PageContent} from 'app/styles/organization';\nimport withGlobalSelection from 'app/utils/withGlobalSelection';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport SentryTypes from 'app/sentryTypes';\n\nconst Body = styled('div')`\n  background-color: ${p => p.theme.whiteDark};\n  flex-direction: column;\n  flex: 1;\n`;\n\nclass OrganizationMonitorsContainer extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  render() {\n    const {organization, children} = this.props;\n\n    return (\n      <Feature features={['monitors']} renderDisabled>\n        <GlobalSelectionHeader\n          organization={organization}\n          showEnvironmentSelector={false}\n          showDateSelector={false}\n          resetParamsOnChange={['cursor']}\n        />\n        <PageContent>\n          <Body>{children}</Body>\n        </PageContent>\n      </Feature>\n    );\n  }\n}\n\nexport default withOrganization(withGlobalSelection(OrganizationMonitorsContainer));\nexport {OrganizationMonitorsContainer};\n"],"sourceRoot":""}