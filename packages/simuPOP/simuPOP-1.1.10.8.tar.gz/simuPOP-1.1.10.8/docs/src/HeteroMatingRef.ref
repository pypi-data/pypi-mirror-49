
class HeteroMating
------------------

.. class:: HeteroMating

   A heterogeneous mating scheme that applies a list of homogeneous
   mating schemes to different (virtual) subpopulations.


   .. method:: HeteroMating(matingSchemes, subPopSize=[], shuffleOffspring=True, weightBy=ANY_SEX)


      Create a heterogeneous mating scheme that will apply a list of
      homogeneous mating schemes *matingSchemes* to different
      (virtual) subpopulations. The size of the offspring generation
      is determined by parameter *subPopSize*, which can be a list of
      subpopulation sizes or a Python function that returns a list of
      subpopulation sizes at each generation. Please refer to class
      :class:`MatingScheme` for a detailed explanation of this
      parameter.

      Each mating scheme defined in *matingSchemes* can be applied to
      one or more (virtual) subpopulation. If parameter *subPops* is
      not specified, a mating scheme will be applied to all
      subpopulations. If a list of (virtual) subpopulation is
      specified, the mating scheme will be applied to specific
      (virtual) subpopulations.

      If multiple mating schemes are applied to the same
      subpopulation, a weight (parameter *weight*) can be given to
      each mating scheme to determine how many offspring it will
      produce. The default \weight for all mating schemes are ``0``.
      In this case, the number of offspring each mating scheme
      produces is proportional to the number of individuals in its
      parental (virtual) subpopulation (default to all parents, but
      can be father for ``weightBy=MALE_ONLY``, mother for
      ``weightBy=FEMALE_ONLY``, or father mother pairs (less of number
      of father and mothers) for ``weightBy=PAIR_ONLY``). If all
      weights are negative, the numbers of offspring are determined by
      the multiplication of the absolute values of the weights and
      their respective parental (virtual) subpopulation sizes. If all
      weights are positive, the number of offspring produced by each
      mating scheme is proportional to these weights, except for
      mating schemes with zero parental population size (or no father,
      no mother, or no pairs, depending on value of parameter
      ``weightBy``). Mating schemes with zero weight in this case will
      produce no offspring. If both negative and positive weights are
      present, negative weights are processed before positive ones.

      A sexual mating scheme might fail if a parental (virtual)
      subpopulation has no father or mother. In this case, you can set
      ``weightBy`` to ``PAIR_ONLY`` so a (virtual) subpopulation will
      appear to have zero size, and will thus contribute no offspring
      to the offspring population. Note that the perceived parental
      (virtual) subpopulation size in this mode (and in modes of
      ``MALE_ONLY``, ``FEMALE_ONLY``) during the calculation of the
      size of the offspring subpopulation will be roughly half of the
      actual population size so you might have to use ``weight=-2`` if
      you would like to have an offspring subpopulation that is
      roughly the same size of the parental (virtual) subpopulation.

      If multiple mating schemes are applied to the same
      subpopulation, offspring produced by these mating schemes are
      shuffled randomly. If this is not desired, you can turn off
      offspring shuffling by setting parameter *shuffleOffspring* to
      ``False``.

