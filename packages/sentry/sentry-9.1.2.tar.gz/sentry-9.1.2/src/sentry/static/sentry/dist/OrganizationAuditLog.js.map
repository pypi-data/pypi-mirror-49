{"version":3,"sources":["webpack:///./app/views/settings/organizationAuditLog/auditLogList.jsx","webpack:///./app/views/settings/organizationAuditLog/index.jsx"],"names":["UserInfo","styled","Box","target","NameContainer","Name","Note","OverflowBox","overflowEllipsis","avatarStyle","width","height","marginRight","AuditLogList","_this$props","this","props","pageLinks","entries","eventType","eventTypes","onEventSelect","hasEntries","length","options","value","label","t","clearableVaue","concat","toConsumableArray_default","map","type","clearableValue","action","react_default","a","createElement","selectField","name","onChange","style","clearable","settingsPageHeader","title","panels","disablePadding","index_es","flex","pl","w","px","emptyMessage","entry","p","align","key","id","actor","email","avatar","user","data-test-id","isSuperuser","note","event","tooltip","ipAddress","disabled","dateTime","date","dateCreated","pagination","extends_default","React","Component","propTypes","PropTypes","array","string","arrayOf","func","EVENT_TYPES","sort","OrganizationAuditLog","handleEventSelect","_this","location","query","browserHistory","push","pathname","search","params","orgId","org","context","organization","currentEventType","auditLogList","state","entryList","AsyncView","routes","contextTypes","SentryTypes","Organization"],"mappings":"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","file":"OrganizationAuditLog.js","sourcesContent":["import {Box} from 'grid-emotion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {t} from 'app/locale';\nimport Avatar from 'app/components/avatar';\nimport DateTime from 'app/components/dateTime';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport SelectField from 'app/components/forms/selectField';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport Tooltip from 'app/components/tooltip';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\n\nconst UserInfo = styled(Box)`\n  display: flex;\n  line-height: 1.2;\n  font-size: 13px;\n  flex: 1;\n`;\n\nconst NameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Name = styled.div`\n  font-weight: 600;\n  font-size: 15px;\n`;\nconst Note = styled.div`\n  font-size: 13px;\n`;\nconst OverflowBox = styled.div`\n  ${overflowEllipsis};\n`;\nconst avatarStyle = {\n  width: 36,\n  height: 36,\n  marginRight: 8,\n};\n\nclass AuditLogList extends React.Component {\n  static propTypes = {\n    entries: PropTypes.array,\n    pageLinks: PropTypes.string,\n    eventType: PropTypes.string,\n    eventTypes: PropTypes.arrayOf(PropTypes.string),\n    onEventSelect: PropTypes.func,\n  };\n\n  render() {\n    const {pageLinks, entries, eventType, eventTypes, onEventSelect} = this.props;\n    const hasEntries = entries && entries.length > 0;\n    const ipv4Length = 15;\n    const options = [\n      {value: '', label: t('Any action'), clearableVaue: false},\n      ...eventTypes.map(type => ({label: type, value: type, clearableValue: false})),\n    ];\n\n    const action = (\n      <form>\n        <SelectField\n          name=\"event\"\n          onChange={onEventSelect}\n          value={eventType}\n          style={{width: 250}}\n          options={options}\n          clearable={false}\n        />\n      </form>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Audit Log')} action={action} />\n\n        <Panel>\n          <PanelHeader disablePadding>\n            <Box flex=\"1\" pl={2}>\n              {t('Member')}\n            </Box>\n            <Box w={150}>{t('Action')}</Box>\n            <Box w={130}>{t('IP')}</Box>\n            <Box w={150} px={1}>\n              {t('Time')}\n            </Box>\n          </PanelHeader>\n\n          <PanelBody>\n            {!hasEntries && (\n              <EmptyMessage>{t('No audit entries available')}</EmptyMessage>\n            )}\n\n            {hasEntries &&\n              entries.map(entry => {\n                return (\n                  <PanelItem p={0} align=\"center\" key={entry.id}>\n                    <UserInfo flex=\"1\" p={2}>\n                      <div>\n                        {entry.actor.email && (\n                          <Avatar style={avatarStyle} user={entry.actor} />\n                        )}\n                      </div>\n                      <NameContainer>\n                        <Name data-test-id=\"actor-name\">\n                          {entry.actor.isSuperuser\n                            ? t('%s (Sentry Staff)', entry.actor.name)\n                            : entry.actor.name}\n                        </Name>\n                        <Note>{entry.note}</Note>\n                      </NameContainer>\n                    </UserInfo>\n                    <Box w={150}>{entry.event}</Box>\n                    <Box w={130}>\n                      <Tooltip\n                        title={entry.ipAddress}\n                        disabled={entry.ipAddress && entry.ipAddress.length <= ipv4Length}\n                      >\n                        <OverflowBox>{entry.ipAddress}</OverflowBox>\n                      </Tooltip>\n                    </Box>\n                    <Box w={150} p={1}>\n                      <DateTime date={entry.dateCreated} />\n                    </Box>\n                  </PanelItem>\n                );\n              })}\n          </PanelBody>\n        </Panel>\n\n        {pageLinks && <Pagination pageLinks={pageLinks} {...this.props} />}\n      </div>\n    );\n  }\n}\n\nexport default AuditLogList;\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport AsyncView from 'app/views/asyncView';\nimport SentryTypes from 'app/sentryTypes';\n\nimport AuditLogList from './auditLogList';\n\nconst EVENT_TYPES = [\n  'member.invite',\n  'member.add',\n  'member.accept-invite',\n  'member.remove',\n  'member.edit',\n  'member.join-team',\n  'member.leave-team',\n  'member.pending',\n  'team.create',\n  'team.edit',\n  'team.remove',\n  'project.create',\n  'project.edit',\n  'project.remove',\n  'project.set-public',\n  'project.set-private',\n  'project.request-transfer',\n  'project.accept-transfer',\n  'org.create',\n  'org.edit',\n  'org.remove',\n  'org.restore',\n  'tagkey.remove',\n  'projectkey.create',\n  'projectkey.edit',\n  'projectkey.remove',\n  'projectkey.enable',\n  'projectkey.disable',\n  'sso.enable',\n  'sso.disable',\n  'sso.edit',\n  'sso-identity.link',\n  'api-key.create',\n  'api-key.edit',\n  'api-key.remove',\n  'rule.create',\n  'rule.edit',\n  'rule.remove',\n  'serivcehook.create',\n  'serivcehook.edit',\n  'serivcehook.remove',\n  'serivcehook.enable',\n  'serivcehook.disable',\n  'integration.add',\n  'integration.edit',\n  'integration.remove',\n  'ondemand.edit',\n  'trial.started',\n  'plan.changed',\n].sort();\n\nclass OrganizationAuditLog extends AsyncView {\n  static propTypes = {\n    routes: PropTypes.array,\n  };\n\n  static contextTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  getEndpoints() {\n    return [\n      [\n        'entryList',\n        `/organizations/${this.props.params.orgId}/audit-logs/`,\n        {\n          query: this.props.location.query,\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    const org = this.context.organization;\n    return `${org.name} Audit Log`;\n  }\n\n  handleEventSelect = value => {\n    // Dont update if event has not changed\n    if (this.props.location.query.event === value) {\n      return;\n    }\n\n    browserHistory.push({\n      pathname: this.props.location.pathname,\n      search: `?event=${value}`,\n    });\n  };\n\n  renderBody() {\n    const currentEventType = this.props.location.query.event;\n\n    return (\n      <AuditLogList\n        entries={this.state.entryList}\n        pageLinks={this.state.pageLinks}\n        eventType={currentEventType}\n        eventTypes={EVENT_TYPES}\n        onEventSelect={this.handleEventSelect}\n        {...this.props}\n      />\n    );\n  }\n}\n\nexport default OrganizationAuditLog;\n"],"sourceRoot":""}