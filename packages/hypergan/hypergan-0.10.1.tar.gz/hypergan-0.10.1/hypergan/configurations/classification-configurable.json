{
  "description": "Generate a classifier (configurable G/D)",
  "publication": "examples/classification.py",
  "discriminator": 
  {
      "class": "class:hypergan.discriminators.configurable_discriminator.ConfigurableDiscriminator",
      "defaults":{
        "class": "class:hypergan.discriminators.dcgan_discriminator.DCGANDiscriminator",
        "activation": "lrelu",
        "initializer": "random_normal",
        "random_stddev": 0.02,
        "filter": [3,3],
        "stride": [1,1],
        "avg_pool": [2,2]
      },
      "layers":[
        ["reference name=x src=inputs", "reference name=x src=inputs", 0],
        "conv 64",
        "conv 32 ",
        ["reshape -1", ["reference name=y src=inputs", "reference name=fy src=generator", 0]],
        "linear 256 initializer=stylegan",
        "linear 1 activation=null bias=false"
      ]
  },
  "latent":
  {
    "class": "function:hypergan.distributions.uniform_distribution.UniformDistribution",
    "projections": [
      "function:hypergan.distributions.uniform_distribution.identity"
    ],
    "min": -1,
    "max": 1,
    "z": 100
  },
  "generator": {
    "class": "class:hypergan.discriminators.configurable_discriminator.ConfigurableDiscriminator",
    "defaults": {
      "initializer": "random_normal",
      "random_stddev": 0.02,
      "activation": "relu",
      "filter": [3,3],
      "stride": [1,1],
      "avg_pool": [2,2]
    },
    "layers": [
      "reference name=x src=inputs",
      "conv 64",
      "conv 32",
      "linear 10 name=fy activation=null"
    ]

  },
  "loss":
  {
    "class": "function:hypergan.losses.standard_loss.StandardLoss",
    "reduce": "reduce_mean"
  },
    "trainer": {
    "class": "function:hypergan.trainers.simultaneous_trainer.SimultaneousTrainer",
      "optimizer": {
        "class": "function:hypergan.optimizers.elastic_weight_consolidation_optimizer.ElasticWeightConsolidationOptimizer",
        "f_decay": 0.5,
        "add_ewc_loss_gradients": true,
        "optimizer": {
          "class": "function:hypergan.optimizers.giga_wolf_optimizer.GigaWolfOptimizer",

          "optimizer": {
            "class": "function:tensorflow.python.training.adam.AdamOptimizer",
            "learn_rate": 1e-4,
            "beta1":0.0,
            "beta2":0.999
          },
          "optimizer2": {
            "class": "function:tensorflow.python.training.adam.AdamOptimizer",
            "learn_rate": 3e-5,
            "beta1":0.0,
            "beta2":0.999
          }
      }
    }


  },
  "runtime": {
    "train": "python3 [hypergan]/examples/classification.py train . -b 8"
  },
  "hypergan_version": "0.10.0",

  "class": "class:hypergan.gans.standard_gan.StandardGAN"
}
