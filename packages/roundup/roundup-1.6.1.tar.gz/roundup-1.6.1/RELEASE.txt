Building Releases
=================

Roundup is a pure Python application with no binary components. This file
describes how to build a source release. To find out how to install
Roundup, read the doc/installation.txt file.

Roundup release checklist:

1.  Run unit tests! They should pass successfully. "./run_tests.py"
2.  Update version
      CHANGES.txt
      roundup/__init__.py
      website/www/index.txt
      website/www/conf.py  (also update copyright)
2a. Update license end date in COPYING.txt
2b. Update doc/acknowledgements.txt (add section for
    release, churn contributers etc.).
3.  Update documentation
      doc/announcement.txt
      doc/upgrading.txt
3a. cd to website/www and run 'make linkcheck'. See output in
    _tmp/linkcheck/output.txt
       fix broken references in docs
       verify redirects are correct
4.  Update setup.py info is needed (contacts, classifiers, etc.), and
    check that metadata is valid and long descriptions is proper reST:
      python setup.py check --restructuredtext --metadata --strict
5.  Clean out all *.orig, *.rej, .#* files from the source.
6.  Remove previous build files
      python setup.py clean --all
7.  Rebuild documentation in "share/doc/roundup/html"
      python setup.py build_doc
8.  python setup.py sdist --manifest-only
9.  Check the MANIFEST to make sure that any new files are included.
      (use hg status --rev <last release or tag>:tip to list changed
      added and removed files. Last release e.g. 1.5.1 where tip was
      what would become 1.6)
    If they are not, edit MANIFEST.in to include them. For format docs see
    http://docs.python.org/2/distutils/sourcedist.html#manifest-template
10. python setup.py sdist
    (if you find sdist a little verbose, add "--quiet" to the end of the
     command)
11. Unpack the new tarball created in dist/roundup-<version>.tar.gz
    file in /tmp then
      a) run_tests.py
      b) demo.py
    with all available Python versions.
12. Assuming all is well tag the release in the version-control
    system.
      a) hg tag 1.6.0  # use right version. Should create/commit a changeset
      b) hg push       # update main repo
      c) hg sum        # verify that the tag shows up
13. Upload source distributive to PyPI - requires you sign up for a
    pypi account and be added as a maintainer to roundup. Ask existing
    maintainer for access.
      python setup.py sdist upload --repository pypi --sign
    It should appear on http://pypi.python.org/pypi/roundup in no
    time. If you are using python older than 2.7.13 you need a
    .pypirc shown below. URL has changed. If using 2.7.13 or newer,
    you can remove the "--repository pypi" option.
14. Send doc/announcement.txt to python-announce@python.org and
    roundup-users@lists.sourceforge.net and
    roundup-devel@lists.sourceforge.net
15. Refresh website.
      website/README.txt
      http://www.roundup-tracker.org/ should state that the stable
      version is the one that you released.
      http://www.roundup-tracker.org/docs.html should also match the
      released version (or atleast the major 1.x release.

So, those commands in a nice, cut'n'pasteable form::

 find . -name '*.orig' -exec rm {} \;
 find . -name '*.rej' -exec rm {} \;
 find . -name '.#*' -exec rm {} \;
 python setup.py clean --all
 python setup.py check --restructuredtext --metadata --strict
 python setup.py build_doc
 python setup.py sdist --manifest-only
 python setup.py sdist --quiet
 python setup.py bdist_rpm
 # not required for pypi.org since 2017 -> python setup.py register
 python setup.py sdist upload --repository pypi --sign

Note pypi no longer allows uploads of .exe installers such as produced
by bdist_wininst. Removed directions for producing the binary
distribution.

If you get errors on the upload operation, you may need the following
~/.pypirc file as well

========
[distutils]
index-servers =
    test
    pypi

[pypi]
repository: https://upload.pypi.org/legacy/
username: <your username on pypi.org here>
password: <your password here>

[test]
repository: https://test.pypi.org/legacy/
username: <your username on test.pypi.org here>
password: <your password here>
========

