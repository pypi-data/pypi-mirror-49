# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/test.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode("latin1"))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor.FileDescriptor(
    name="protos/test.proto",
    package="",
    syntax="proto3",
    serialized_pb=_b(
        '\n\x11protos/test.proto"\x12\n\x04Test\x12\n\n\x02id\x18\x01 \x01(\t"\x1b\n\rTestException\x12\n\n\x02id\x18\x01 \x01(\t"\x87\x01\n\rTestSerialize\x12\x12\n\nfloat_test\x18\x01 \x01(\x02\x12\x12\n\nint32_test\x18\x02 \x01(\x05\x12\x12\n\nint64_test\x18\x03 \x01(\x03\x12\x11\n\tbool_test\x18\x04 \x01(\x08\x12\x13\n\x0bstring_test\x18\x05 \x01(\t\x12\x12\n\nbytes_test\x18\x06 \x01(\x0c\x62\x06proto3'
    ),
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)


_TEST = _descriptor.Descriptor(
    name="Test",
    full_name="Test",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="id",
            full_name="Test.id",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
        )
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=21,
    serialized_end=39,
)


_TESTEXCEPTION = _descriptor.Descriptor(
    name="TestException",
    full_name="TestException",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="id",
            full_name="TestException.id",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
        )
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=41,
    serialized_end=68,
)


_TESTSERIALIZE = _descriptor.Descriptor(
    name="TestSerialize",
    full_name="TestSerialize",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="float_test",
            full_name="TestSerialize.float_test",
            index=0,
            number=1,
            type=2,
            cpp_type=6,
            label=1,
            has_default_value=False,
            default_value=float(0),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
        ),
        _descriptor.FieldDescriptor(
            name="int32_test",
            full_name="TestSerialize.int32_test",
            index=1,
            number=2,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
        ),
        _descriptor.FieldDescriptor(
            name="int64_test",
            full_name="TestSerialize.int64_test",
            index=2,
            number=3,
            type=3,
            cpp_type=2,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
        ),
        _descriptor.FieldDescriptor(
            name="bool_test",
            full_name="TestSerialize.bool_test",
            index=3,
            number=4,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
        ),
        _descriptor.FieldDescriptor(
            name="string_test",
            full_name="TestSerialize.string_test",
            index=4,
            number=5,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
        ),
        _descriptor.FieldDescriptor(
            name="bytes_test",
            full_name="TestSerialize.bytes_test",
            index=5,
            number=6,
            type=12,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b(""),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=71,
    serialized_end=206,
)

DESCRIPTOR.message_types_by_name["Test"] = _TEST
DESCRIPTOR.message_types_by_name["TestException"] = _TESTEXCEPTION
DESCRIPTOR.message_types_by_name["TestSerialize"] = _TESTSERIALIZE

Test = _reflection.GeneratedProtocolMessageType(
    "Test",
    (_message.Message,),
    dict(
        DESCRIPTOR=_TEST,
        __module__="protos.test_pb2"
        # @@protoc_insertion_point(class_scope:Test)
    ),
)
_sym_db.RegisterMessage(Test)

TestException = _reflection.GeneratedProtocolMessageType(
    "TestException",
    (_message.Message,),
    dict(
        DESCRIPTOR=_TESTEXCEPTION,
        __module__="protos.test_pb2"
        # @@protoc_insertion_point(class_scope:TestException)
    ),
)
_sym_db.RegisterMessage(TestException)

TestSerialize = _reflection.GeneratedProtocolMessageType(
    "TestSerialize",
    (_message.Message,),
    dict(
        DESCRIPTOR=_TESTSERIALIZE,
        __module__="protos.test_pb2"
        # @@protoc_insertion_point(class_scope:TestSerialize)
    ),
)
_sym_db.RegisterMessage(TestSerialize)


# @@protoc_insertion_point(module_scope)
