{"version":3,"sources":["webpack:///./app/views/settings/account/accountSubscriptions.jsx"],"names":["ENDPOINT","SubscriptionName","styled","target","Description","p","theme","gray3","SubscribedDescription","gray2","AccountSubscriptions","handleToggle","subscription","index","e","subscribed","oldSubscriptions","_this","state","subscriptions","setState","newSubscriptions","slice","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","subscribedDate","Date","api","request","method","data","listId","success","IndicatorStore","addSuccess","concat","listName","error","err","addError","_this2","this","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","app_views_settings_components_settingsPageHeader__WEBPACK_IMPORTED_MODULE_13__","title","app_views_settings_components_text_textBlock__WEBPACK_IMPORTED_MODULE_16__","app_components_panels__WEBPACK_IMPORTED_MODULE_12__","length","t","map","align","key","grid_emotion__WEBPACK_IMPORTED_MODULE_6__","w","pr","listDescription","email","app_components_dateTime__WEBPACK_IMPORTED_MODULE_11__","shortDate","date","app_components_switch__WEBPACK_IMPORTED_MODULE_14__","isActive","size","toggle","bind","app_views_settings_components_emptyMessage__WEBPACK_IMPORTED_MODULE_17__","href","AsyncView"],"mappings":"mTAcMA,EAAW,2BAEXC,EAAmBC,kBAAH,OAAAC,OAAA,YAAGD,CAAH,oBAGhBE,EAAcF,kBAAH,OAAAC,OAAA,YAAGD,CAAH,wCAGN,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAHP,KAMXC,EAAwBN,kBAAOE,EAAV,CAAAD,OAAA,YAAGD,CAAH,SAChB,SAAAG,GAAC,OAAIA,EAAEC,MAAMG,OADG,KAIrBC,qLASJC,aAAe,SAACC,EAAcC,EAAOC,GACnC,IAAMC,GAAcH,EAAaG,WAC3BC,EAAmBC,EAAKC,MAAMC,cAEpCF,EAAKG,SAAS,SAAAF,GACZ,IAAMG,EAAmBH,EAAMC,cAAcG,QAM7C,OALAD,EAAiBR,GAAjBU,IAAA,GACKX,EADL,CAEEG,aACAS,eAAgB,IAAIC,OAEtBF,IAAA,GACKL,EADL,CAEEC,cAAeE,MAInBJ,EAAKS,IAAIC,QAAQ3B,EAAU,CACzB4B,OAAQ,MACRC,KAAM,CACJC,OAAQlB,EAAakB,OACrBf,cAEFgB,QAAS,SAAAF,GACPG,UAAeC,WAAf,GAAAC,OACKnB,EAAa,aAAe,eADjC,QAAAmB,OACsDtB,EAAauB,YAGrEC,MAAO,SAAAC,GACLL,UAAeM,SAAf,aAAAJ,OACenB,EAAa,GAAK,KADjC,iBAAAmB,OACqDtB,EAAauB,WAElElB,EAAKG,SAAS,CAACD,cAAeH,sEAvClC,MAAO,CAAC,CAAC,gBAAiBhB,uCAI1B,MAAO,qDAwCI,IAAAuC,EAAAC,KACX,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAAoBC,MAAM,kBAC1BJ,EAAAC,EAAAC,cAACG,EAAA,QAAD,gKAKAL,EAAAC,EAAAC,cAACG,EAAA,QAAD,oNAMAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACGP,KAAKtB,MAAMC,cAAc6B,OACxBP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAAcE,YAAE,iBAChBR,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACGP,KAAKtB,MAAMC,cAAc+B,IAAI,SAACtC,EAAcC,GAAf,OAC5B4B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAW1C,EAAG,EAAG8C,MAAM,SAASC,IAAKxC,EAAakB,QAChDW,EAAAC,EAAAC,cAACU,EAAA,IAAD,CAAKC,EAAG,GAAOC,GAAI,GACjBd,EAAAC,EAAAC,cAAC1C,EAAD,KAAmBW,EAAauB,UAC/BvB,EAAa4C,iBACZf,EAAAC,EAAAC,cAACvC,EAAD,KAAcQ,EAAa4C,iBAE5B5C,EAAaG,WACZ0B,EAAAC,EAAAC,cAACnC,EAAD,KACEiC,EAAAC,EAAAC,cAAA,WACG/B,EAAa6C,MADhB,MAC0B,IACxBhB,EAAAC,EAAAC,cAACe,EAAA,QAAD,CAAUC,WAAS,EAACC,KAAMhD,EAAaY,mBAI3CiB,EAAAC,EAAAC,cAACnC,EAAD,kCAKJiC,EAAAC,EAAAC,cAACU,EAAA,IAAD,KACEZ,EAAAC,EAAAC,cAACkB,EAAA,QAAD,CACEC,SAAUlD,EAAaG,WACvBgD,KAAK,KACLC,OAAQzB,EAAK5B,aAAasD,KAAK1B,EAAM3B,EAAcC,SAIvD,MAIR4B,EAAAC,EAAAC,cAACuB,EAAA,QAAD,KAAejB,YAAE,8CAGrBR,EAAAC,EAAAC,cAACG,EAAA,QAAD,8NAMAL,EAAAC,EAAAC,cAACG,EAAA,QAAD,uBACiBL,EAAAC,EAAAC,cAAA,KAAGwB,KAAK,0BAAR,mBADjB,+CA3G2BC,WAoHpB1D","file":"AccountSubscriptions.js","sourcesContent":["import {Box} from 'grid-emotion';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport DateTime from 'app/components/dateTime';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport Switch from 'app/components/switch';\nimport IndicatorStore from 'app/stores/indicatorStore';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\nconst ENDPOINT = '/users/me/subscriptions/';\n\nconst SubscriptionName = styled.div`\n  font-size: 1.2em;\n`;\nconst Description = styled.div`\n  font-size: 0.8em;\n  margin-top: 6px;\n  color: ${p => p.theme.gray3};\n`;\n\nconst SubscribedDescription = styled(Description)`\n  color: ${p => p.theme.gray2};\n`;\n\nclass AccountSubscriptions extends AsyncView {\n  getEndpoints() {\n    return [['subscriptions', ENDPOINT]];\n  }\n\n  getTitle() {\n    return 'Subscriptions';\n  }\n\n  handleToggle = (subscription, index, e) => {\n    const subscribed = !subscription.subscribed;\n    const oldSubscriptions = this.state.subscriptions;\n\n    this.setState(state => {\n      const newSubscriptions = state.subscriptions.slice();\n      newSubscriptions[index] = {\n        ...subscription,\n        subscribed,\n        subscribedDate: new Date(),\n      };\n      return {\n        ...state,\n        subscriptions: newSubscriptions,\n      };\n    });\n\n    this.api.request(ENDPOINT, {\n      method: 'PUT',\n      data: {\n        listId: subscription.listId,\n        subscribed,\n      },\n      success: data => {\n        IndicatorStore.addSuccess(\n          `${subscribed ? 'Subscribed' : 'Unsubscribed'} to ${subscription.listName}`\n        );\n      },\n      error: err => {\n        IndicatorStore.addError(\n          `Unable to ${subscribed ? '' : 'un'}subscribe to ${subscription.listName}`\n        );\n        this.setState({subscriptions: oldSubscriptions});\n      },\n    });\n  };\n\n  renderBody() {\n    return (\n      <div>\n        <SettingsPageHeader title=\"Subscriptions\" />\n        <TextBlock>\n          Sentry is committed to respecting your inbox. Our goal is to provide useful\n          content and resources that make fixing errors less painful. Enjoyable even.\n        </TextBlock>\n\n        <TextBlock>\n          As part of our compliance with the EU’s General Data Protection Regulation\n          (GDPR), starting on 25 May 2018, we’ll only email you according to the marketing\n          categories to which you’ve explicitly opted-in.\n        </TextBlock>\n\n        <Panel>\n          {this.state.subscriptions.length ? (\n            <div>\n              <PanelHeader>{t('Subscription')}</PanelHeader>\n              <PanelBody>\n                {this.state.subscriptions.map((subscription, index) => (\n                  <PanelItem p={2} align=\"center\" key={subscription.listId}>\n                    <Box w={1 / 2} pr={2}>\n                      <SubscriptionName>{subscription.listName}</SubscriptionName>\n                      {subscription.listDescription && (\n                        <Description>{subscription.listDescription}</Description>\n                      )}\n                      {subscription.subscribed ? (\n                        <SubscribedDescription>\n                          <div>\n                            {subscription.email} on{' '}\n                            <DateTime shortDate date={subscription.subscribedDate} />\n                          </div>\n                        </SubscribedDescription>\n                      ) : (\n                        <SubscribedDescription>\n                          Not currently subscribed\n                        </SubscribedDescription>\n                      )}\n                    </Box>\n                    <Box>\n                      <Switch\n                        isActive={subscription.subscribed}\n                        size=\"lg\"\n                        toggle={this.handleToggle.bind(this, subscription, index)}\n                      />\n                    </Box>\n                  </PanelItem>\n                ))}{' '}\n              </PanelBody>\n            </div>\n          ) : (\n            <EmptyMessage>{t(\"There's no subscription backend present.\")}</EmptyMessage>\n          )}\n        </Panel>\n        <TextBlock>\n          We’re applying GDPR consent and privacy policies to all Sentry contacts,\n          regardless of location. You’ll be able to manage your subscriptions here and\n          from an Unsubscribe link in the footer of all marketing emails.\n        </TextBlock>\n\n        <TextBlock>\n          Please contact <a href=\"mailto:learn@sentry.io\">learn@sentry.io</a> with any\n          questions or suggestions.\n        </TextBlock>\n      </div>\n    );\n  }\n}\n\nexport default AccountSubscriptions;\n"],"sourceRoot":""}