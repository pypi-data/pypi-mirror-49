launch
******


Description
===========

Launches a new Autonomous Exadata Infrastructure in the specified
compartment and availability domain.


Usage
=====

   oci db autonomous-exadata-infrastructure launch [OPTIONS]


Options
=======


--compartment-id, -c [text]
---------------------------

The OCID of the compartment the Autonomous Exadata Infrastructure
belongs in. [required]


--availability-domain [text]
----------------------------

The availability domain where the Autonomous Exadata Infrastructure is
located. [required]


--subnet-id [text]
------------------

The OCID of the subnet the Autonomous Exadata Infrastructure is
associated with.

**Subnet Restrictions:** - For Autonomous Exadata Infrastructures, do
not use a subnet that overlaps with 192.168.128.0/20

These subnets are used by the Oracle Clusterware private interconnect
on the database instance. Specifying an overlapping subnet will cause
the private interconnect to malfunction. This restriction applies to
both the client subnet and backup subnet. [required]


--shape [text]
--------------

The shape of the Autonomous Exadata Infrastructure. The shape
determines resources allocated to the Autonomous Exadata
Infrastructure (CPU cores, memory and storage). To get a list of
shapes, use the ListDbSystemShapes operation. [required]


--display-name [text]
---------------------

The user-friendly name for the Autonomous Exadata Infrastructure. It
does not have to be unique.


--domain [text]
---------------

A domain name used for the Autonomous Exadata Infrastructure. If the
Oracle-provided Internet and VCN Resolver is enabled for the specified
subnet, the domain name for the subnet is used (don't provide one).
Otherwise, provide a valid DNS domain name. Hyphens (-) are not
permitted.


--license-model [LICENSE_INCLUDED|BRING_YOUR_OWN_LICENSE]
---------------------------------------------------------

The Oracle license model that applies to all the databases in the
Autonomous Exadata Infrastructure. The default is
BRING_YOUR_OWN_LICENSE.


--maintenance-window-details [complex type]
-------------------------------------------

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The --generate-param-json-input option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.


--freeform-tags [complex type]
------------------------------

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example: *{"Department": "Finance"}* This is a complex type whose
value must be valid JSON. The value can be provided as a string on the
command line or passed in as a file using the file://path/to/file
syntax.

The --generate-param-json-input option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.


--defined-tags [complex type]
-----------------------------

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags.

Example: *{"Operations": {"CostCenter": "42"}}* This is a complex type
whose value must be valid JSON. The value can be provided as a string
on the command line or passed in as a file using the
file://path/to/file syntax.

The --generate-param-json-input option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.


--wait-for-state [PROVISIONING|AVAILABLE|UPDATING|TERMINATING|TERMINATED|FAILED|MAINTENANCE_IN_PROGRESS]
--------------------------------------------------------------------------------------------------------

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. If
timeout is reached, a return code of 2 is returned. For any other
error, a return code of 1 is returned.


--max-wait-seconds [integer]
----------------------------

The maximum time to wait for the resource to reach the lifecycle state
defined by --wait-for-state. Defaults to 1200 seconds.


--wait-interval-seconds [integer]
---------------------------------

Check every --wait-interval-seconds to see whether the resource to see
if it has reached the lifecycle state defined by --wait-for-state.
Defaults to 30 seconds.


--from-json [text]
------------------

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The --generate-full-command-json-input option can be used to generate
a sample json file to be used with this command option. The key names
are pre-populated and match the command option names (converted to
camelCase format, e.g. compartment-id --> compartmentId), while the
values of the keys need to be populated by the user before using the
sample file as an input to this command. For any command option that
accepts multiple values, the value of the key can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions


-?, -h, --help
--------------

For detailed help on any of these individual commands, enter <command>
--help.
