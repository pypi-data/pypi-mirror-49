{"version":3,"sources":["webpack:///./app/views/settings/account/accountSecurity/accountSecurityWrapper.jsx"],"names":["ENDPOINT","AccountSecurityWrapper","handleDisable","auth","authId","_this","setState","loading","api","requestPromise","concat","method","then","remountComponent","addErrorMessage","t","name","handleRegenerateBackupCodes","props","params","addError","_this$state","this","state","authenticators","organizations","countEnrolled","filter","isEnrolled","isBackupInterface","length","orgsRequire2fa","org","require2FA","deleteDisabled","children","React","cloneElement","onDisable","onRegenerateBackupCodes","AsyncComponent","withRouter"],"mappings":"uOAOMA,EAAW,4BAEXC,qLAKJC,cAAgB,SAAAC,GACTA,GAASA,EAAKC,QAInBC,EAAKC,SACH,CACEC,SAAS,GAEX,kBACEF,EAAKG,IACFC,eADH,GAAAC,OACqBV,GADrBU,OACgCP,EAAKC,OADrC,KACgD,CAC5CO,OAAQ,WAETC,KAAKP,EAAKQ,iBAAkB,WAC3BR,EAAKC,SAAS,CAACC,SAAS,IACxBO,0BAAgBC,YAAE,kBAAmBZ,EAAKa,cAKpDC,4BAA8B,WAC5BZ,EAAKC,SAAS,CAACC,SAAS,GAAO,kBAC7BF,EAAKG,IACFC,eADH,GAAAC,OACqBV,GADrBU,OACgCL,EAAKa,MAAMC,OAAOf,OADlD,KAC6D,CACzDO,OAAQ,QAETC,KAAKP,EAAKQ,iBAAkB,kBAC3BR,EAAKe,SAASL,YAAE,uGA/BtB,MAAO,CAAC,CAAC,iBAAkBf,GAAW,CAAC,gBAAiB,yDAoC7C,IAAAqB,EAC6BC,KAAKC,MAAtCC,EADIH,EACJG,eAAgBC,EADZJ,EACYI,cAEjBC,EAAgBF,EAAeG,OACnC,SAAAxB,GAAI,OAAIA,EAAKyB,aAAezB,EAAK0B,oBACjCC,OACIC,EAAiBN,EAAcE,OAAO,SAAAK,GAAG,OAAIA,EAAIC,aACjDC,EAAiBH,EAAeD,OAAS,GAAuB,IAAlBJ,EAKpD,OAA4B,OAAxBJ,KAAKJ,MAAMiB,SACN,KAGFC,IAAMC,aAAaf,KAAKJ,MAAMiB,SAAU,CAC7CG,UAAWhB,KAAKpB,cAChBqC,wBAAyBjB,KAAKL,4BAC9BO,iBACAU,iBACAH,iBACAL,yBA5D+Bc,WAiEtBC,+BAAWxC","file":"AccountSecurityWrapper.js","sourcesContent":["import {withRouter} from 'react-router';\nimport React from 'react';\nimport AsyncComponent from 'app/components/asyncComponent';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\n\nconst ENDPOINT = '/users/me/authenticators/';\n\nclass AccountSecurityWrapper extends AsyncComponent {\n  getEndpoints() {\n    return [['authenticators', ENDPOINT], ['organizations', '/organizations/']];\n  }\n\n  handleDisable = auth => {\n    if (!auth || !auth.authId) {\n      return;\n    }\n\n    this.setState(\n      {\n        loading: true,\n      },\n      () =>\n        this.api\n          .requestPromise(`${ENDPOINT}${auth.authId}/`, {\n            method: 'DELETE',\n          })\n          .then(this.remountComponent, () => {\n            this.setState({loading: false});\n            addErrorMessage(t('Error disabling', auth.name));\n          })\n    );\n  };\n\n  handleRegenerateBackupCodes = () => {\n    this.setState({loading: true}, () =>\n      this.api\n        .requestPromise(`${ENDPOINT}${this.props.params.authId}/`, {\n          method: 'PUT',\n        })\n        .then(this.remountComponent, () =>\n          this.addError(t('Error regenerating backup codes'))\n        )\n    );\n  };\n\n  renderBody() {\n    const {authenticators, organizations} = this.state;\n\n    const countEnrolled = authenticators.filter(\n      auth => auth.isEnrolled && !auth.isBackupInterface\n    ).length;\n    const orgsRequire2fa = organizations.filter(org => org.require2FA);\n    const deleteDisabled = orgsRequire2fa.length > 0 && countEnrolled === 1;\n\n    // This happens when you switch between children views\n    // And the next child view is lazy loaded, it can potentially be `null`\n    // while the code split package is being fetched\n    if (this.props.children === null) {\n      return null;\n    }\n\n    return React.cloneElement(this.props.children, {\n      onDisable: this.handleDisable,\n      onRegenerateBackupCodes: this.handleRegenerateBackupCodes,\n      authenticators,\n      deleteDisabled,\n      orgsRequire2fa,\n      countEnrolled,\n    });\n  }\n}\n\nexport default withRouter(AccountSecurityWrapper);\n"],"sourceRoot":""}