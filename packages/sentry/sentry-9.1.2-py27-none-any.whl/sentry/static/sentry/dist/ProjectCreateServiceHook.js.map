{"version":3,"sources":["webpack:///./app/views/settings/components/forms/controls/multipleCheckbox.jsx","webpack:///./app/views/settings/project/serviceHookSettingsForm.jsx","webpack:///./app/views/settings/project/projectCreateServiceHook.jsx"],"names":["MultipleCheckboxWrapper","styled","target","Label","CheckboxLabel","MultipleCheckbox","onChange","selectedValue","e","_this$props","_this","props","value","checked","concat","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default","filter","v","_this2","this","_this$props2","disabled","choices","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","map","_ref","_ref2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","choiceValue","choiceLabel","grid_emotion__WEBPACK_IMPORTED_MODULE_7__","key","w","type","bind","defined","indexOf","React","Component","propTypes","PropTypes","arrayOf","oneOfType","string","number","func","bool","array","isRequired","react_router__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","create_react_class__WEBPACK_IMPORTED_MODULE_3__","create_react_class__WEBPACK_IMPORTED_MODULE_3___default","app_locale__WEBPACK_IMPORTED_MODULE_4__","app_views_settings_components_forms_apiForm__WEBPACK_IMPORTED_MODULE_5__","app_views_settings_components_forms_booleanField__WEBPACK_IMPORTED_MODULE_6__","app_views_settings_components_forms_formField__WEBPACK_IMPORTED_MODULE_7__","app_views_settings_components_forms_textField__WEBPACK_IMPORTED_MODULE_8__","app_views_settings_components_forms_controls_multipleCheckbox__WEBPACK_IMPORTED_MODULE_9__","app_components_panels__WEBPACK_IMPORTED_MODULE_10__","EVENT_CHOICES","createReactClass","displayName","orgId","projectId","hookId","initialData","object","onSubmitSuccess","browserHistory","push","render","endpoint","apiMethod","apiEndpoint","onCancel","footerStyle","marginTop","paddingRight","submitLabel","t","name","label","required","help","inline","peek","ProjectCreateServiceHook","_this$props$params","params","react__WEBPACK_IMPORTED_MODULE_6___default","className","app_views_settings_components_settingsPageHeader__WEBPACK_IMPORTED_MODULE_9__","title","app_views_settings_project_serviceHookSettingsForm__WEBPACK_IMPORTED_MODULE_10__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","events","AsyncView"],"mappings":"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","file":"ProjectCreateServiceHook.js","sourcesContent":["import {Box} from 'grid-emotion';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {defined} from 'app/utils';\n\nconst MultipleCheckboxWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled.label`\n  font-weight: normal;\n  white-space: nowrap;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 20%;\n`;\n\nconst CheckboxLabel = styled.span`\n  margin-left: 3px;\n`;\n\nexport default class MultipleCheckbox extends React.Component {\n  static propTypes = {\n    value: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    choices: PropTypes.array.isRequired,\n  };\n\n  onChange = (selectedValue, e) => {\n    const {value, onChange} = this.props;\n    let newValue;\n\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (e.target.checked) {\n      newValue = value ? [...value, selectedValue] : [value];\n    } else {\n      newValue = value.filter(v => v !== selectedValue);\n    }\n\n    onChange(newValue, e);\n  };\n\n  render() {\n    const {disabled, choices, value} = this.props;\n\n    return (\n      <MultipleCheckboxWrapper>\n        {choices.map(([choiceValue, choiceLabel]) => {\n          return (\n            <Box key={choiceValue} w={[1, 1 / 2, 1 / 3, 1 / 4]}>\n              <Label>\n                <input\n                  type=\"checkbox\"\n                  value={choiceValue}\n                  onChange={this.onChange.bind(this, choiceValue)}\n                  disabled={disabled}\n                  checked={defined(value) && value.indexOf(choiceValue) !== -1}\n                />\n                <CheckboxLabel>{choiceLabel}</CheckboxLabel>\n              </Label>\n            </Box>\n          );\n        })}\n      </MultipleCheckboxWrapper>\n    );\n  }\n}\n","import {browserHistory} from 'react-router';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\n\nimport {t} from 'app/locale';\nimport ApiForm from 'app/views/settings/components/forms/apiForm';\nimport BooleanField from 'app/views/settings/components/forms/booleanField';\nimport FormField from 'app/views/settings/components/forms/formField';\nimport TextField from 'app/views/settings/components/forms/textField';\nimport MultipleCheckbox from 'app/views/settings/components/forms/controls/multipleCheckbox';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\n\nconst EVENT_CHOICES = ['event.alert', 'event.created'].map(e => [e, e]);\n\nexport default createReactClass({\n  displayName: 'ServiceHookSettingsForm',\n\n  propTypes: {\n    orgId: PropTypes.string.isRequired,\n    projectId: PropTypes.string.isRequired,\n    hookId: PropTypes.string,\n    initialData: PropTypes.object.isRequired,\n  },\n\n  onSubmitSuccess() {\n    const {orgId, projectId} = this.props;\n    browserHistory.push(`/settings/${orgId}/projects/${projectId}/hooks/`);\n  },\n\n  render() {\n    const {initialData, orgId, projectId, hookId} = this.props;\n\n    const endpoint = hookId\n      ? `/projects/${orgId}/${projectId}/hooks/${hookId}/`\n      : `/projects/${orgId}/${projectId}/hooks/`;\n\n    return (\n      <Panel>\n        <ApiForm\n          apiMethod={hookId ? 'PUT' : 'POST'}\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          onSubmitSuccess={this.onSubmitSuccess}\n          onCancel={this.onCancel}\n          footerStyle={{\n            marginTop: 0,\n            paddingRight: 20,\n          }}\n          submitLabel={hookId ? t('Save Changes') : t('Create Hook')}\n        >\n          <PanelHeader>{t('Hook Configuration')}</PanelHeader>\n          <PanelBody>\n            <BooleanField name=\"isActive\" label={t('Active')} />\n            <TextField\n              name=\"url\"\n              label={t('URL')}\n              required\n              help={t('The URL which will receive events.')}\n            />\n            <FormField\n              name=\"events\"\n              choices={EVENT_CHOICES}\n              label={t('Events')}\n              inline={false}\n              help={t('The event types you wish to subscribe to.')}\n            >\n              {({value, onChange}) => (\n                <MultipleCheckbox\n                  onChange={onChange}\n                  value={value.peek()}\n                  choices={EVENT_CHOICES}\n                />\n              )}\n            </FormField>\n          </PanelBody>\n        </ApiForm>\n      </Panel>\n    );\n  },\n});\n","import React from 'react';\n\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nimport ServiceHookSettingsForm from 'app/views/settings/project/serviceHookSettingsForm';\n\nexport default class ProjectCreateServiceHook extends AsyncView {\n  renderBody() {\n    const {orgId, projectId} = this.props.params;\n    return (\n      <div className=\"ref-project-create-service-hook\">\n        <SettingsPageHeader title={t('Create Service Hook')} />\n        <ServiceHookSettingsForm\n          {...this.props}\n          orgId={orgId}\n          projectId={projectId}\n          initialData={{events: []}}\n        />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}