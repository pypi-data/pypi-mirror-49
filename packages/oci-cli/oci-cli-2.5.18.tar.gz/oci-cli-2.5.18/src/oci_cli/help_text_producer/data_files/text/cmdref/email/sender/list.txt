list
****


Description
===========

Gets a collection of approved sender email addresses and sender IDs.


Usage
=====

   oci email sender list [OPTIONS]


Options
=======


--compartment-id, -c [text]
---------------------------

The OCID for the compartment. [required]


--lifecycle-state [CREATING|ACTIVE|DELETING|DELETED]
----------------------------------------------------

The current state of a sender.


--email-address [text]
----------------------

The email address of the approved sender.


--page [text]
-------------

For list pagination. The value of the opc-next-page response header
from the previous "List" call. For important details about how
pagination works, see List Pagination.


--limit [integer]
-----------------

For list pagination. The maximum number of results per page, or items
to return in a paginated "List" call. *1* is the minimum, *1000* is
the maximum. For important details about how pagination works, see
List Pagination.


--sort-by [TIMECREATED|EMAILADDRESS]
------------------------------------

The field to sort by. The *TIMECREATED* value returns the list in in
descending order by default. The *EMAILADDRESS* value returns the list
in ascending order by default. Use the *SortOrderQueryParam* to change
the direction of the returned list of items.


--sort-order [ASC|DESC]
-----------------------

The sort order to use, either ascending or descending order.


--all
-----

Fetches all pages of results. If you provide this option, then you
cannot provide the --limit option.


--page-size [integer]
---------------------

When fetching results, the number of results to fetch per call. Only
valid when used with --all or --limit, and ignored otherwise.


--from-json [text]
------------------

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The --generate-full-command-json-input option can be used to generate
a sample json file to be used with this command option. The key names
are pre-populated and match the command option names (converted to
camelCase format, e.g. compartment-id --> compartmentId), while the
values of the keys need to be populated by the user before using the
sample file as an input to this command. For any command option that
accepts multiple values, the value of the key can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions


-?, -h, --help
--------------

For detailed help on any of these individual commands, enter <command>
--help.
