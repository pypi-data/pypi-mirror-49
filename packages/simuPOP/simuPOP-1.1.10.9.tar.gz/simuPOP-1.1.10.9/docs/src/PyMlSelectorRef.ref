
class PyMlSelector
------------------

.. class:: PyMlSelector

   This selector is a multi-locus Python selector that assigns fitness
   to individuals by combining locus and genotype specific fitness
   values. It differs from a :class:`PySelector` in that the python
   function is responsible for assigning fitness values for each
   gentoype type at each locus, which can potentially be random, and
   locus or gentoype-specific.


   .. method:: PyMlSelector(func, mode=EXPONENTIAL, loci=ALL_AVAIL, output="", begin=0, end=-1, step=1, at=[], reps=ALL_AVAIL, subPops=ALL_AVAIL, infoFields=ALL_AVAIL)


      Create a selector that assigns individual fitness values by
      combining locus-specific fitness values that are determined by a
      Python call-back function. The callback function accepts
      parameter *loc*, *alleles* (both optional) and returns location-
      or genotype-specific fitness values that can be constant or
      random. The fitness values for each genotype will be cached so
      the same fitness values will be assigned to genotypes with
      previously assigned values. Note that a function that does not
      examine the genotype naturally assumes a dominant model where
      genotypes with one or two mutants have the same fitness effect.
      Because genotypes at a locus are passed separately and in no
      particular order, this function is also responsible for
      assigning consistent fitness values for genotypes at the same
      locus (a class is usually used). This operator currently ignores
      chromosome types so unused alleles will be passed for loci on
      sex or mitochondrial chromosomes. It also ignores phase of
      genotype so it will use the same fitness value for genotype
      (a,b) and (b,a).

      Individual fitness will be combined in ``ADDITIVE``,
      ``MULTIPLICATIVE``, ``HETEROGENEITY``, or ``EXPONENTIAL`` mode
      from fitness values of loci with at least one non-zero allele
      (See :class:`MlSelector` for details). If an output is given,
      location, genotype, fitness and generation at which the new
      genotype is assgined the value will be written to the output, in
      the format of 'loc a1 a2 fitness gen' for loci on autosomes of
      diploid populations.

