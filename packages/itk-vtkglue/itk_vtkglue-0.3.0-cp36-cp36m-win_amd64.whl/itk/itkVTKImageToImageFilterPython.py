# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkVTKImageToImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkVTKImageToImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkVTKImageToImageFilterPython
            return _itkVTKImageToImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkVTKImageToImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkVTKImageToImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkVTKImageToImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkVTKImageImportPython
import itkImageSourcePython
import itkImagePython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkVectorPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkFixedArrayPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkCovariantVectorPython
import itkPointPython
import vnl_matrix_fixedPython
import itkImageRegionPython
import itkRGBPixelPython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython

def itkVTKImageToImageFilterICVF43_New():
  return itkVTKImageToImageFilterICVF43.New()


def itkVTKImageToImageFilterICVF42_New():
  return itkVTKImageToImageFilterICVF42.New()


def itkVTKImageToImageFilterICVF33_New():
  return itkVTKImageToImageFilterICVF33.New()


def itkVTKImageToImageFilterICVF32_New():
  return itkVTKImageToImageFilterICVF32.New()


def itkVTKImageToImageFilterICVF23_New():
  return itkVTKImageToImageFilterICVF23.New()


def itkVTKImageToImageFilterICVF22_New():
  return itkVTKImageToImageFilterICVF22.New()


def itkVTKImageToImageFilterIVF43_New():
  return itkVTKImageToImageFilterIVF43.New()


def itkVTKImageToImageFilterIVF42_New():
  return itkVTKImageToImageFilterIVF42.New()


def itkVTKImageToImageFilterIVF33_New():
  return itkVTKImageToImageFilterIVF33.New()


def itkVTKImageToImageFilterIVF32_New():
  return itkVTKImageToImageFilterIVF32.New()


def itkVTKImageToImageFilterIVF23_New():
  return itkVTKImageToImageFilterIVF23.New()


def itkVTKImageToImageFilterIVF22_New():
  return itkVTKImageToImageFilterIVF22.New()


def itkVTKImageToImageFilterIRGBAUC3_New():
  return itkVTKImageToImageFilterIRGBAUC3.New()


def itkVTKImageToImageFilterIRGBAUC2_New():
  return itkVTKImageToImageFilterIRGBAUC2.New()


def itkVTKImageToImageFilterIRGBUC3_New():
  return itkVTKImageToImageFilterIRGBUC3.New()


def itkVTKImageToImageFilterIRGBUC2_New():
  return itkVTKImageToImageFilterIRGBUC2.New()


def itkVTKImageToImageFilterIF3_New():
  return itkVTKImageToImageFilterIF3.New()


def itkVTKImageToImageFilterIF2_New():
  return itkVTKImageToImageFilterIF2.New()


def itkVTKImageToImageFilterIUS3_New():
  return itkVTKImageToImageFilterIUS3.New()


def itkVTKImageToImageFilterIUS2_New():
  return itkVTKImageToImageFilterIUS2.New()


def itkVTKImageToImageFilterISS3_New():
  return itkVTKImageToImageFilterISS3.New()


def itkVTKImageToImageFilterISS2_New():
  return itkVTKImageToImageFilterISS2.New()


def itkVTKImageToImageFilterIUL3_New():
  return itkVTKImageToImageFilterIUL3.New()


def itkVTKImageToImageFilterIUL2_New():
  return itkVTKImageToImageFilterIUL2.New()


def itkVTKImageToImageFilterIUC3_New():
  return itkVTKImageToImageFilterIUC3.New()


def itkVTKImageToImageFilterIUC2_New():
  return itkVTKImageToImageFilterIUC2.New()

class itkVTKImageToImageFilterICVF22(itkVTKImageImportPython.itkVTKImageImportICVF22):
    """Proxy of C++ itkVTKImageToImageFilterICVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterICVF22_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterICVF22_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterICVF22_Pointer":
        """Clone(itkVTKImageToImageFilterICVF22 self) -> itkVTKImageToImageFilterICVF22_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF22_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterICVF22 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF22_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterICVF22 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF22_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportICVF22 const *":
        """GetImporter(itkVTKImageToImageFilterICVF22 self) -> itkVTKImageImportICVF22"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF22_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterICVF22

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterICVF22 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterICVF22"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterICVF22

        Create a new object of the class itkVTKImageToImageFilterICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterICVF22.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF22_Clone, None, itkVTKImageToImageFilterICVF22)
itkVTKImageToImageFilterICVF22.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF22_SetInput, None, itkVTKImageToImageFilterICVF22)
itkVTKImageToImageFilterICVF22.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF22_GetExporter, None, itkVTKImageToImageFilterICVF22)
itkVTKImageToImageFilterICVF22.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF22_GetImporter, None, itkVTKImageToImageFilterICVF22)
itkVTKImageToImageFilterICVF22_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF22_swigregister
itkVTKImageToImageFilterICVF22_swigregister(itkVTKImageToImageFilterICVF22)

def itkVTKImageToImageFilterICVF22___New_orig__() -> "itkVTKImageToImageFilterICVF22_Pointer":
    """itkVTKImageToImageFilterICVF22___New_orig__() -> itkVTKImageToImageFilterICVF22_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF22___New_orig__()

def itkVTKImageToImageFilterICVF22_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterICVF22 *":
    """itkVTKImageToImageFilterICVF22_cast(itkLightObject obj) -> itkVTKImageToImageFilterICVF22"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF22_cast(obj)

class itkVTKImageToImageFilterICVF23(itkVTKImageImportPython.itkVTKImageImportICVF23):
    """Proxy of C++ itkVTKImageToImageFilterICVF23 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterICVF23_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterICVF23_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterICVF23_Pointer":
        """Clone(itkVTKImageToImageFilterICVF23 self) -> itkVTKImageToImageFilterICVF23_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF23_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterICVF23 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF23_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterICVF23 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF23_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportICVF23 const *":
        """GetImporter(itkVTKImageToImageFilterICVF23 self) -> itkVTKImageImportICVF23"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF23_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterICVF23

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterICVF23 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterICVF23"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterICVF23

        Create a new object of the class itkVTKImageToImageFilterICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterICVF23.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF23_Clone, None, itkVTKImageToImageFilterICVF23)
itkVTKImageToImageFilterICVF23.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF23_SetInput, None, itkVTKImageToImageFilterICVF23)
itkVTKImageToImageFilterICVF23.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF23_GetExporter, None, itkVTKImageToImageFilterICVF23)
itkVTKImageToImageFilterICVF23.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF23_GetImporter, None, itkVTKImageToImageFilterICVF23)
itkVTKImageToImageFilterICVF23_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF23_swigregister
itkVTKImageToImageFilterICVF23_swigregister(itkVTKImageToImageFilterICVF23)

def itkVTKImageToImageFilterICVF23___New_orig__() -> "itkVTKImageToImageFilterICVF23_Pointer":
    """itkVTKImageToImageFilterICVF23___New_orig__() -> itkVTKImageToImageFilterICVF23_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF23___New_orig__()

def itkVTKImageToImageFilterICVF23_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterICVF23 *":
    """itkVTKImageToImageFilterICVF23_cast(itkLightObject obj) -> itkVTKImageToImageFilterICVF23"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF23_cast(obj)

class itkVTKImageToImageFilterICVF32(itkVTKImageImportPython.itkVTKImageImportICVF32):
    """Proxy of C++ itkVTKImageToImageFilterICVF32 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterICVF32_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterICVF32_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterICVF32_Pointer":
        """Clone(itkVTKImageToImageFilterICVF32 self) -> itkVTKImageToImageFilterICVF32_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF32_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterICVF32 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF32_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterICVF32 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF32_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportICVF32 const *":
        """GetImporter(itkVTKImageToImageFilterICVF32 self) -> itkVTKImageImportICVF32"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF32_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterICVF32

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterICVF32 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterICVF32"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterICVF32

        Create a new object of the class itkVTKImageToImageFilterICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterICVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterICVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterICVF32.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF32_Clone, None, itkVTKImageToImageFilterICVF32)
itkVTKImageToImageFilterICVF32.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF32_SetInput, None, itkVTKImageToImageFilterICVF32)
itkVTKImageToImageFilterICVF32.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF32_GetExporter, None, itkVTKImageToImageFilterICVF32)
itkVTKImageToImageFilterICVF32.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF32_GetImporter, None, itkVTKImageToImageFilterICVF32)
itkVTKImageToImageFilterICVF32_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF32_swigregister
itkVTKImageToImageFilterICVF32_swigregister(itkVTKImageToImageFilterICVF32)

def itkVTKImageToImageFilterICVF32___New_orig__() -> "itkVTKImageToImageFilterICVF32_Pointer":
    """itkVTKImageToImageFilterICVF32___New_orig__() -> itkVTKImageToImageFilterICVF32_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF32___New_orig__()

def itkVTKImageToImageFilterICVF32_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterICVF32 *":
    """itkVTKImageToImageFilterICVF32_cast(itkLightObject obj) -> itkVTKImageToImageFilterICVF32"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF32_cast(obj)

class itkVTKImageToImageFilterICVF33(itkVTKImageImportPython.itkVTKImageImportICVF33):
    """Proxy of C++ itkVTKImageToImageFilterICVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterICVF33_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterICVF33_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterICVF33_Pointer":
        """Clone(itkVTKImageToImageFilterICVF33 self) -> itkVTKImageToImageFilterICVF33_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF33_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterICVF33 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF33_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterICVF33 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF33_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportICVF33 const *":
        """GetImporter(itkVTKImageToImageFilterICVF33 self) -> itkVTKImageImportICVF33"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF33_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterICVF33

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterICVF33 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterICVF33"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterICVF33

        Create a new object of the class itkVTKImageToImageFilterICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterICVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterICVF33.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF33_Clone, None, itkVTKImageToImageFilterICVF33)
itkVTKImageToImageFilterICVF33.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF33_SetInput, None, itkVTKImageToImageFilterICVF33)
itkVTKImageToImageFilterICVF33.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF33_GetExporter, None, itkVTKImageToImageFilterICVF33)
itkVTKImageToImageFilterICVF33.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF33_GetImporter, None, itkVTKImageToImageFilterICVF33)
itkVTKImageToImageFilterICVF33_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF33_swigregister
itkVTKImageToImageFilterICVF33_swigregister(itkVTKImageToImageFilterICVF33)

def itkVTKImageToImageFilterICVF33___New_orig__() -> "itkVTKImageToImageFilterICVF33_Pointer":
    """itkVTKImageToImageFilterICVF33___New_orig__() -> itkVTKImageToImageFilterICVF33_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF33___New_orig__()

def itkVTKImageToImageFilterICVF33_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterICVF33 *":
    """itkVTKImageToImageFilterICVF33_cast(itkLightObject obj) -> itkVTKImageToImageFilterICVF33"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF33_cast(obj)

class itkVTKImageToImageFilterICVF42(itkVTKImageImportPython.itkVTKImageImportICVF42):
    """Proxy of C++ itkVTKImageToImageFilterICVF42 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterICVF42_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterICVF42_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterICVF42_Pointer":
        """Clone(itkVTKImageToImageFilterICVF42 self) -> itkVTKImageToImageFilterICVF42_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF42_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterICVF42 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF42_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterICVF42 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF42_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportICVF42 const *":
        """GetImporter(itkVTKImageToImageFilterICVF42 self) -> itkVTKImageImportICVF42"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF42_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterICVF42

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterICVF42 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterICVF42"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterICVF42

        Create a new object of the class itkVTKImageToImageFilterICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterICVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterICVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterICVF42.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF42_Clone, None, itkVTKImageToImageFilterICVF42)
itkVTKImageToImageFilterICVF42.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF42_SetInput, None, itkVTKImageToImageFilterICVF42)
itkVTKImageToImageFilterICVF42.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF42_GetExporter, None, itkVTKImageToImageFilterICVF42)
itkVTKImageToImageFilterICVF42.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF42_GetImporter, None, itkVTKImageToImageFilterICVF42)
itkVTKImageToImageFilterICVF42_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF42_swigregister
itkVTKImageToImageFilterICVF42_swigregister(itkVTKImageToImageFilterICVF42)

def itkVTKImageToImageFilterICVF42___New_orig__() -> "itkVTKImageToImageFilterICVF42_Pointer":
    """itkVTKImageToImageFilterICVF42___New_orig__() -> itkVTKImageToImageFilterICVF42_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF42___New_orig__()

def itkVTKImageToImageFilterICVF42_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterICVF42 *":
    """itkVTKImageToImageFilterICVF42_cast(itkLightObject obj) -> itkVTKImageToImageFilterICVF42"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF42_cast(obj)

class itkVTKImageToImageFilterICVF43(itkVTKImageImportPython.itkVTKImageImportICVF43):
    """Proxy of C++ itkVTKImageToImageFilterICVF43 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterICVF43_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterICVF43_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterICVF43_Pointer":
        """Clone(itkVTKImageToImageFilterICVF43 self) -> itkVTKImageToImageFilterICVF43_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF43_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterICVF43 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF43_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterICVF43 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF43_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportICVF43 const *":
        """GetImporter(itkVTKImageToImageFilterICVF43 self) -> itkVTKImageImportICVF43"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF43_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterICVF43

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterICVF43 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterICVF43"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterICVF43

        Create a new object of the class itkVTKImageToImageFilterICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterICVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterICVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterICVF43.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF43_Clone, None, itkVTKImageToImageFilterICVF43)
itkVTKImageToImageFilterICVF43.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF43_SetInput, None, itkVTKImageToImageFilterICVF43)
itkVTKImageToImageFilterICVF43.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF43_GetExporter, None, itkVTKImageToImageFilterICVF43)
itkVTKImageToImageFilterICVF43.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF43_GetImporter, None, itkVTKImageToImageFilterICVF43)
itkVTKImageToImageFilterICVF43_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF43_swigregister
itkVTKImageToImageFilterICVF43_swigregister(itkVTKImageToImageFilterICVF43)

def itkVTKImageToImageFilterICVF43___New_orig__() -> "itkVTKImageToImageFilterICVF43_Pointer":
    """itkVTKImageToImageFilterICVF43___New_orig__() -> itkVTKImageToImageFilterICVF43_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF43___New_orig__()

def itkVTKImageToImageFilterICVF43_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterICVF43 *":
    """itkVTKImageToImageFilterICVF43_cast(itkLightObject obj) -> itkVTKImageToImageFilterICVF43"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterICVF43_cast(obj)

class itkVTKImageToImageFilterIF2(itkVTKImageImportPython.itkVTKImageImportIF2):
    """Proxy of C++ itkVTKImageToImageFilterIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIF2_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIF2_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIF2_Pointer":
        """Clone(itkVTKImageToImageFilterIF2 self) -> itkVTKImageToImageFilterIF2_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIF2 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIF2 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIF2 const *":
        """GetImporter(itkVTKImageToImageFilterIF2 self) -> itkVTKImageImportIF2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIF2

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIF2 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIF2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIF2

        Create a new object of the class itkVTKImageToImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIF2.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_Clone, None, itkVTKImageToImageFilterIF2)
itkVTKImageToImageFilterIF2.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_SetInput, None, itkVTKImageToImageFilterIF2)
itkVTKImageToImageFilterIF2.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_GetExporter, None, itkVTKImageToImageFilterIF2)
itkVTKImageToImageFilterIF2.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_GetImporter, None, itkVTKImageToImageFilterIF2)
itkVTKImageToImageFilterIF2_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_swigregister
itkVTKImageToImageFilterIF2_swigregister(itkVTKImageToImageFilterIF2)

def itkVTKImageToImageFilterIF2___New_orig__() -> "itkVTKImageToImageFilterIF2_Pointer":
    """itkVTKImageToImageFilterIF2___New_orig__() -> itkVTKImageToImageFilterIF2_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2___New_orig__()

def itkVTKImageToImageFilterIF2_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIF2 *":
    """itkVTKImageToImageFilterIF2_cast(itkLightObject obj) -> itkVTKImageToImageFilterIF2"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_cast(obj)

class itkVTKImageToImageFilterIF3(itkVTKImageImportPython.itkVTKImageImportIF3):
    """Proxy of C++ itkVTKImageToImageFilterIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIF3_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIF3_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIF3_Pointer":
        """Clone(itkVTKImageToImageFilterIF3 self) -> itkVTKImageToImageFilterIF3_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIF3 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIF3 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIF3 const *":
        """GetImporter(itkVTKImageToImageFilterIF3 self) -> itkVTKImageImportIF3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIF3

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIF3 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIF3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIF3

        Create a new object of the class itkVTKImageToImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIF3.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_Clone, None, itkVTKImageToImageFilterIF3)
itkVTKImageToImageFilterIF3.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_SetInput, None, itkVTKImageToImageFilterIF3)
itkVTKImageToImageFilterIF3.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_GetExporter, None, itkVTKImageToImageFilterIF3)
itkVTKImageToImageFilterIF3.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_GetImporter, None, itkVTKImageToImageFilterIF3)
itkVTKImageToImageFilterIF3_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_swigregister
itkVTKImageToImageFilterIF3_swigregister(itkVTKImageToImageFilterIF3)

def itkVTKImageToImageFilterIF3___New_orig__() -> "itkVTKImageToImageFilterIF3_Pointer":
    """itkVTKImageToImageFilterIF3___New_orig__() -> itkVTKImageToImageFilterIF3_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3___New_orig__()

def itkVTKImageToImageFilterIF3_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIF3 *":
    """itkVTKImageToImageFilterIF3_cast(itkLightObject obj) -> itkVTKImageToImageFilterIF3"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_cast(obj)

class itkVTKImageToImageFilterIRGBAUC2(itkVTKImageImportPython.itkVTKImageImportIRGBAUC2):
    """Proxy of C++ itkVTKImageToImageFilterIRGBAUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIRGBAUC2_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIRGBAUC2_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIRGBAUC2_Pointer":
        """Clone(itkVTKImageToImageFilterIRGBAUC2 self) -> itkVTKImageToImageFilterIRGBAUC2_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC2_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIRGBAUC2 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC2_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIRGBAUC2 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC2_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIRGBAUC2 const *":
        """GetImporter(itkVTKImageToImageFilterIRGBAUC2 self) -> itkVTKImageImportIRGBAUC2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC2_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIRGBAUC2

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIRGBAUC2 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIRGBAUC2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIRGBAUC2

        Create a new object of the class itkVTKImageToImageFilterIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIRGBAUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIRGBAUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIRGBAUC2.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC2_Clone, None, itkVTKImageToImageFilterIRGBAUC2)
itkVTKImageToImageFilterIRGBAUC2.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC2_SetInput, None, itkVTKImageToImageFilterIRGBAUC2)
itkVTKImageToImageFilterIRGBAUC2.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC2_GetExporter, None, itkVTKImageToImageFilterIRGBAUC2)
itkVTKImageToImageFilterIRGBAUC2.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC2_GetImporter, None, itkVTKImageToImageFilterIRGBAUC2)
itkVTKImageToImageFilterIRGBAUC2_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC2_swigregister
itkVTKImageToImageFilterIRGBAUC2_swigregister(itkVTKImageToImageFilterIRGBAUC2)

def itkVTKImageToImageFilterIRGBAUC2___New_orig__() -> "itkVTKImageToImageFilterIRGBAUC2_Pointer":
    """itkVTKImageToImageFilterIRGBAUC2___New_orig__() -> itkVTKImageToImageFilterIRGBAUC2_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC2___New_orig__()

def itkVTKImageToImageFilterIRGBAUC2_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIRGBAUC2 *":
    """itkVTKImageToImageFilterIRGBAUC2_cast(itkLightObject obj) -> itkVTKImageToImageFilterIRGBAUC2"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC2_cast(obj)

class itkVTKImageToImageFilterIRGBAUC3(itkVTKImageImportPython.itkVTKImageImportIRGBAUC3):
    """Proxy of C++ itkVTKImageToImageFilterIRGBAUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIRGBAUC3_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIRGBAUC3_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIRGBAUC3_Pointer":
        """Clone(itkVTKImageToImageFilterIRGBAUC3 self) -> itkVTKImageToImageFilterIRGBAUC3_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC3_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIRGBAUC3 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC3_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIRGBAUC3 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC3_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIRGBAUC3 const *":
        """GetImporter(itkVTKImageToImageFilterIRGBAUC3 self) -> itkVTKImageImportIRGBAUC3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC3_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIRGBAUC3

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIRGBAUC3 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIRGBAUC3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIRGBAUC3

        Create a new object of the class itkVTKImageToImageFilterIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIRGBAUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIRGBAUC3.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC3_Clone, None, itkVTKImageToImageFilterIRGBAUC3)
itkVTKImageToImageFilterIRGBAUC3.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC3_SetInput, None, itkVTKImageToImageFilterIRGBAUC3)
itkVTKImageToImageFilterIRGBAUC3.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC3_GetExporter, None, itkVTKImageToImageFilterIRGBAUC3)
itkVTKImageToImageFilterIRGBAUC3.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC3_GetImporter, None, itkVTKImageToImageFilterIRGBAUC3)
itkVTKImageToImageFilterIRGBAUC3_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC3_swigregister
itkVTKImageToImageFilterIRGBAUC3_swigregister(itkVTKImageToImageFilterIRGBAUC3)

def itkVTKImageToImageFilterIRGBAUC3___New_orig__() -> "itkVTKImageToImageFilterIRGBAUC3_Pointer":
    """itkVTKImageToImageFilterIRGBAUC3___New_orig__() -> itkVTKImageToImageFilterIRGBAUC3_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC3___New_orig__()

def itkVTKImageToImageFilterIRGBAUC3_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIRGBAUC3 *":
    """itkVTKImageToImageFilterIRGBAUC3_cast(itkLightObject obj) -> itkVTKImageToImageFilterIRGBAUC3"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBAUC3_cast(obj)

class itkVTKImageToImageFilterIRGBUC2(itkVTKImageImportPython.itkVTKImageImportIRGBUC2):
    """Proxy of C++ itkVTKImageToImageFilterIRGBUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIRGBUC2_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIRGBUC2_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIRGBUC2_Pointer":
        """Clone(itkVTKImageToImageFilterIRGBUC2 self) -> itkVTKImageToImageFilterIRGBUC2_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC2_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIRGBUC2 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC2_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIRGBUC2 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC2_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIRGBUC2 const *":
        """GetImporter(itkVTKImageToImageFilterIRGBUC2 self) -> itkVTKImageImportIRGBUC2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC2_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIRGBUC2

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIRGBUC2 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIRGBUC2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIRGBUC2

        Create a new object of the class itkVTKImageToImageFilterIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIRGBUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIRGBUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIRGBUC2.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC2_Clone, None, itkVTKImageToImageFilterIRGBUC2)
itkVTKImageToImageFilterIRGBUC2.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC2_SetInput, None, itkVTKImageToImageFilterIRGBUC2)
itkVTKImageToImageFilterIRGBUC2.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC2_GetExporter, None, itkVTKImageToImageFilterIRGBUC2)
itkVTKImageToImageFilterIRGBUC2.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC2_GetImporter, None, itkVTKImageToImageFilterIRGBUC2)
itkVTKImageToImageFilterIRGBUC2_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC2_swigregister
itkVTKImageToImageFilterIRGBUC2_swigregister(itkVTKImageToImageFilterIRGBUC2)

def itkVTKImageToImageFilterIRGBUC2___New_orig__() -> "itkVTKImageToImageFilterIRGBUC2_Pointer":
    """itkVTKImageToImageFilterIRGBUC2___New_orig__() -> itkVTKImageToImageFilterIRGBUC2_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC2___New_orig__()

def itkVTKImageToImageFilterIRGBUC2_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIRGBUC2 *":
    """itkVTKImageToImageFilterIRGBUC2_cast(itkLightObject obj) -> itkVTKImageToImageFilterIRGBUC2"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC2_cast(obj)

class itkVTKImageToImageFilterIRGBUC3(itkVTKImageImportPython.itkVTKImageImportIRGBUC3):
    """Proxy of C++ itkVTKImageToImageFilterIRGBUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIRGBUC3_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIRGBUC3_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIRGBUC3_Pointer":
        """Clone(itkVTKImageToImageFilterIRGBUC3 self) -> itkVTKImageToImageFilterIRGBUC3_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC3_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIRGBUC3 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC3_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIRGBUC3 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC3_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIRGBUC3 const *":
        """GetImporter(itkVTKImageToImageFilterIRGBUC3 self) -> itkVTKImageImportIRGBUC3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC3_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIRGBUC3

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIRGBUC3 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIRGBUC3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIRGBUC3

        Create a new object of the class itkVTKImageToImageFilterIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIRGBUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIRGBUC3.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC3_Clone, None, itkVTKImageToImageFilterIRGBUC3)
itkVTKImageToImageFilterIRGBUC3.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC3_SetInput, None, itkVTKImageToImageFilterIRGBUC3)
itkVTKImageToImageFilterIRGBUC3.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC3_GetExporter, None, itkVTKImageToImageFilterIRGBUC3)
itkVTKImageToImageFilterIRGBUC3.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC3_GetImporter, None, itkVTKImageToImageFilterIRGBUC3)
itkVTKImageToImageFilterIRGBUC3_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC3_swigregister
itkVTKImageToImageFilterIRGBUC3_swigregister(itkVTKImageToImageFilterIRGBUC3)

def itkVTKImageToImageFilterIRGBUC3___New_orig__() -> "itkVTKImageToImageFilterIRGBUC3_Pointer":
    """itkVTKImageToImageFilterIRGBUC3___New_orig__() -> itkVTKImageToImageFilterIRGBUC3_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC3___New_orig__()

def itkVTKImageToImageFilterIRGBUC3_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIRGBUC3 *":
    """itkVTKImageToImageFilterIRGBUC3_cast(itkLightObject obj) -> itkVTKImageToImageFilterIRGBUC3"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIRGBUC3_cast(obj)

class itkVTKImageToImageFilterISS2(itkVTKImageImportPython.itkVTKImageImportISS2):
    """Proxy of C++ itkVTKImageToImageFilterISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterISS2_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterISS2_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterISS2_Pointer":
        """Clone(itkVTKImageToImageFilterISS2 self) -> itkVTKImageToImageFilterISS2_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS2_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterISS2 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS2_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterISS2 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS2_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportISS2 const *":
        """GetImporter(itkVTKImageToImageFilterISS2 self) -> itkVTKImageImportISS2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS2_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterISS2

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterISS2 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterISS2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterISS2

        Create a new object of the class itkVTKImageToImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterISS2.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS2_Clone, None, itkVTKImageToImageFilterISS2)
itkVTKImageToImageFilterISS2.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS2_SetInput, None, itkVTKImageToImageFilterISS2)
itkVTKImageToImageFilterISS2.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS2_GetExporter, None, itkVTKImageToImageFilterISS2)
itkVTKImageToImageFilterISS2.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS2_GetImporter, None, itkVTKImageToImageFilterISS2)
itkVTKImageToImageFilterISS2_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS2_swigregister
itkVTKImageToImageFilterISS2_swigregister(itkVTKImageToImageFilterISS2)

def itkVTKImageToImageFilterISS2___New_orig__() -> "itkVTKImageToImageFilterISS2_Pointer":
    """itkVTKImageToImageFilterISS2___New_orig__() -> itkVTKImageToImageFilterISS2_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS2___New_orig__()

def itkVTKImageToImageFilterISS2_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterISS2 *":
    """itkVTKImageToImageFilterISS2_cast(itkLightObject obj) -> itkVTKImageToImageFilterISS2"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS2_cast(obj)

class itkVTKImageToImageFilterISS3(itkVTKImageImportPython.itkVTKImageImportISS3):
    """Proxy of C++ itkVTKImageToImageFilterISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterISS3_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterISS3_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterISS3_Pointer":
        """Clone(itkVTKImageToImageFilterISS3 self) -> itkVTKImageToImageFilterISS3_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS3_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterISS3 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS3_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterISS3 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS3_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportISS3 const *":
        """GetImporter(itkVTKImageToImageFilterISS3 self) -> itkVTKImageImportISS3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS3_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterISS3

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterISS3 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterISS3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterISS3

        Create a new object of the class itkVTKImageToImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterISS3.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS3_Clone, None, itkVTKImageToImageFilterISS3)
itkVTKImageToImageFilterISS3.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS3_SetInput, None, itkVTKImageToImageFilterISS3)
itkVTKImageToImageFilterISS3.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS3_GetExporter, None, itkVTKImageToImageFilterISS3)
itkVTKImageToImageFilterISS3.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS3_GetImporter, None, itkVTKImageToImageFilterISS3)
itkVTKImageToImageFilterISS3_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS3_swigregister
itkVTKImageToImageFilterISS3_swigregister(itkVTKImageToImageFilterISS3)

def itkVTKImageToImageFilterISS3___New_orig__() -> "itkVTKImageToImageFilterISS3_Pointer":
    """itkVTKImageToImageFilterISS3___New_orig__() -> itkVTKImageToImageFilterISS3_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS3___New_orig__()

def itkVTKImageToImageFilterISS3_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterISS3 *":
    """itkVTKImageToImageFilterISS3_cast(itkLightObject obj) -> itkVTKImageToImageFilterISS3"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterISS3_cast(obj)

class itkVTKImageToImageFilterIUC2(itkVTKImageImportPython.itkVTKImageImportIUC2):
    """Proxy of C++ itkVTKImageToImageFilterIUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIUC2_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIUC2_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIUC2_Pointer":
        """Clone(itkVTKImageToImageFilterIUC2 self) -> itkVTKImageToImageFilterIUC2_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIUC2 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIUC2 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIUC2 const *":
        """GetImporter(itkVTKImageToImageFilterIUC2 self) -> itkVTKImageImportIUC2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIUC2

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIUC2 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIUC2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIUC2

        Create a new object of the class itkVTKImageToImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIUC2.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_Clone, None, itkVTKImageToImageFilterIUC2)
itkVTKImageToImageFilterIUC2.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_SetInput, None, itkVTKImageToImageFilterIUC2)
itkVTKImageToImageFilterIUC2.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_GetExporter, None, itkVTKImageToImageFilterIUC2)
itkVTKImageToImageFilterIUC2.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_GetImporter, None, itkVTKImageToImageFilterIUC2)
itkVTKImageToImageFilterIUC2_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_swigregister
itkVTKImageToImageFilterIUC2_swigregister(itkVTKImageToImageFilterIUC2)

def itkVTKImageToImageFilterIUC2___New_orig__() -> "itkVTKImageToImageFilterIUC2_Pointer":
    """itkVTKImageToImageFilterIUC2___New_orig__() -> itkVTKImageToImageFilterIUC2_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2___New_orig__()

def itkVTKImageToImageFilterIUC2_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIUC2 *":
    """itkVTKImageToImageFilterIUC2_cast(itkLightObject obj) -> itkVTKImageToImageFilterIUC2"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_cast(obj)

class itkVTKImageToImageFilterIUC3(itkVTKImageImportPython.itkVTKImageImportIUC3):
    """Proxy of C++ itkVTKImageToImageFilterIUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIUC3_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIUC3_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIUC3_Pointer":
        """Clone(itkVTKImageToImageFilterIUC3 self) -> itkVTKImageToImageFilterIUC3_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIUC3 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIUC3 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIUC3 const *":
        """GetImporter(itkVTKImageToImageFilterIUC3 self) -> itkVTKImageImportIUC3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIUC3

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIUC3 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIUC3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIUC3

        Create a new object of the class itkVTKImageToImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIUC3.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_Clone, None, itkVTKImageToImageFilterIUC3)
itkVTKImageToImageFilterIUC3.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_SetInput, None, itkVTKImageToImageFilterIUC3)
itkVTKImageToImageFilterIUC3.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_GetExporter, None, itkVTKImageToImageFilterIUC3)
itkVTKImageToImageFilterIUC3.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_GetImporter, None, itkVTKImageToImageFilterIUC3)
itkVTKImageToImageFilterIUC3_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_swigregister
itkVTKImageToImageFilterIUC3_swigregister(itkVTKImageToImageFilterIUC3)

def itkVTKImageToImageFilterIUC3___New_orig__() -> "itkVTKImageToImageFilterIUC3_Pointer":
    """itkVTKImageToImageFilterIUC3___New_orig__() -> itkVTKImageToImageFilterIUC3_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3___New_orig__()

def itkVTKImageToImageFilterIUC3_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIUC3 *":
    """itkVTKImageToImageFilterIUC3_cast(itkLightObject obj) -> itkVTKImageToImageFilterIUC3"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_cast(obj)

class itkVTKImageToImageFilterIUL2(itkVTKImageImportPython.itkVTKImageImportIUL2):
    """Proxy of C++ itkVTKImageToImageFilterIUL2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIUL2_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIUL2_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIUL2_Pointer":
        """Clone(itkVTKImageToImageFilterIUL2 self) -> itkVTKImageToImageFilterIUL2_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIUL2 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIUL2 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIUL2 const *":
        """GetImporter(itkVTKImageToImageFilterIUL2 self) -> itkVTKImageImportIUL2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIUL2

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIUL2 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIUL2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIUL2

        Create a new object of the class itkVTKImageToImageFilterIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIUL2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIUL2.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_Clone, None, itkVTKImageToImageFilterIUL2)
itkVTKImageToImageFilterIUL2.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_SetInput, None, itkVTKImageToImageFilterIUL2)
itkVTKImageToImageFilterIUL2.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_GetExporter, None, itkVTKImageToImageFilterIUL2)
itkVTKImageToImageFilterIUL2.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_GetImporter, None, itkVTKImageToImageFilterIUL2)
itkVTKImageToImageFilterIUL2_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_swigregister
itkVTKImageToImageFilterIUL2_swigregister(itkVTKImageToImageFilterIUL2)

def itkVTKImageToImageFilterIUL2___New_orig__() -> "itkVTKImageToImageFilterIUL2_Pointer":
    """itkVTKImageToImageFilterIUL2___New_orig__() -> itkVTKImageToImageFilterIUL2_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2___New_orig__()

def itkVTKImageToImageFilterIUL2_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIUL2 *":
    """itkVTKImageToImageFilterIUL2_cast(itkLightObject obj) -> itkVTKImageToImageFilterIUL2"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_cast(obj)

class itkVTKImageToImageFilterIUL3(itkVTKImageImportPython.itkVTKImageImportIUL3):
    """Proxy of C++ itkVTKImageToImageFilterIUL3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIUL3_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIUL3_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIUL3_Pointer":
        """Clone(itkVTKImageToImageFilterIUL3 self) -> itkVTKImageToImageFilterIUL3_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIUL3 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIUL3 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIUL3 const *":
        """GetImporter(itkVTKImageToImageFilterIUL3 self) -> itkVTKImageImportIUL3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIUL3

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIUL3 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIUL3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIUL3

        Create a new object of the class itkVTKImageToImageFilterIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIUL3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIUL3.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_Clone, None, itkVTKImageToImageFilterIUL3)
itkVTKImageToImageFilterIUL3.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_SetInput, None, itkVTKImageToImageFilterIUL3)
itkVTKImageToImageFilterIUL3.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_GetExporter, None, itkVTKImageToImageFilterIUL3)
itkVTKImageToImageFilterIUL3.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_GetImporter, None, itkVTKImageToImageFilterIUL3)
itkVTKImageToImageFilterIUL3_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_swigregister
itkVTKImageToImageFilterIUL3_swigregister(itkVTKImageToImageFilterIUL3)

def itkVTKImageToImageFilterIUL3___New_orig__() -> "itkVTKImageToImageFilterIUL3_Pointer":
    """itkVTKImageToImageFilterIUL3___New_orig__() -> itkVTKImageToImageFilterIUL3_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3___New_orig__()

def itkVTKImageToImageFilterIUL3_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIUL3 *":
    """itkVTKImageToImageFilterIUL3_cast(itkLightObject obj) -> itkVTKImageToImageFilterIUL3"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_cast(obj)

class itkVTKImageToImageFilterIUS2(itkVTKImageImportPython.itkVTKImageImportIUS2):
    """Proxy of C++ itkVTKImageToImageFilterIUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIUS2_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIUS2_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIUS2_Pointer":
        """Clone(itkVTKImageToImageFilterIUS2 self) -> itkVTKImageToImageFilterIUS2_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIUS2 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIUS2 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIUS2 const *":
        """GetImporter(itkVTKImageToImageFilterIUS2 self) -> itkVTKImageImportIUS2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIUS2

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIUS2 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIUS2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIUS2

        Create a new object of the class itkVTKImageToImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIUS2.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_Clone, None, itkVTKImageToImageFilterIUS2)
itkVTKImageToImageFilterIUS2.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_SetInput, None, itkVTKImageToImageFilterIUS2)
itkVTKImageToImageFilterIUS2.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_GetExporter, None, itkVTKImageToImageFilterIUS2)
itkVTKImageToImageFilterIUS2.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_GetImporter, None, itkVTKImageToImageFilterIUS2)
itkVTKImageToImageFilterIUS2_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_swigregister
itkVTKImageToImageFilterIUS2_swigregister(itkVTKImageToImageFilterIUS2)

def itkVTKImageToImageFilterIUS2___New_orig__() -> "itkVTKImageToImageFilterIUS2_Pointer":
    """itkVTKImageToImageFilterIUS2___New_orig__() -> itkVTKImageToImageFilterIUS2_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2___New_orig__()

def itkVTKImageToImageFilterIUS2_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIUS2 *":
    """itkVTKImageToImageFilterIUS2_cast(itkLightObject obj) -> itkVTKImageToImageFilterIUS2"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_cast(obj)

class itkVTKImageToImageFilterIUS3(itkVTKImageImportPython.itkVTKImageImportIUS3):
    """Proxy of C++ itkVTKImageToImageFilterIUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIUS3_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIUS3_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIUS3_Pointer":
        """Clone(itkVTKImageToImageFilterIUS3 self) -> itkVTKImageToImageFilterIUS3_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIUS3 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIUS3 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIUS3 const *":
        """GetImporter(itkVTKImageToImageFilterIUS3 self) -> itkVTKImageImportIUS3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIUS3

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIUS3 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIUS3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIUS3

        Create a new object of the class itkVTKImageToImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIUS3.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_Clone, None, itkVTKImageToImageFilterIUS3)
itkVTKImageToImageFilterIUS3.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_SetInput, None, itkVTKImageToImageFilterIUS3)
itkVTKImageToImageFilterIUS3.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_GetExporter, None, itkVTKImageToImageFilterIUS3)
itkVTKImageToImageFilterIUS3.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_GetImporter, None, itkVTKImageToImageFilterIUS3)
itkVTKImageToImageFilterIUS3_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_swigregister
itkVTKImageToImageFilterIUS3_swigregister(itkVTKImageToImageFilterIUS3)

def itkVTKImageToImageFilterIUS3___New_orig__() -> "itkVTKImageToImageFilterIUS3_Pointer":
    """itkVTKImageToImageFilterIUS3___New_orig__() -> itkVTKImageToImageFilterIUS3_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3___New_orig__()

def itkVTKImageToImageFilterIUS3_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIUS3 *":
    """itkVTKImageToImageFilterIUS3_cast(itkLightObject obj) -> itkVTKImageToImageFilterIUS3"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_cast(obj)

class itkVTKImageToImageFilterIVF22(itkVTKImageImportPython.itkVTKImageImportIVF22):
    """Proxy of C++ itkVTKImageToImageFilterIVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIVF22_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIVF22_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIVF22_Pointer":
        """Clone(itkVTKImageToImageFilterIVF22 self) -> itkVTKImageToImageFilterIVF22_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF22_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIVF22 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF22_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIVF22 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF22_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIVF22 const *":
        """GetImporter(itkVTKImageToImageFilterIVF22 self) -> itkVTKImageImportIVF22"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF22_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIVF22

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIVF22 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIVF22"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIVF22

        Create a new object of the class itkVTKImageToImageFilterIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIVF22.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF22_Clone, None, itkVTKImageToImageFilterIVF22)
itkVTKImageToImageFilterIVF22.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF22_SetInput, None, itkVTKImageToImageFilterIVF22)
itkVTKImageToImageFilterIVF22.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF22_GetExporter, None, itkVTKImageToImageFilterIVF22)
itkVTKImageToImageFilterIVF22.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF22_GetImporter, None, itkVTKImageToImageFilterIVF22)
itkVTKImageToImageFilterIVF22_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF22_swigregister
itkVTKImageToImageFilterIVF22_swigregister(itkVTKImageToImageFilterIVF22)

def itkVTKImageToImageFilterIVF22___New_orig__() -> "itkVTKImageToImageFilterIVF22_Pointer":
    """itkVTKImageToImageFilterIVF22___New_orig__() -> itkVTKImageToImageFilterIVF22_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF22___New_orig__()

def itkVTKImageToImageFilterIVF22_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIVF22 *":
    """itkVTKImageToImageFilterIVF22_cast(itkLightObject obj) -> itkVTKImageToImageFilterIVF22"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF22_cast(obj)

class itkVTKImageToImageFilterIVF23(itkVTKImageImportPython.itkVTKImageImportIVF23):
    """Proxy of C++ itkVTKImageToImageFilterIVF23 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIVF23_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIVF23_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIVF23_Pointer":
        """Clone(itkVTKImageToImageFilterIVF23 self) -> itkVTKImageToImageFilterIVF23_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF23_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIVF23 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF23_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIVF23 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF23_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIVF23 const *":
        """GetImporter(itkVTKImageToImageFilterIVF23 self) -> itkVTKImageImportIVF23"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF23_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIVF23

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIVF23 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIVF23"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIVF23

        Create a new object of the class itkVTKImageToImageFilterIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIVF23.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF23_Clone, None, itkVTKImageToImageFilterIVF23)
itkVTKImageToImageFilterIVF23.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF23_SetInput, None, itkVTKImageToImageFilterIVF23)
itkVTKImageToImageFilterIVF23.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF23_GetExporter, None, itkVTKImageToImageFilterIVF23)
itkVTKImageToImageFilterIVF23.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF23_GetImporter, None, itkVTKImageToImageFilterIVF23)
itkVTKImageToImageFilterIVF23_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF23_swigregister
itkVTKImageToImageFilterIVF23_swigregister(itkVTKImageToImageFilterIVF23)

def itkVTKImageToImageFilterIVF23___New_orig__() -> "itkVTKImageToImageFilterIVF23_Pointer":
    """itkVTKImageToImageFilterIVF23___New_orig__() -> itkVTKImageToImageFilterIVF23_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF23___New_orig__()

def itkVTKImageToImageFilterIVF23_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIVF23 *":
    """itkVTKImageToImageFilterIVF23_cast(itkLightObject obj) -> itkVTKImageToImageFilterIVF23"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF23_cast(obj)

class itkVTKImageToImageFilterIVF32(itkVTKImageImportPython.itkVTKImageImportIVF32):
    """Proxy of C++ itkVTKImageToImageFilterIVF32 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIVF32_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIVF32_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIVF32_Pointer":
        """Clone(itkVTKImageToImageFilterIVF32 self) -> itkVTKImageToImageFilterIVF32_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF32_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIVF32 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF32_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIVF32 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF32_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIVF32 const *":
        """GetImporter(itkVTKImageToImageFilterIVF32 self) -> itkVTKImageImportIVF32"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF32_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIVF32

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIVF32 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIVF32"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIVF32

        Create a new object of the class itkVTKImageToImageFilterIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIVF32.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF32_Clone, None, itkVTKImageToImageFilterIVF32)
itkVTKImageToImageFilterIVF32.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF32_SetInput, None, itkVTKImageToImageFilterIVF32)
itkVTKImageToImageFilterIVF32.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF32_GetExporter, None, itkVTKImageToImageFilterIVF32)
itkVTKImageToImageFilterIVF32.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF32_GetImporter, None, itkVTKImageToImageFilterIVF32)
itkVTKImageToImageFilterIVF32_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF32_swigregister
itkVTKImageToImageFilterIVF32_swigregister(itkVTKImageToImageFilterIVF32)

def itkVTKImageToImageFilterIVF32___New_orig__() -> "itkVTKImageToImageFilterIVF32_Pointer":
    """itkVTKImageToImageFilterIVF32___New_orig__() -> itkVTKImageToImageFilterIVF32_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF32___New_orig__()

def itkVTKImageToImageFilterIVF32_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIVF32 *":
    """itkVTKImageToImageFilterIVF32_cast(itkLightObject obj) -> itkVTKImageToImageFilterIVF32"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF32_cast(obj)

class itkVTKImageToImageFilterIVF33(itkVTKImageImportPython.itkVTKImageImportIVF33):
    """Proxy of C++ itkVTKImageToImageFilterIVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIVF33_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIVF33_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIVF33_Pointer":
        """Clone(itkVTKImageToImageFilterIVF33 self) -> itkVTKImageToImageFilterIVF33_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF33_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIVF33 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF33_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIVF33 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF33_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIVF33 const *":
        """GetImporter(itkVTKImageToImageFilterIVF33 self) -> itkVTKImageImportIVF33"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF33_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIVF33

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIVF33 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIVF33"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIVF33

        Create a new object of the class itkVTKImageToImageFilterIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIVF33.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF33_Clone, None, itkVTKImageToImageFilterIVF33)
itkVTKImageToImageFilterIVF33.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF33_SetInput, None, itkVTKImageToImageFilterIVF33)
itkVTKImageToImageFilterIVF33.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF33_GetExporter, None, itkVTKImageToImageFilterIVF33)
itkVTKImageToImageFilterIVF33.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF33_GetImporter, None, itkVTKImageToImageFilterIVF33)
itkVTKImageToImageFilterIVF33_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF33_swigregister
itkVTKImageToImageFilterIVF33_swigregister(itkVTKImageToImageFilterIVF33)

def itkVTKImageToImageFilterIVF33___New_orig__() -> "itkVTKImageToImageFilterIVF33_Pointer":
    """itkVTKImageToImageFilterIVF33___New_orig__() -> itkVTKImageToImageFilterIVF33_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF33___New_orig__()

def itkVTKImageToImageFilterIVF33_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIVF33 *":
    """itkVTKImageToImageFilterIVF33_cast(itkLightObject obj) -> itkVTKImageToImageFilterIVF33"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF33_cast(obj)

class itkVTKImageToImageFilterIVF42(itkVTKImageImportPython.itkVTKImageImportIVF42):
    """Proxy of C++ itkVTKImageToImageFilterIVF42 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIVF42_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIVF42_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIVF42_Pointer":
        """Clone(itkVTKImageToImageFilterIVF42 self) -> itkVTKImageToImageFilterIVF42_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF42_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIVF42 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF42_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIVF42 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF42_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIVF42 const *":
        """GetImporter(itkVTKImageToImageFilterIVF42 self) -> itkVTKImageImportIVF42"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF42_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIVF42

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIVF42 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIVF42"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIVF42

        Create a new object of the class itkVTKImageToImageFilterIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIVF42.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF42_Clone, None, itkVTKImageToImageFilterIVF42)
itkVTKImageToImageFilterIVF42.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF42_SetInput, None, itkVTKImageToImageFilterIVF42)
itkVTKImageToImageFilterIVF42.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF42_GetExporter, None, itkVTKImageToImageFilterIVF42)
itkVTKImageToImageFilterIVF42.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF42_GetImporter, None, itkVTKImageToImageFilterIVF42)
itkVTKImageToImageFilterIVF42_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF42_swigregister
itkVTKImageToImageFilterIVF42_swigregister(itkVTKImageToImageFilterIVF42)

def itkVTKImageToImageFilterIVF42___New_orig__() -> "itkVTKImageToImageFilterIVF42_Pointer":
    """itkVTKImageToImageFilterIVF42___New_orig__() -> itkVTKImageToImageFilterIVF42_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF42___New_orig__()

def itkVTKImageToImageFilterIVF42_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIVF42 *":
    """itkVTKImageToImageFilterIVF42_cast(itkLightObject obj) -> itkVTKImageToImageFilterIVF42"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF42_cast(obj)

class itkVTKImageToImageFilterIVF43(itkVTKImageImportPython.itkVTKImageImportIVF43):
    """Proxy of C++ itkVTKImageToImageFilterIVF43 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVTKImageToImageFilterIVF43_Pointer":
        """__New_orig__() -> itkVTKImageToImageFilterIVF43_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVTKImageToImageFilterIVF43_Pointer":
        """Clone(itkVTKImageToImageFilterIVF43 self) -> itkVTKImageToImageFilterIVF43_Pointer"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF43_Clone(self)


    def SetInput(self, arg0: 'vtkImageData *') -> "void":
        """SetInput(itkVTKImageToImageFilterIVF43 self, vtkImageData * arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF43_SetInput(self, arg0)


    def GetExporter(self) -> "vtkImageExport *":
        """GetExporter(itkVTKImageToImageFilterIVF43 self) -> vtkImageExport *"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF43_GetExporter(self)


    def GetImporter(self) -> "itkVTKImageImportIVF43 const *":
        """GetImporter(itkVTKImageToImageFilterIVF43 self) -> itkVTKImageImportIVF43"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF43_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIVF43

    def cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIVF43 *":
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIVF43"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIVF43

        Create a new object of the class itkVTKImageToImageFilterIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageToImageFilterIVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVTKImageToImageFilterIVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIVF43.Clone = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF43_Clone, None, itkVTKImageToImageFilterIVF43)
itkVTKImageToImageFilterIVF43.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF43_SetInput, None, itkVTKImageToImageFilterIVF43)
itkVTKImageToImageFilterIVF43.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF43_GetExporter, None, itkVTKImageToImageFilterIVF43)
itkVTKImageToImageFilterIVF43.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF43_GetImporter, None, itkVTKImageToImageFilterIVF43)
itkVTKImageToImageFilterIVF43_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF43_swigregister
itkVTKImageToImageFilterIVF43_swigregister(itkVTKImageToImageFilterIVF43)

def itkVTKImageToImageFilterIVF43___New_orig__() -> "itkVTKImageToImageFilterIVF43_Pointer":
    """itkVTKImageToImageFilterIVF43___New_orig__() -> itkVTKImageToImageFilterIVF43_Pointer"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF43___New_orig__()

def itkVTKImageToImageFilterIVF43_cast(obj: 'itkLightObject') -> "itkVTKImageToImageFilterIVF43 *":
    """itkVTKImageToImageFilterIVF43_cast(itkLightObject obj) -> itkVTKImageToImageFilterIVF43"""
    return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIVF43_cast(obj)


def vtk_image_to_image_filter(*args, **kwargs):
    """Procedural interface for VTKImageToImageFilter"""
    import itk
    instance = itk.VTKImageToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def vtk_image_to_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.VTKImageToImageFilter, itkTemplate.itkTemplate):
        vtk_image_to_image_filter.__doc__ = itk.VTKImageToImageFilter.values()[0].__doc__
    else:
        vtk_image_to_image_filter.__doc__ = itk.VTKImageToImageFilter.__doc__




