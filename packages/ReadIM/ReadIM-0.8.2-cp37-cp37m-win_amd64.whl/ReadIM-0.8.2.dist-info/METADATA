Metadata-Version: 2.1
Name: ReadIM
Version: 0.8.2
Summary: Read and write native DaVis images and vectors filetypes VC7 and IM7
Home-page: https://bitbucket.org/fleming79/readim
Author: Alan Fleming + LaVision
Author-email: alanf@amc.edu.au
License: MIT
Keywords: IM7 VC7 DaVis LaVision FileIO PIV
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8

Overview
========
ReadIM is a c++ wrapper to load DaVis Images and Vectors DaVis V8. 
ReadIM is a 'low level' interface to C++ libraries provided by LaVision GMBH.

Installation
============
This module is compiled. If there isn't a binary you'll need to have the appropriate build tools installed.


>>> pip install ReadIM

If this fails you will need to compile yourself. Clone the source and run the following.

>>> python setup.py build install
>>> python setup.py test

If the test passes then all should be okay. 


Usage
=====

To load a .vc7 file run::

    >>> vbuff, vatts   =  ReadIM.extra.get_Buffer_andAttributeList('filename.vc7')
    >>> v_array, vbuff = ReadIM.extra.buffer_as_array(vbuff)

similarly for a .im7 file run::

    >>> vbuff, vatts   =  ReadIM.extra.get_Buffer_andAttributeList('filename.im7')
    >>> v_array, vbuff = ReadIM.extra.buffer_as_array(vbuff)


Writing files
-------------
>>> atts = ReadIM.load_AttributeList({'attribute':'value'})
>>> ReadIM.WriteIM7('saved_file.im7', True, buff, atts.next)

Finally, memory cleanup is not automatic. To prevent memory leaks do the following:

>>> del(vbuff)
>>> ReadIM.DestroyBuffer(buff)
>>> ReadIM.DestroyAttributeListSafe(atts)




