# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/orestes/Devel/Software/pycirkuit/pycirkuit/ui/configdialog.ui'
#
# Created by: PyQt5 UI code generator 5.7
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_ConfigDialog(object):
    def setupUi(self, ConfigDialog):
        ConfigDialog.setObjectName("ConfigDialog")
        ConfigDialog.resize(840, 400)
        ConfigDialog.setMinimumSize(QtCore.QSize(800, 0))
        self.verticalLayout = QtWidgets.QVBoxLayout(ConfigDialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.listWidget = QtWidgets.QListWidget(ConfigDialog)
        self.listWidget.setMaximumSize(QtCore.QSize(128, 16777215))
        self.listWidget.setIconSize(QtCore.QSize(96, 84))
        self.listWidget.setTextElideMode(QtCore.Qt.ElideRight)
        self.listWidget.setMovement(QtWidgets.QListView.Static)
        self.listWidget.setResizeMode(QtWidgets.QListView.Fixed)
        self.listWidget.setViewMode(QtWidgets.QListView.IconMode)
        self.listWidget.setUniformItemSizes(False)
        self.listWidget.setSelectionRectVisible(True)
        self.listWidget.setObjectName("listWidget")
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/pixmaps/config.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon)
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.listWidget.addItem(item)
        self.horizontalLayout.addWidget(self.listWidget, 0, QtCore.Qt.AlignHCenter)
        self.stackedWidget = QtWidgets.QStackedWidget(ConfigDialog)
        self.stackedWidget.setFrameShape(QtWidgets.QFrame.Panel)
        self.stackedWidget.setFrameShadow(QtWidgets.QFrame.Raised)
        self.stackedWidget.setObjectName("stackedWidget")
        self.page1 = QtWidgets.QWidget()
        self.page1.setObjectName("page1")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.page1)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.groupBox = QtWidgets.QGroupBox(self.page1)
        self.groupBox.setMinimumSize(QtCore.QSize(0, 100))
        self.groupBox.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.cmPath = QtWidgets.QLineEdit(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cmPath.sizePolicy().hasHeightForWidth())
        self.cmPath.setSizePolicy(sizePolicy)
        self.cmPath.setClearButtonEnabled(True)
        self.cmPath.setObjectName("cmPath")
        self.horizontalLayout_3.addWidget(self.cmPath)
        self.toolButtonCMPath = QtWidgets.QToolButton(self.groupBox)
        self.toolButtonCMPath.setMinimumSize(QtCore.QSize(120, 0))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/Open"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButtonCMPath.setIcon(icon1)
        self.toolButtonCMPath.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.toolButtonCMPath.setObjectName("toolButtonCMPath")
        self.horizontalLayout_3.addWidget(self.toolButtonCMPath)
        self.verticalLayout_2.addWidget(self.groupBox)
        self.groupBox_2 = QtWidgets.QGroupBox(self.page1)
        self.groupBox_2.setMinimumSize(QtCore.QSize(0, 100))
        self.groupBox_2.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_2.setObjectName("groupBox_2")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.groupBox_2)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.templateFile = QtWidgets.QLineEdit(self.groupBox_2)
        self.templateFile.setClearButtonEnabled(True)
        self.templateFile.setObjectName("templateFile")
        self.horizontalLayout_4.addWidget(self.templateFile)
        self.toolButtonTemplatePath = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButtonTemplatePath.setMinimumSize(QtCore.QSize(120, 0))
        self.toolButtonTemplatePath.setIcon(icon1)
        self.toolButtonTemplatePath.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.toolButtonTemplatePath.setObjectName("toolButtonTemplatePath")
        self.horizontalLayout_4.addWidget(self.toolButtonTemplatePath)
        self.verticalLayout_2.addWidget(self.groupBox_2)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem)
        self.stackedWidget.addWidget(self.page1)
        self.page2 = QtWidgets.QWidget()
        self.page2.setObjectName("page2")
        self.radioButton = QtWidgets.QRadioButton(self.page2)
        self.radioButton.setGeometry(QtCore.QRect(160, 150, 117, 28))
        self.radioButton.setObjectName("radioButton")
        self.stackedWidget.addWidget(self.page2)
        self.horizontalLayout.addWidget(self.stackedWidget)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.buttonBox = QtWidgets.QDialogButtonBox(ConfigDialog)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setCenterButtons(False)
        self.buttonBox.setObjectName("buttonBox")
        self.horizontalLayout_2.addWidget(self.buttonBox)
        self.verticalLayout.addLayout(self.horizontalLayout_2)

        self.retranslateUi(ConfigDialog)
        self.stackedWidget.setCurrentIndex(0)
        self.listWidget.currentRowChanged['int'].connect(self.stackedWidget.setCurrentIndex)
        self.buttonBox.accepted.connect(ConfigDialog.accept)
        self.buttonBox.rejected.connect(ConfigDialog.reject)
        QtCore.QMetaObject.connectSlotsByName(ConfigDialog)
        ConfigDialog.setTabOrder(self.listWidget, self.cmPath)
        ConfigDialog.setTabOrder(self.cmPath, self.toolButtonCMPath)
        ConfigDialog.setTabOrder(self.toolButtonCMPath, self.templateFile)
        ConfigDialog.setTabOrder(self.templateFile, self.toolButtonTemplatePath)
        ConfigDialog.setTabOrder(self.toolButtonTemplatePath, self.radioButton)

    def retranslateUi(self, ConfigDialog):
        _translate = QtCore.QCoreApplication.translate
        ConfigDialog.setWindowTitle(_translate("ConfigDialog", "Config Dialog"))
        __sortingEnabled = self.listWidget.isSortingEnabled()
        self.listWidget.setSortingEnabled(False)
        item = self.listWidget.item(0)
        item.setText(_translate("ConfigDialog", "General"))
        self.listWidget.setSortingEnabled(__sortingEnabled)
        self.groupBox.setTitle(_translate("ConfigDialog", "Circuit Macros Location", "Group box title"))
        self.cmPath.setPlaceholderText(_translate("ConfigDialog", "Enter Path Name"))
        self.toolButtonCMPath.setText(_translate("ConfigDialog", "Choose...", "Button text"))
        self.groupBox_2.setTitle(_translate("ConfigDialog", "LaTeX Template File", "Group box title"))
        self.templateFile.setPlaceholderText(_translate("ConfigDialog", "Enter Path Name"))
        self.toolButtonTemplatePath.setText(_translate("ConfigDialog", "Choose...", "Button text"))
        self.radioButton.setText(_translate("ConfigDialog", "RadioB&utton"))

from pycirkuit.resources import resources_rc

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ConfigDialog = QtWidgets.QDialog()
    ui = Ui_ConfigDialog()
    ui.setupUi(ConfigDialog)
    ConfigDialog.show()
    sys.exit(app.exec_())

