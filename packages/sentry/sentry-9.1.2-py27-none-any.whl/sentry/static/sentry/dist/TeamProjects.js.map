{"version":3,"sources":["webpack:///./app/views/settings/components/settingsProjectItem.jsx","webpack:///./app/views/settings/organizationTeams/teamProjects.jsx"],"names":["react_emotion__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","create_react_class__WEBPACK_IMPORTED_MODULE_2__","create_react_class__WEBPACK_IMPORTED_MODULE_2___default","app_mixins_apiMixin__WEBPACK_IMPORTED_MODULE_3__","app_components_bookmarkStar__WEBPACK_IMPORTED_MODULE_4__","app_components_link__WEBPACK_IMPORTED_MODULE_5__","app_components_projectLabel__WEBPACK_IMPORTED_MODULE_6__","app_sentryTypes__WEBPACK_IMPORTED_MODULE_7__","app_styles_space__WEBPACK_IMPORTED_MODULE_8__","ProjectItem","createReactClass","displayName","propTypes","project","SentryTypes","Project","organization","Organization","mixins","ApiMixin","getInitialState","isBookmarked","this","props","handleToggleBookmark","setState","render","_this$props","hasNewRoutes","Set","features","has","a","createElement","Container","key","id","BookmarkLink","state","onToggle","to","concat","slug","styled","target","BookmarkStar","space","TeamProjects","OrganizationState","error","loading","pageLinks","unlinkedProjects","linkedProjects","componentDidMount","fetchAll","componentDidUpdate","prevProps","params","orgId","teamId","location","fetchTeamProjects","fetchUnlinkedProjects","_this","_this$props$params","api","requestPromise","query","cursor","includeAllArgs","then","_ref","_ref2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","jqXHR","getResponseHeader","catch","_this2","_this$props$params2","handleLinkProject","action","_this3","_this$props$params3","request","method","success","addSuccessMessage","t","e","addErrorMessage","handleProjectSelected","selection","find","p","value","handleQueryUpdate","evt","projectPanelContents","projects","_this4","canWrite","getAccess","length","sortProjects","map","i","react__WEBPACK_IMPORTED_MODULE_2___default","StyledPanelItem","app_views_settings_components_settingsProjectItem__WEBPACK_IMPORTED_MODULE_16__","context","app_components_tooltip__WEBPACK_IMPORTED_MODULE_5__","disabled","title","app_components_button__WEBPACK_IMPORTED_MODULE_9__","size","onClick","RemoveIcon","app_views_settings_components_emptyMessage__WEBPACK_IMPORTED_MODULE_12__","icon","_this5","_this$state","app_components_loadingError__WEBPACK_IMPORTED_MODULE_14__","onRetry","app_components_loadingIndicator__WEBPACK_IMPORTED_MODULE_13__","access","otherProjects","searchKey","label","ProjectListElement","Fragment","app_components_panels__WEBPACK_IMPORTED_MODULE_17__","hasButtons","style","textTransform","app_components_dropdownAutoComplete__WEBPACK_IMPORTED_MODULE_10__","items","onChange","onSelect","emptyMessage","_ref3","isOpen","selectedItem","app_components_dropdownButton__WEBPACK_IMPORTED_MODULE_11__","app_components_pagination__WEBPACK_IMPORTED_MODULE_19__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","app_components_inlineSvg__WEBPACK_IMPORTED_MODULE_18__","src","PanelItem"],"mappings":"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","file":"TeamProjects.js","sourcesContent":["import styled from 'react-emotion';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\n\nimport ApiMixin from 'app/mixins/apiMixin';\n\nimport BookmarkStar from 'app/components/bookmarkStar';\nimport Link from 'app/components/link';\nimport ProjectLabel from 'app/components/projectLabel';\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\n\nconst ProjectItem = createReactClass({\n  displayName: 'ProjectItem',\n\n  propTypes: {\n    project: SentryTypes.Project,\n    organization: SentryTypes.Organization,\n  },\n\n  mixins: [ApiMixin],\n\n  getInitialState() {\n    return {\n      isBookmarked: this.props.project.isBookmarked,\n    };\n  },\n\n  handleToggleBookmark(isBookmarked) {\n    this.setState({isBookmarked});\n  },\n\n  render() {\n    const {project, organization} = this.props;\n\n    const hasNewRoutes = new Set(organization.features).has('sentry10');\n\n    return (\n      <Container key={project.id}>\n        <BookmarkLink\n          organization={organization}\n          project={project}\n          isBookmarked={this.state.isBookmarked}\n          onToggle={this.handleToggleBookmark}\n        />\n        <Link\n          to={\n            hasNewRoutes\n              ? `/settings/${organization.slug}/projects/${project.slug}/`\n              : `/${organization.slug}/${project.slug}/`\n          }\n        >\n          <ProjectLabel project={project} />\n        </Link>\n      </Container>\n    );\n  },\n});\n\nconst Container = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst BookmarkLink = styled(BookmarkStar)`\n  margin-right: ${space(1)};\n  margin-top: -${space(0.25)};\n`;\n\nexport default ProjectItem;\n","import React from 'react';\nimport createReactClass from 'create-react-class';\nimport styled from 'react-emotion';\n\nimport Tooltip from 'app/components/tooltip';\nimport ApiMixin from 'app/mixins/apiMixin';\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport space from 'app/styles/space';\nimport Button from 'app/components/button';\nimport DropdownAutoComplete from 'app/components/dropdownAutoComplete';\nimport DropdownButton from 'app/components/dropdownButton';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport LoadingError from 'app/components/loadingError';\nimport OrganizationState from 'app/mixins/organizationState';\nimport ProjectListItem from 'app/views/settings/components/settingsProjectItem';\nimport {Panel, PanelHeader, PanelBody, PanelItem} from 'app/components/panels';\nimport InlineSvg from 'app/components/inlineSvg';\nimport Pagination from 'app/components/pagination';\nimport {sortProjects} from 'app/utils';\nimport {t} from 'app/locale';\n\nconst TeamProjects = createReactClass({\n  displayName: 'TeamProjects',\n  mixins: [ApiMixin, OrganizationState],\n\n  getInitialState() {\n    return {\n      error: false,\n      loading: true,\n      pageLinks: null,\n      unlinkedProjects: [],\n      linkedProjects: [],\n    };\n  },\n\n  componentDidMount() {\n    this.fetchAll();\n  },\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.params.orgId !== this.props.params.orgId ||\n      prevProps.params.teamId !== this.props.params.teamId\n    ) {\n      this.fetchAll();\n    }\n\n    if (prevProps.location !== this.props.location) {\n      this.fetchTeamProjects();\n    }\n  },\n\n  fetchAll() {\n    this.fetchTeamProjects();\n    this.fetchUnlinkedProjects();\n  },\n\n  fetchTeamProjects() {\n    const {location, params: {orgId, teamId}} = this.props;\n\n    this.setState({loading: true});\n\n    this.api\n      .requestPromise(`/organizations/${orgId}/projects/`, {\n        query: {\n          query: `team:${teamId}`,\n          cursor: location.query.cursor || '',\n        },\n        includeAllArgs: true,\n      })\n      .then(([linkedProjects, _, jqXHR]) => {\n        this.setState({\n          loading: false,\n          error: false,\n          linkedProjects,\n          pageLinks: jqXHR.getResponseHeader('Link'),\n        });\n      })\n      .catch(() => {\n        this.setState({loading: false, error: true});\n      });\n  },\n\n  fetchUnlinkedProjects(query) {\n    const {params: {orgId, teamId}} = this.props;\n\n    this.api\n      .requestPromise(`/organizations/${orgId}/projects/`, {\n        query: {\n          query: query ? `!team:${teamId} ${query}` : `!team:${teamId}`,\n        },\n      })\n      .then(unlinkedProjects => {\n        this.setState({unlinkedProjects});\n      });\n  },\n\n  handleLinkProject(project, action) {\n    const {orgId, teamId} = this.props.params;\n    this.api.request(`/projects/${orgId}/${project.slug}/teams/${teamId}/`, {\n      method: action === 'add' ? 'POST' : 'DELETE',\n      success: () => {\n        this.fetchAll();\n        addSuccessMessage(\n          action === 'add'\n            ? t('Successfully added project to team.')\n            : t('Successfully removed project from team')\n        );\n      },\n      error: e => {\n        addErrorMessage(t(\"Wasn't able to change project association.\"));\n      },\n    });\n  },\n\n  handleProjectSelected(selection) {\n    const project = this.state.unlinkedProjects.find(p => {\n      return p.id === selection.value;\n    });\n\n    this.handleLinkProject(project, 'add');\n  },\n\n  handleQueryUpdate(evt) {\n    this.fetchUnlinkedProjects(evt.target.value);\n  },\n\n  projectPanelContents(projects) {\n    const access = this.getAccess();\n    const canWrite = access.has('org:write');\n\n    return projects.length ? (\n      sortProjects(projects).map((project, i) => (\n        <StyledPanelItem key={project.id}>\n          <ProjectListItem project={project} organization={this.context.organization} />\n          <Tooltip\n            disabled={canWrite}\n            title={t('You do not have enough permission to change project association.')}\n          >\n            <Button\n              size=\"small\"\n              disabled={!canWrite}\n              onClick={() => {\n                this.handleLinkProject(project, 'remove');\n              }}\n            >\n              <RemoveIcon /> {t('Remove')}\n            </Button>\n          </Tooltip>\n        </StyledPanelItem>\n      ))\n    ) : (\n      <EmptyMessage size=\"large\" icon=\"icon-circle-exclamation\">\n        {t(\"This team doesn't have access to any projects.\")}\n      </EmptyMessage>\n    );\n  },\n\n  render() {\n    const {linkedProjects, unlinkedProjects, error, loading} = this.state;\n\n    if (error) {\n      return <LoadingError onRetry={() => this.fetchAll()} />;\n    }\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    const access = this.getAccess();\n\n    const otherProjects = unlinkedProjects.map(p => {\n      return {\n        value: p.id,\n        searchKey: p.slug,\n        label: <ProjectListElement>{p.slug}</ProjectListElement>,\n      };\n    });\n\n    return (\n      <React.Fragment>\n        <Panel>\n          <PanelHeader hasButtons={true}>\n            <div>{t('Projects')}</div>\n            <div style={{textTransform: 'none'}}>\n              {!access.has('org:write') ? (\n                <DropdownButton\n                  disabled\n                  title={t('You do not have enough permission to associate a project.')}\n                  size=\"xsmall\"\n                >\n                  {t('Add Project')}\n                </DropdownButton>\n              ) : (\n                <DropdownAutoComplete\n                  items={otherProjects}\n                  onChange={this.handleQueryUpdate}\n                  onSelect={this.handleProjectSelected}\n                  emptyMessage={t('No projects')}\n                >\n                  {({isOpen, selectedItem}) => (\n                    <DropdownButton isOpen={isOpen} size=\"xsmall\">\n                      {t('Add Project')}\n                    </DropdownButton>\n                  )}\n                </DropdownAutoComplete>\n              )}\n            </div>\n          </PanelHeader>\n          <PanelBody>{this.projectPanelContents(linkedProjects)}</PanelBody>\n        </Panel>\n        <Pagination pageLinks={this.state.pageLinks} {...this.props} />\n      </React.Fragment>\n    );\n  },\n});\n\nconst RemoveIcon = styled(props => (\n  <InlineSvg {...props} src=\"icon-circle-subtract\">\n    {t('Remove')}\n  </InlineSvg>\n))`\n  min-height: 1.25em;\n  min-width: 1.25em;\n  margin-right: ${space(1)};\n`;\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${space(2)};\n`;\n\nconst ProjectListElement = styled('div')`\n  padding: ${space(0.25)} 0;\n`;\n\nexport default TeamProjects;\n"],"sourceRoot":""}