.\" Man page generated from reStructuredText.
.
.TH "OS_OBJECT_PUT" "1" "Jul 08, 2019" "2.5.18" "OCI CLI Command Reference"
.SH NAME
os_object_put \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Creates a new object or overwrites an existing one.
.sp
The object can be uploaded as a single part or as multiple parts. Below are the rules for whether an object will be uploaded via single or multipart upload (listed in order of precedence):
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
If the object is being uploaded from STDIN, it will be uploaded as a multipart upload (if the object content is smaller than \-\-part\-size, default for STDIN is 10 MiB, the multipart upload may contain only one part, but it will still use the MultipartUpload API)
.IP \(bu 2
If the \-\-no\-multipart flag is specified, the object will be uploaded as a single part regardless of size (specifying \-\-no\-multipart when uploading from STDIN will result in an error)
.IP \(bu 2
If the object is larger than \-\-part\-size, it will be uploaded as multiple parts (the default part size is 128 MiB)
.IP \(bu 2
If the object is empty it will be uploaded as a single part
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Example:
oci os object put \-ns mynamespace \-bn mybucket \-\-name myfile.txt \-\-file /Users/me/myfile.txt \-\-metadata \(aq{"key1":"value1","key2":"value2"}\(aq
.UNINDENT
.SH USAGE
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci os object put [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.SS \-ns, \-\-namespace, \-\-namespace\-name [text]
.sp
The top\-level namespace used for the request. If not provided, this parameter will be obtained internally using a call to \(aqoci os ns get\(aq
.SS \-bn, \-\-bucket\-name [text]
.sp
The name of the bucket. [required]
.SS \-\-file [filename]
.sp
The file to load as the content of the object, or \(aq\-\(aq to read from STDIN. [required]
.SS \-\-name [text]
.sp
The name of the object. Default value is the filename excluding the path. Required if reading object from STDIN.
.SS \-\-if\-match [text]
.sp
The entity tag to match.
.SS \-\-content\-md5 [text]
.sp
The base\-64 encoded MD5 hash of the body.
.SS \-\-metadata [text]
.sp
Arbitrary string keys and values for user\-defined metadata. Must be in JSON format. Example: \(aq{"key1":"value1","key2":"value2"}\(aq
.SS \-\-content\-type [text]
.sp
The content type of the object. If content type is set to auto, then the CLI will guess the content type of the file.
.SS \-\-content\-language [text]
.sp
The content language of the object.
.SS \-\-content\-encoding [text]
.sp
The content encoding of the object.
.SS \-\-force
.sp
If the object already exists, overwrite the existing object without a confirmation prompt.
.SS \-\-no\-overwrite
.sp
If the object already exists, do not overwrite the existing object.
.SS \-\-no\-multipart
.sp
Do not use multipart uploads to upload the file in parts. By default files above 128 MiB will be uploaded in multiple parts, then combined server\-side.
.SS \-\-part\-size [integer]
.sp
Part size (in MiB) to use if uploading via multipart upload operations
.SS \-\-disable\-parallel\-uploads
.sp
If the object will be uploaded in multiple parts, this option disables those parts from being uploaded in parallel.
.SS \-\-parallel\-upload\-count [integer]
.sp
If the object will be uploaded in multiple parts, this option allows you to specify the maximum number of parts that can be uploaded in parallel. This option cannot be used with \-\-disable\-parallel\-uploads or \-\-no\-multipart. Defaults to 3.
.SS \-\-from\-json [text]
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \-\-generate\-full\-command\-json\-input option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id \-\-> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our "using CLI with advanced JSON options" link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.SS \-?, \-h, \-\-help
.sp
For detailed help on any of these individual commands, enter <command> \-\-help.
.SH AUTHOR
Oracle
.SH COPYRIGHT
2016, 2019, Oracle
.\" Generated by docutils manpage writer.
.
