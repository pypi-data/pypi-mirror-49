{"version":3,"sources":["webpack:////Users/captainsafia/github.com/nteract/nteract/packages/transform-vega/src/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","VegaEmbed","VegaLite1","Vega2","VegaLite2","Vega3","_nteract_vega_embed_v2__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","vega_embed__WEBPACK_IMPORTED_MODULE_3__","MIMETYPE_VEGA2","DEFAULT_WIDTH","DEFAULT_HEIGHT","embed","el","spec","mode","version","cb","embedSpec","Object","assign","config","cell","width","height","actions","then","result","catch","[object Object]","this","props","data","embedMode","renderedCallback","nextProps","ref","defaultProps","MIMETYPE","mediaType"],"mappings":"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","file":"vega-transform-212e4cdca29585f60306.bundle.js","sourcesContent":["import vegaEmbed2 from \"@nteract/vega-embed-v2\";\nimport { merge } from \"lodash\";\nimport * as React from \"react\";\nimport vegaEmbed3 from \"vega-embed\";\n\nconst MIMETYPE_VEGA2 = \"application/vnd.vega.v2+json\";\nconst MIMETYPE_VEGA3 = \"application/vnd.vega.v3+json\";\nconst MIMETYPE_VEGALITE1 = \"application/vnd.vegalite.v1+json\";\nconst MIMETYPE_VEGALITE2 = \"application/vnd.vegalite.v2+json\";\n\nconst DEFAULT_WIDTH = 500;\nconst DEFAULT_HEIGHT = DEFAULT_WIDTH / 1.5;\n\ninterface EmbedData {\n  config: object;\n}\n\ninterface EmbedProps {\n  data: EmbedData;\n  embedMode?: \"vega\" | \"vega-lite\";\n  version: string;\n  renderedCallback: (err: any, result: any) => any;\n}\n\nconst defaultCallback = (): any => {};\n\nfunction embed(\n  el: HTMLElement,\n  spec: EmbedData,\n  mode: \"vega\" | \"vega-lite\" | undefined,\n  version: string,\n  cb: (err?: any, result?: any) => any\n) {\n  if (version === \"vega2\") {\n    const embedSpec = {\n      mode,\n      spec: Object.assign({}, spec)\n    };\n\n    if (mode === \"vega-lite\") {\n      embedSpec.spec.config = merge(\n        {\n          cell: {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT\n          }\n        },\n        embedSpec.spec.config\n      );\n    }\n\n    vegaEmbed2(el, embedSpec, cb);\n  } else {\n    spec = Object.assign({}, spec);\n    if (mode === \"vega-lite\") {\n      spec.config = merge(\n        {\n          cell: {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT\n          }\n        },\n        spec.config\n      );\n    }\n\n    vegaEmbed3(el, spec, {\n      mode,\n      actions: false\n    })\n      .then(result => cb(null, result))\n      .catch(cb);\n  }\n}\n\nexport class VegaEmbed extends React.Component<Partial<EmbedProps>> {\n  static defaultProps = {\n    renderedCallback: defaultCallback,\n    embedMode: \"vega-lite\",\n    version: \"vega2\"\n  };\n\n  el?: HTMLElement | null;\n\n  componentDidMount(): void {\n    if (\n      this.el &&\n      this.props.data &&\n      this.props.embedMode &&\n      this.props.version &&\n      this.props.renderedCallback\n    ) {\n      embed(\n        this.el,\n        this.props.data,\n        this.props.embedMode,\n        this.props.version,\n        this.props.renderedCallback\n      );\n    }\n  }\n\n  shouldComponentUpdate(nextProps: EmbedProps): boolean {\n    return this.props.data !== nextProps.data;\n  }\n\n  componentDidUpdate(): void {\n    if (\n      this.el &&\n      this.props.data &&\n      this.props.embedMode &&\n      this.props.version &&\n      this.props.renderedCallback\n    ) {\n      embed(\n        this.el,\n        this.props.data,\n        this.props.embedMode,\n        this.props.version,\n        this.props.renderedCallback\n      );\n    }\n  }\n\n  render() {\n    // Note: We hide vega-actions since they won't work in our environment\n    // (this is only needed for vega2, since vega-embed v3 supports hiding\n    // actions via options)\n    return (\n      <React.Fragment>\n        <style>{\".vega-actions{ display: none; }\"}</style>\n        <div\n          ref={el => {\n            this.el = el;\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\ninterface Props<MediaType> {\n  data: EmbedData;\n  mediaType: MediaType;\n}\n\nexport function VegaLite1(\n  props: Partial<Props<\"application/vnd.vegalite.v1+json\">>\n) {\n  return <VegaEmbed data={props.data} embedMode=\"vega-lite\" version=\"vega2\" />;\n}\nVegaLite1.MIMETYPE = MIMETYPE_VEGALITE1;\nVegaLite1.defaultProps = {\n  mediaType: MIMETYPE_VEGA2\n};\n\nexport function Vega2(props: Partial<Props<\"application/vnd.vega.v2+json\">>) {\n  return <VegaEmbed data={props.data} embedMode=\"vega\" version=\"vega2\" />;\n}\nVega2.MIMETYPE = MIMETYPE_VEGA2;\nVega2.defaultProps = {\n  mediaType: MIMETYPE_VEGA2\n};\n\n// For backwards compatibility\nexport { VegaLite1 as VegaLite, Vega2 as Vega };\n\nexport function VegaLite2(\n  props: Partial<Props<\"application/vnd.vegalite.v2+json\">>\n) {\n  return <VegaEmbed data={props.data} embedMode=\"vega-lite\" version=\"vega3\" />;\n}\nVegaLite2.MIMETYPE = MIMETYPE_VEGALITE2;\nVegaLite2.defaultProps = {\n  mediaType: MIMETYPE_VEGALITE2\n};\n\nexport function Vega3(props: Partial<Props<\"application/vnd.vega.v3+json\">>) {\n  return <VegaEmbed data={props.data} embedMode=\"vega\" version=\"vega3\" />;\n}\nVega3.MIMETYPE = MIMETYPE_VEGA3;\nVega3.defaultProps = {\n  mediaType: MIMETYPE_VEGA3\n};\n"],"sourceRoot":""}