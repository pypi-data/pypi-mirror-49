{"version":3,"sources":["webpack:///./app/components/u2fContainer.jsx","webpack:///./app/components/modals/sudoModal.jsx"],"names":["U2fContainer","props","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","state","authenticators","api","Client","_this2","requestPromise","then","resp","setState","catch","clear","_this3","_this$state","className","length","react_default","a","createElement","map","_ref","id","other","objectWithoutProperties_default","challenge","u2fsign","extends_default","key","challengeData","React","Component","SudoModal","_getPrototypeOf2","_len","arguments","args","Array","_key","apply","concat","handleSuccess","_this$props","closeModal","superuser","router","retryRequest","replace","objectSpread_default","getCurrentLocation","forceUpdate","Date","busy","handleError","error","handleU2fTap","data","method","err","_this$props2","user","Header","Body","Fragment","closeButton","onHide","t","hasPasswordAuth","textBlock","Object","index_es","marginBottom","space","components_alert","type","icon","forms_form","apiMethod","apiEndpoint","submitLabel","onSubmit","handleSubmit","onSubmitSuccess","onSubmitError","hideErrors","resetOnError","hideFooter","inputField","autoFocus","inline","label","flexibleControlStateSize","name","paddingLeft","paddingRight","borderBottom","u2fContainer","displayMode","onTap","components_button","priority","href","encodeURIComponent","location","pathname","propTypes","PropTypes","object","func","isRequired","bool","oneOfType","node","SudoModalContainer","createReactClass","displayName","mixins","ApiMixin","render","ConfigStore","get","sudoModal_SudoModal","withRouter"],"mappings":"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","file":"SudoModal.js","sourcesContent":["import React from 'react';\n\nimport {Client} from 'app/api';\nimport U2fSign from 'app/components/u2fsign';\n\nclass U2fContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authenticators: null,\n    };\n    this.api = new Client();\n  }\n\n  componentDidMount() {\n    this.api\n      .requestPromise('/authenticators/')\n      .then(resp => {\n        this.setState({\n          authenticators: resp || [],\n        });\n      })\n      .catch(() => {\n        // ignore errors\n      });\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n    this.api = null;\n  }\n\n  render() {\n    const {className, authenticators} = this.state;\n    if (authenticators && authenticators.length) {\n      return (\n        <div className={className}>\n          {authenticators.map(({id, ...other}) => {\n            if (id === 'u2f' && other.challenge) {\n              return <U2fSign key={id} {...this.props} challengeData={other.challenge} />;\n            }\n\n            return null;\n          })}\n        </div>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default U2fContainer;\n","import {withRouter} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\n\nimport {t} from 'app/locale';\nimport Alert from 'app/components/alert';\nimport ApiMixin from 'app/mixins/apiMixin';\nimport Button from 'app/components/button';\nimport ConfigStore from 'app/stores/configStore';\nimport Form from 'app/views/settings/components/forms/form';\nimport InputField from 'app/views/settings/components/forms/inputField';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport U2fContainer from 'app/components/u2fContainer';\nimport space from 'app/styles/space';\n\nclass SudoModal extends React.Component {\n  static propTypes = {\n    api: PropTypes.object,\n    closeModal: PropTypes.func.isRequired,\n    /**\n     * expects a function that returns a Promise\n     */\n    retryRequest: PropTypes.func,\n\n    // User is a superuser without an active su session\n    superuser: PropTypes.bool,\n    router: PropTypes.object,\n    user: PropTypes.object,\n\n    Header: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n    Body: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  };\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false,\n      busy: false,\n    };\n  }\n\n  handleSuccess = () => {\n    const {closeModal, superuser, router, retryRequest} = this.props;\n\n    if (!retryRequest) {\n      closeModal();\n      return;\n    }\n\n    if (superuser) {\n      router.replace({...router.getCurrentLocation(), state: {forceUpdate: new Date()}});\n      return;\n    }\n\n    this.setState(\n      {\n        busy: true,\n      },\n      () => {\n        retryRequest().then(() => {\n          this.setState(\n            {\n              busy: false,\n            },\n            closeModal\n          );\n        });\n      }\n    );\n  };\n\n  handleError = () => {\n    this.setState({\n      busy: false,\n      error: true,\n    });\n  };\n\n  handleU2fTap = data => {\n    this.setState({busy: true});\n    // u2Interface expects this to return a promise\n    return this.props.api\n      .requestPromise('/auth/', {\n        method: 'PUT',\n        data,\n      })\n      .then(() => {\n        this.handleSuccess();\n      })\n      .catch(err => {\n        this.setState({busy: false});\n\n        // u2fInterface relies on this\n        throw err;\n      });\n  };\n\n  render() {\n    const {closeModal, superuser, user, Header, Body} = this.props;\n\n    return (\n      <React.Fragment>\n        <Header closeButton onHide={closeModal}>\n          {t('Confirm Password to Continue')}\n        </Header>\n\n        <Body>\n          {!user.hasPasswordAuth ? (\n            <div>\n              <TextBlock>{t('You will need to reauthenticate to continue.')}</TextBlock>\n              <Button\n                priority=\"primary\"\n                href={`/auth/login/?next=${encodeURIComponent(location.pathname)}`}\n              >\n                {t('Continue')}\n              </Button>\n            </div>\n          ) : (\n            <React.Fragment>\n              <TextBlock css={{marginBottom: space(1)}}>\n                {superuser\n                  ? t(\n                      'You are attempting to access a resource that requires superuser access, please re-authenticate as a superuser.'\n                    )\n                  : t('Help us keep your account safe by confirming your identity.')}\n              </TextBlock>\n\n              {this.state.error && (\n                <Alert\n                  css={{marginBottom: 0}}\n                  type=\"error\"\n                  icon=\"icon-circle-exclamation\"\n                >\n                  {t('Incorrect password')}\n                </Alert>\n              )}\n\n              <Form\n                apiMethod=\"PUT\"\n                apiEndpoint=\"/auth/\"\n                submitLabel={t('Confirm Password')}\n                onSubmit={this.handleSubmit}\n                onSubmitSuccess={this.handleSuccess}\n                onSubmitError={this.handleError}\n                hideErrors\n                resetOnError\n                hideFooter={!user.hasPasswordAuth}\n              >\n                <InputField\n                  autoFocus\n                  type=\"password\"\n                  inline={false}\n                  label={t('Password')}\n                  flexibleControlStateSize\n                  name=\"password\"\n                  css={{\n                    paddingLeft: 0,\n                    paddingRight: 0,\n                    borderBottom: 'none',\n                  }}\n                />\n                <U2fContainer displayMode=\"sudo\" onTap={this.handleU2fTap} />\n              </Form>\n            </React.Fragment>\n          )}\n        </Body>\n      </React.Fragment>\n    );\n  }\n}\n\nconst SudoModalContainer = createReactClass({\n  displayName: 'SudoModalContainer',\n  mixins: [ApiMixin],\n\n  render() {\n    const user = ConfigStore.get('user');\n    return <SudoModal {...this.props} user={user} api={this.api} />;\n  },\n});\n\nexport default withRouter(SudoModalContainer);\nexport {SudoModal};\n"],"sourceRoot":""}