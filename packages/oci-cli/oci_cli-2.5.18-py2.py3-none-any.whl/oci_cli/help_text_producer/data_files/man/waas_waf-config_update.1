.\" Man page generated from reStructuredText.
.
.TH "WAAS_WAF-CONFIG_UPDATE" "1" "Jul 08, 2019" "2.5.18" "OCI CLI Command Reference"
.SH NAME
waas_waf-config_update \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Updates the Web Application Firewall configuration for a specified WAAS policy.
.sp
To update platform provided resources such as \fIGoodBots\fP, \fIProtectionRules\fP, and \fIThreatFeeds\fP first retrieve the list of available resources with the related list operation such as \fIGetThreatFeeds\fP or \fIGetProtectionRules\fP\&.
.sp
The returned list will contain objects with \fIkey\fP properties that can be used to update the resource during the \fIUpdateWafConfig\fP request.
.SH USAGE
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci waas waf\-config update [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.SS \-\-waas\-policy\-id [text]
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm\fP> of the WAAS policy. [required]
.SS \-\-access\-rules [complex type]
.sp
The access rules applied to the Web Application Firewall. Used for defining custom access policies with the combination of \fIALLOW\fP, \fIDETECT\fP, and \fIBLOCK\fP rules, based on different criteria.
.sp
This option is a JSON list with items of type AccessRule.  For documentation on AccessRule please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/waas/20181116/datatypes/AccessRule\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \-\-generate\-param\-json\-input option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS \-\-address\-rate\-limiting [complex type]
.sp
The IP address rate limiting settings used to limit the number of requests from an address.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \-\-generate\-param\-json\-input option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS \-\-captchas [complex type]
.sp
A list of CAPTCHA challenge settings. These are used to challenge requests with a CAPTCHA to block bots.
.sp
This option is a JSON list with items of type Captcha.  For documentation on Captcha please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/waas/20181116/datatypes/Captcha\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \-\-generate\-param\-json\-input option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS \-\-device\-fingerprint\-challenge [complex type]
.sp
The device fingerprint challenge settings. Used to detect unique devices based on the device fingerprint information collected in order to block bots.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \-\-generate\-param\-json\-input option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS \-\-good\-bots [complex type]
.sp
A list of bots allowed to access the web application.
.sp
This option is a JSON list with items of type GoodBot.  For documentation on GoodBot please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/waas/20181116/datatypes/GoodBot\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \-\-generate\-param\-json\-input option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS \-\-human\-interaction\-challenge [complex type]
.sp
The human interaction challenge settings. Used to look for natural human interactions such as mouse movements, time on site, and page scrolling to identify bots.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \-\-generate\-param\-json\-input option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS \-\-js\-challenge [complex type]
.sp
The JavaScript challenge settings. Used to challenge requests with a JavaScript challenge and take the action if a browser has no JavaScript support in order to block bots.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \-\-generate\-param\-json\-input option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS \-\-origin [text]
.sp
The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in \fIOrigins\fP\&. Required when creating the \fIWafConfig\fP resource, but not on update.
.SS \-\-protection\-rules [complex type]
.sp
A list of the protection rules and their details.
.sp
This option is a JSON list with items of type ProtectionRule.  For documentation on ProtectionRule please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/waas/20181116/datatypes/ProtectionRule\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \-\-generate\-param\-json\-input option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS \-\-protection\-settings [complex type]
.sp
The settings to apply to protection rules.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \-\-generate\-param\-json\-input option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS \-\-threat\-feeds [complex type]
.sp
A list of threat intelligence feeds and the actions to apply to known malicious traffic based on internet intelligence.
.sp
This option is a JSON list with items of type ThreatFeed.  For documentation on ThreatFeed please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/waas/20181116/datatypes/ThreatFeed\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \-\-generate\-param\-json\-input option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS \-\-whitelists [complex type]
.sp
A list of IP addresses that bypass the Web Application Firewall.
.sp
This option is a JSON list with items of type Whitelist.  For documentation on Whitelist please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/waas/20181116/datatypes/Whitelist\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \-\-generate\-param\-json\-input option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS \-\-if\-match [text]
.sp
For optimistic concurrency control. In the \fIPUT\fP or \fIDELETE\fP call for a resource, set the \fIif\-match\fP parameter to the value of the etag from a previous \fIGET\fP or \fIPOST\fP response for that resource. The resource will be updated or deleted only if the etag provided matches the resource\(aqs current etag value.
.SS \-\-force
.sp
Perform update without prompting for confirmation.
.SS \-\-wait\-for\-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED|CANCELING|CANCELED]
.sp
This operation asynchronously creates, modifies or deletes a resource and uses a work request to track the progress of the operation. Specify this option to perform the action and then wait until the work request reaches a certain state. If timeout is reached, a return code of 2 is returned. For any other error, a return code of 1 is returned.
.SS \-\-max\-wait\-seconds [integer]
.sp
The maximum time to wait for the work request to reach the state defined by \-\-wait\-for\-state. Defaults to 1200 seconds.
.SS \-\-wait\-interval\-seconds [integer]
.sp
Check every \-\-wait\-interval\-seconds to see whether the work request to see if it has reached the state defined by \-\-wait\-for\-state. Defaults to 30 seconds.
.SS \-\-from\-json [text]
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \-\-generate\-full\-command\-json\-input option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id \-\-> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our "using CLI with advanced JSON options" link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.SS \-?, \-h, \-\-help
.sp
For detailed help on any of these individual commands, enter <command> \-\-help.
.SH AUTHOR
Oracle
.SH COPYRIGHT
2016, 2019, Oracle
.\" Generated by docutils manpage writer.
.
